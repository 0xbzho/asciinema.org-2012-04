[[1.235846,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$                                                       ",{}]],"1":[["                                                                                                   ",{}]],"2":[["                                                                                                   ",{}]],"3":[["                                                                                                   ",{}]],"4":[["                                                                                                   ",{}]],"5":[["                                                                                                   ",{}]],"6":[["                                                                                                   ",{}]],"7":[["                                                                                                   ",{}]],"8":[["                                                                                                   ",{}]],"9":[["                                                                                                   ",{}]],"10":[["                                                                                                   ",{}]],"11":[["                                                                                                   ",{}]],"12":[["                                                                                                   ",{}]],"13":[["                                                                                                   ",{}]],"14":[["                                                                                                   ",{}]],"15":[["                                                                                                   ",{}]],"16":[["                                                                                                   ",{}]],"17":[["                                                                                                   ",{}]],"18":[["                                                                                                   ",{}]],"19":[["                                                                                                   ",{}]],"20":[["                                                                                                   ",{}]],"21":[["                                                                                                   ",{}]],"22":[["                                                                                                   ",{}]],"23":[["                                                                                                   ",{}]],"24":[["                                                                                                   ",{}]],"25":[["                                                                                                   ",{}]],"26":[["                                                                                                   ",{}]],"27":[["                                                                                                   ",{}]],"28":[["                                                                                                   ",{}]],"29":[["                                                                                                   ",{}]],"30":[["                                                                                                   ",{}]],"31":[["                                                                                                   ",{}]],"32":[["                                                                                                   ",{}]],"33":[["                                                                                                   ",{}]],"34":[["                                                                                                   ",{}]],"35":[["                                                                                                   ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                                   ",{}]]},"cursor":{"x":45,"y":0,"visible":true}}],[0.451107,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ v                                                     ",{}]]},"cursor":{"x":46}}],[0.048729,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vi                                                    ",{}]]},"cursor":{"x":47}}],[0.071144,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim                                                   ",{}]]},"cursor":{"x":48}}],[0.088462,{"cursor":{"x":49}}],[0.135589,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim c                                                 ",{}]]},"cursor":{"x":50}}],[0.09536,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch                                                ",{}]]},"cursor":{"x":51}}],[0.224656,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch1                                               ",{}]]},"cursor":{"x":52}}],[0.104118,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch15                                              ",{}]]},"cursor":{"x":53}}],[0.296374,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch15_                                             ",{}]]},"cursor":{"x":54}}],[0.151573,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch15_3                                            ",{}]]},"cursor":{"x":55}}],[0.120302,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch15_3.                                           ",{}]]},"cursor":{"x":56}}],[0.175647,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch15_3.c                                          ",{}]]},"cursor":{"x":57}}],[0.096083,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch15_3.cp                                         ",{}]]},"cursor":{"x":58}}],[0.112068,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch15_3.cpp                                        ",{}]]},"cursor":{"x":59}}],[0.232775,{"cursor":{"x":0,"y":1}}],[0.024331,{"lines":{"0":[["                                                                                                   ",{}]]}}],[0.004435000000000001,{"lines":{"1":[["~                                                                                                  ",{"fg":4,"bold":true}]],"2":[["~                                                                                                  ",{"fg":4,"bold":true}]],"3":[["~                                                                                                  ",{"fg":4,"bold":true}]],"4":[["~                                                                                                  ",{"fg":4,"bold":true}]],"5":[["~                                                                                                  ",{"fg":4,"bold":true}]],"6":[["~                                                                                                  ",{"fg":4,"bold":true}]],"7":[["~                                                                                                  ",{"fg":4,"bold":true}]],"8":[["~                                                                                                  ",{"fg":4,"bold":true}]],"9":[["~                                                                                                  ",{"fg":4,"bold":true}]],"10":[["~                                                                                                  ",{"fg":4,"bold":true}]],"11":[["~                                                                                                  ",{"fg":4,"bold":true}]],"12":[["~                                                                                                  ",{"fg":4,"bold":true}]],"13":[["~                                                                                                  ",{"fg":4,"bold":true}]],"14":[["~                                                                                                  ",{"fg":4,"bold":true}]],"15":[["~                                                                                                  ",{"fg":4,"bold":true}]],"16":[["~                                                                                                  ",{"fg":4,"bold":true}]],"17":[["~                                                                                                  ",{"fg":4,"bold":true}]],"18":[["~                                                                                                  ",{"fg":4,"bold":true}]],"19":[["~                                                                                                  ",{"fg":4,"bold":true}]],"20":[["~                                                                                                  ",{"fg":4,"bold":true}]],"21":[["~                                                                                                  ",{"fg":4,"bold":true}]],"22":[["~                                                                                                  ",{"fg":4,"bold":true}]],"23":[["~                                                                                                  ",{"fg":4,"bold":true}]],"24":[["~                                                                                                  ",{"fg":4,"bold":true}]],"25":[["~                                                                                                  ",{"fg":4,"bold":true}]],"26":[["~                                                                                                  ",{"fg":4,"bold":true}]],"27":[["~                                                                                                  ",{"fg":4,"bold":true}]],"28":[["~                                                                                                  ",{"fg":4,"bold":true}]],"29":[["~                                                                                                  ",{"fg":4,"bold":true}]],"30":[["~                                                                                                  ",{"fg":4,"bold":true}]],"31":[["~                                                                                                  ",{"fg":4,"bold":true}]],"32":[["~                                                                                                  ",{"fg":4,"bold":true}]],"33":[["~                                                                                                  ",{"fg":4,"bold":true}]],"34":[["~                                                                                                  ",{"fg":4,"bold":true}]],"35":[["~                                                                                                  ",{"fg":4,"bold":true}]],"36":[["~                                                                                                  ",{"fg":4,"bold":true}]],"37":[["\"ch15_3.cpp\" [New File]                                                          0,0-1         All ",{}]]},"cursor":{"y":0}}],[0.90656,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     0,1           All ",{}]]}}],[1.280254,{"lines":{"0":[["/                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,2           All ",{}]]},"cursor":{"x":1}}],[0.14395,{"lines":{"0":[["//",{"fg":4}],["                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,3           All ",{}]]},"cursor":{"x":2}}],[0.127965,{"lines":{"0":[["// ",{"fg":4}],["                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,4           All ",{}]]},"cursor":{"x":3}}],[0.240025,{"lines":{"0":[["// A",{"fg":4}],["                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,5           All ",{}]]},"cursor":{"x":4}}],[0.184042,{"lines":{"0":[["// A ",{"fg":4}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,6           All ",{}]]},"cursor":{"x":5}}],[0.200052,{"lines":{"0":[["// A c",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,7           All ",{}]]},"cursor":{"x":6}}],[0.248124,{"lines":{"0":[["// A cl",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,8           All ",{}]]},"cursor":{"x":7}}],[0.831785,{"lines":{"0":[["// A cla",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,9           All ",{}]]},"cursor":{"x":8}}],[0.215996,{"lines":{"0":[["// A clas",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,10          All ",{}]]},"cursor":{"x":9}}],[0.151781,{"lines":{"0":[["// A class",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,11          All ",{}]]},"cursor":{"x":10}}],[0.136156,{"lines":{"0":[["// A class ",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,12          All ",{}]]},"cursor":{"x":11}}],[0.4801,{"lines":{"0":[["// A class t",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,13          All ",{}]]},"cursor":{"x":12}}],[0.12032,{"lines":{"0":[["// A class th",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,14          All ",{}]]},"cursor":{"x":13}}],[0.055537,{"lines":{"0":[["// A class tha",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,15          All ",{}]]},"cursor":{"x":14}}],[0.08816400000000001,{"lines":{"0":[["// A class that",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,16          All ",{}]]},"cursor":{"x":15}}],[0.08797000000000001,{"lines":{"0":[["// A class that ",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,17          All ",{}]]},"cursor":{"x":16}}],[0.224046,{"lines":{"0":[["// A class that k",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,18          All ",{}]]},"cursor":{"x":17}}],[0.079971,{"lines":{"0":[["// A class that ke",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,19          All ",{}]]},"cursor":{"x":18}}],[0.159944,{"lines":{"0":[["// A class that kee",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,20          All ",{}]]},"cursor":{"x":19}}],[0.10403,{"lines":{"0":[["// A class that keep",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,21          All ",{}]]},"cursor":{"x":20}}],[0.104,{"lines":{"0":[["// A class that keeps",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,22          All ",{}]]},"cursor":{"x":21}}],[0.088098,{"lines":{"0":[["// A class that keeps ",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,23          All ",{}]]},"cursor":{"x":22}}],[0.159898,{"lines":{"0":[["// A class that keeps c",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,24          All ",{}]]},"cursor":{"x":23}}],[0.07202500000000001,{"lines":{"0":[["// A class that keeps co",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,25          All ",{}]]},"cursor":{"x":24}}],[0.072168,{"lines":{"0":[["// A class that keeps cou",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,26          All ",{}]]},"cursor":{"x":25}}],[0.167736,{"lines":{"0":[["// A class that keeps coun",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,27          All ",{}]]},"cursor":{"x":26}}],[0.032421,{"lines":{"0":[["// A class that keeps count",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,28          All ",{}]]},"cursor":{"x":27}}],[0.167698,{"lines":{"0":[["// A class that keeps counts",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,29          All ",{}]]},"cursor":{"x":28}}],[0.07996499999999999,{"lines":{"0":[["// A class that keeps counts ",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,30          All ",{}]]},"cursor":{"x":29}}],[0.152018,{"lines":{"0":[["// A class that keeps counts f",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,31          All ",{}]]},"cursor":{"x":30}}],[0.119746,{"lines":{"0":[["// A class that keeps counts fo",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,32          All ",{}]]},"cursor":{"x":31}}],[0.032851,{"lines":{"0":[["// A class that keeps counts for",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,33          All ",{}]]},"cursor":{"x":32}}],[0.119296,{"lines":{"0":[["// A class that keeps counts for ",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,34          All ",{}]]},"cursor":{"x":33}}],[0.128111,{"lines":{"0":[["// A class that keeps counts for t",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,35          All ",{}]]},"cursor":{"x":34}}],[0.087991,{"lines":{"0":[["// A class that keeps counts for th",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,36          All ",{}]]},"cursor":{"x":35}}],[0.08802400000000001,{"lines":{"0":[["// A class that keeps counts for the",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,37          All ",{}]]},"cursor":{"x":36}}],[0.096162,{"lines":{"0":[["// A class that keeps counts for the ",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,38          All ",{}]]},"cursor":{"x":37}}],[0.199825,{"lines":{"0":[["// A class that keeps counts for the p",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,39          All ",{}]]},"cursor":{"x":38}}],[0.063962,{"lines":{"0":[["// A class that keeps counts for the pa",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,40          All ",{}]]},"cursor":{"x":39}}],[0.128134,{"lines":{"0":[["// A class that keeps counts for the pas",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,41          All ",{}]]},"cursor":{"x":40}}],[0.104037,{"lines":{"0":[["// A class that keeps counts for the past",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,42          All ",{}]]},"cursor":{"x":41}}],[0.079813,{"lines":{"0":[["// A class that keeps counts for the past ",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,43          All ",{}]]},"cursor":{"x":42}}],[0.264107,{"lines":{"0":[["// A class that keeps counts for the past N",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,44          All ",{}]]},"cursor":{"x":43}}],[0.191887,{"lines":{"0":[["// A class that keeps counts for the past N ",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,45          All ",{}]]},"cursor":{"x":44}}],[0.216112,{"lines":{"0":[["// A class that keeps counts for the past N b",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,46          All ",{}]]},"cursor":{"x":45}}],[0.111974,{"lines":{"0":[["// A class that keeps counts for the past N bu",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,47          All ",{}]]},"cursor":{"x":46}}],[0.144375,{"lines":{"0":[["// A class that keeps counts for the past N buc",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,48          All ",{}]]},"cursor":{"x":47}}],[0.11989,{"lines":{"0":[["// A class that keeps counts for the past N buck",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,49          All ",{}]]},"cursor":{"x":48}}],[0.111682,{"lines":{"0":[["// A class that keeps counts for the past N bucke",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,50          All ",{}]]},"cursor":{"x":49}}],[0.080053,{"lines":{"0":[["// A class that keeps counts for the past N bucket",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,51          All ",{}]]},"cursor":{"x":50}}],[0.167989,{"lines":{"0":[["// A class that keeps counts for the past N buckets",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,52          All ",{}]]},"cursor":{"x":51}}],[0.104056,{"lines":{"0":[["// A class that keeps counts for the past N buckets ",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,53          All ",{}]]},"cursor":{"x":52}}],[0.21606,{"lines":{"0":[["// A class that keeps counts for the past N buckets o",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,54          All ",{}]]},"cursor":{"x":53}}],[0.2159,{"lines":{"0":[["// A class that keeps counts for the past N buckets of",{"fg":4}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,55          All ",{}]]},"cursor":{"x":54}}],[0.183941,{"lines":{"0":[["// A class that keeps counts for the past N buckets of ",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,56          All ",{}]]},"cursor":{"x":55}}],[0.127929,{"lines":{"0":[["// A class that keeps counts for the past N buckets of t",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,57          All ",{}]]},"cursor":{"x":56}}],[0.088139,{"lines":{"0":[["// A class that keeps counts for the past N buckets of ti",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,58          All ",{}]]},"cursor":{"x":57}}],[0.152176,{"lines":{"0":[["// A class that keeps counts for the past N buckets of tim",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,59          All ",{}]]},"cursor":{"x":58}}],[0.111848,{"lines":{"0":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,60          All ",{}]]},"cursor":{"x":59}}],[0.152196,{"lines":{"1":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,1           All ",{}]]},"cursor":{"x":0,"y":1}}],[0.751588,{"lines":{"1":[["c                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,2           All ",{}]]},"cursor":{"x":1}}],[0.143965,{"lines":{"1":[["cl                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,3           All ",{}]]},"cursor":{"x":2}}],[0.087495,{"lines":{"1":[["cla                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,4           All ",{}]]},"cursor":{"x":3}}],[0.088738,{"lines":{"1":[["clas                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,5           All ",{}]]},"cursor":{"x":4}}],[0.151832,{"lines":{"1":[["class",{"fg":2}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,6           All ",{}]]},"cursor":{"x":5}}],[0.120162,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     2,7           All ",{}]]},"cursor":{"x":6}}],[0.239861,{"lines":{"1":[["class",{"fg":2}],[" T                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,8           All ",{}]]},"cursor":{"x":7}}],[0.152014,{"lines":{"1":[["class",{"fg":2}],[" Tr                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,9           All ",{}]]},"cursor":{"x":8}}],[0.104064,{"lines":{"1":[["class",{"fg":2}],[" Tra                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,10          All ",{}]]},"cursor":{"x":9}}],[0.215986,{"lines":{"1":[["class",{"fg":2}],[" Trai                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,11          All ",{}]]},"cursor":{"x":10}}],[0.248207,{"lines":{"1":[["class",{"fg":2}],[" Trail                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,12          All ",{}]]},"cursor":{"x":11}}],[0.127435,{"lines":{"1":[["class",{"fg":2}],[" Traili                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,13          All ",{}]]},"cursor":{"x":12}}],[0.136372,{"lines":{"1":[["class",{"fg":2}],[" Trailin                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,14          All ",{}]]},"cursor":{"x":13}}],[0.103886,{"lines":{"1":[["class",{"fg":2}],[" Trailing                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,15          All ",{}]]},"cursor":{"x":14}}],[0.256018,{"lines":{"1":[["class",{"fg":2}],[" TrailingB                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,16          All ",{}]]},"cursor":{"x":15}}],[0.104274,{"lines":{"1":[["class",{"fg":2}],[" TrailingBU                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,17          All ",{}]]},"cursor":{"x":16}}],[0.479797,{"lines":{"1":[["class",{"fg":2}],[" TrailingBUc                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,18          All ",{}]]},"cursor":{"x":17}}],[0.127964,{"lines":{"1":[["class",{"fg":2}],[" TrailingBUck                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,19          All ",{}]]},"cursor":{"x":18}}],[0.160029,{"lines":{"1":[["class",{"fg":2}],[" TrailingBUcke                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,20          All ",{}]]},"cursor":{"x":19}}],[0.191986,{"lines":{"1":[["class",{"fg":2}],[" TrailingBUcket                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,21          All ",{}]]},"cursor":{"x":20}}],[0.408063,{"lines":{"1":[["class",{"fg":2}],[" TrailingBUcketC                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,22          All ",{}]]},"cursor":{"x":21}}],[0.359953,{"lines":{"1":[["class",{"fg":2}],[" TrailingBUcketCo                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,23          All ",{}]]},"cursor":{"x":22}}],[0.103941,{"lines":{"1":[["class",{"fg":2}],[" TrailingBUcketCou                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,24          All ",{}]]},"cursor":{"x":23}}],[0.192,{"lines":{"1":[["class",{"fg":2}],[" TrailingBUcketCoun                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,25          All ",{}]]},"cursor":{"x":24}}],[0.072115,{"lines":{"1":[["class",{"fg":2}],[" TrailingBUcketCount                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,26          All ",{}]]},"cursor":{"x":25}}],[0.096259,{"lines":{"1":[["class",{"fg":2}],[" TrailingBUcketCounte                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,27          All ",{}]]},"cursor":{"x":26}}],[0.095693,{"lines":{"1":[["class",{"fg":2}],[" TrailingBUcketCounter                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,28          All ",{}]]},"cursor":{"x":27}}],[0.120026,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     2,29          All ",{}]]},"cursor":{"x":28}}],[0.415118,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     2,28          All ",{}]]},"cursor":{"x":27}}],[0.521398,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":26}}],[0.343504,{"lines":{"37":[["                                                                                 2,26          All ",{}]]},"cursor":{"x":25}}],[0.500074,{"lines":{"37":[["                                                                                 2,25          All ",{}]]},"cursor":{"x":24}}],[0.031262,{"lines":{"37":[["                                                                                 2,24          All ",{}]]},"cursor":{"x":23}}],[0.031286,{"lines":{"37":[["                                                                                 2,23          All ",{}]]},"cursor":{"x":22}}],[0.030717,{"lines":{"37":[["                                                                                 2,22          All ",{}]]},"cursor":{"x":21}}],[0.030293,{"lines":{"37":[["                                                                                 2,21          All ",{}]]},"cursor":{"x":20}}],[0.031149,{"lines":{"37":[["                                                                                 2,20          All ",{}]]},"cursor":{"x":19}}],[0.030142,{"lines":{"37":[["                                                                                 2,19          All ",{}]]},"cursor":{"x":18}}],[0.030179,{"lines":{"37":[["                                                                                 2,18          All ",{}]]},"cursor":{"x":17}}],[0.030092,{"lines":{"37":[["                                                                                 2,17          All ",{}]]},"cursor":{"x":16}}],[0.030781,{"lines":{"37":[["                                                                                 2,16          All ",{}]]},"cursor":{"x":15}}],[0.207946,{"lines":{"37":[["                                                                                 2,15          All ",{}]]},"cursor":{"x":14}}],[0.367921,{"lines":{"37":[["                                                                                 2,16          All ",{}]]},"cursor":{"x":15}}],[0.312073,{"lines":{"1":[["class",{"fg":2}],[" TrailingBucketCounter                                                                        ",{}]]}}],[0.279771,{"lines":{"37":[["                                                                                 2,27          All ",{}]]},"cursor":{"x":26}}],[0.256055,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     2,28          All ",{}]]},"cursor":{"x":27}}],[0.160118,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     2,29          All ",{}]]},"cursor":{"x":28}}],[0.192355,{"lines":{"1":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,30          All ",{}]]},"cursor":{"x":29}}],[0.161184,{"lines":{"2":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,1           All ",{}]]},"cursor":{"x":0,"y":2}}],[0.303177,{"lines":{"1":[["class",{"fg":2}],[" TrailingBucketCounter ",{}],["{",{"bg":6}],["                                                                      ",{}]],"2":[["}",{"bg":6}],["                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,2           All ",{}]]},"cursor":{"x":1}}],[0.448136,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":0}}],[0.472218,{"lines":{"1":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"2":[["}                                                                                                  ",{}]],"37":[["                                                                                 2,1           All ",{}]]},"cursor":{"y":1}}],[0.215074,{"lines":{"2":[["                                                                                                   ",{}]],"3":[["}                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,1           All ",{}]]},"cursor":{"y":2}}],[0.200093,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     3,5           All ",{}]]},"cursor":{"x":4}}],[0.783882,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     3,1           All ",{}]]},"cursor":{"x":0}}],[0.431999,{"lines":{"2":[["p                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,2           All ",{}]]},"cursor":{"x":1}}],[0.127886,{"lines":{"2":[["pu                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,3           All ",{}]]},"cursor":{"x":2}}],[0.151964,{"lines":{"2":[["pub                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,4           All ",{}]]},"cursor":{"x":3}}],[0.144203,{"lines":{"2":[["publ                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,5           All ",{}]]},"cursor":{"x":4}}],[0.023807,{"lines":{"2":[["publi                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,6           All ",{}]]},"cursor":{"x":5}}],[0.080036,{"lines":{"2":[["public",{"fg":3}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,7           All ",{}]]},"cursor":{"x":6}}],[0.576009,{"lines":{"2":[["public",{"fg":3}],[":                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,8           All ",{}]]},"cursor":{"x":7}}],[0.655268,{"lines":{"3":[["                                                                                                   ",{}]],"4":[["}                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,1           All ",{}]]},"cursor":{"x":0,"y":3}}],[0.6248,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     4,5           All ",{}]]},"cursor":{"x":4}}],[0.271927,{"lines":{"3":[["    T                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,6           All ",{}]]},"cursor":{"x":5}}],[0.168077,{"lines":{"3":[["    Tr                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,7           All ",{}]]},"cursor":{"x":6}}],[0.112017,{"lines":{"3":[["    Tra                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,8           All ",{}]]},"cursor":{"x":7}}],[0.216608,{"lines":{"3":[["    Trai                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,9           All ",{}]]},"cursor":{"x":8}}],[0.215339,{"lines":{"3":[["    Trail                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,10          All ",{}]]},"cursor":{"x":9}}],[0.184021,{"lines":{"3":[["    Traili                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,11          All ",{}]]},"cursor":{"x":10}}],[0.208109,{"lines":{"3":[["    Trailin                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,12          All ",{}]]},"cursor":{"x":11}}],[0.10393,{"lines":{"3":[["    Trailing                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,13          All ",{}]]},"cursor":{"x":12}}],[0.216007,{"lines":{"3":[["    TrailingB                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,14          All ",{}]]},"cursor":{"x":13}}],[0.135999,{"lines":{"3":[["    TrailingBu                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,15          All ",{}]]},"cursor":{"x":14}}],[0.159993,{"lines":{"3":[["    TrailingBuc                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,16          All ",{}]]},"cursor":{"x":15}}],[0.127954,{"lines":{"3":[["    TrailingBuck                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,17          All ",{}]]},"cursor":{"x":16}}],[0.096007,{"lines":{"3":[["    TrailingBucke                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,18          All ",{}]]},"cursor":{"x":17}}],[0.088042,{"lines":{"3":[["    TrailingBucket                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,19          All ",{}]]},"cursor":{"x":18}}],[0.207984,{"lines":{"3":[["    TrailingBucketC                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,20          All ",{}]]},"cursor":{"x":19}}],[0.480024,{"lines":{"3":[["    TrailingBucketCo                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,21          All ",{}]]},"cursor":{"x":20}}],[0.176014,{"lines":{"3":[["    TrailingBucketCou                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,22          All ",{}]]},"cursor":{"x":21}}],[0.199977,{"lines":{"3":[["    TrailingBucketCoun                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,23          All ",{}]]},"cursor":{"x":22}}],[0.135685,{"lines":{"3":[["    TrailingBucketCount                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,24          All ",{}]]},"cursor":{"x":23}}],[0.120422,{"lines":{"3":[["    TrailingBucketCounte                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,25          All ",{}]]},"cursor":{"x":24}}],[0.07993500000000001,{"lines":{"3":[["    TrailingBucketCounter                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,26          All ",{}]]},"cursor":{"x":25}}],[0.384837,{"lines":{"3":[["    TrailingBucketCounter(                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,27          All ",{}]]},"cursor":{"x":26}}],[0.455135,{"lines":{"3":[["    TrailingBucketCounter(i                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,28          All ",{}]]},"cursor":{"x":27}}],[0.063942,{"lines":{"3":[["    TrailingBucketCounter(in                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,29          All ",{}]]},"cursor":{"x":28}}],[0.09597,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,30          All ",{}]]},"cursor":{"x":29}}],[0.096261,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     4,31          All ",{}]]},"cursor":{"x":30}}],[0.471937,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" n                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,32          All ",{}]]},"cursor":{"x":31}}],[0.159977,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" nu                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,33          All ",{}]]},"cursor":{"x":32}}],[0.159991,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,34          All ",{}]]},"cursor":{"x":33}}],[0.200605,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,35          All ",{}]]},"cursor":{"x":34}}],[0.311473,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_b                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,36          All ",{}]]},"cursor":{"x":35}}],[0.095914,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_bu                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,37          All ",{}]]},"cursor":{"x":36}}],[0.184019,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buc                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,38          All ",{}]]},"cursor":{"x":37}}],[0.119991,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buck                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,39          All ",{}]]},"cursor":{"x":38}}],[0.128109,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_bucke                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,40          All ",{}]]},"cursor":{"x":39}}],[0.071932,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_bucket                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,41          All ",{}]]},"cursor":{"x":40}}],[0.167994,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,42          All ",{}]]},"cursor":{"x":41}}],[0.128042,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets,                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,43          All ",{}]]},"cursor":{"x":42}}],[0.087939,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     4,44          All ",{}]]},"cursor":{"x":43}}],[0.144131,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, i                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,45          All ",{}]]},"cursor":{"x":44}}],[0.063773,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, in                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,46          All ",{}]]},"cursor":{"x":45}}],[0.080027,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,47          All ",{}]]},"cursor":{"x":46}}],[0.040359,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     4,48          All ",{}]]},"cursor":{"x":47}}],[0.175733,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" s                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,49          All ",{}]]},"cursor":{"x":48}}],[0.112089,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" se                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,50          All ",{}]]},"cursor":{"x":49}}],[0.183991,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" sec                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,51          All ",{}]]},"cursor":{"x":50}}],[0.183891,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,52          All ",{}]]},"cursor":{"x":51}}],[0.456178,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,53          All ",{}]]},"cursor":{"x":52}}],[0.247831,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_p                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,54          All ",{}]]},"cursor":{"x":53}}],[0.06507300000000001,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_pe                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,55          All ",{}]]},"cursor":{"x":54}}],[0.071936,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,56          All ",{}]]},"cursor":{"x":55}}],[0.335333,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,57          All ",{}]]},"cursor":{"x":56}}],[0.583977,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_b                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,58          All ",{}]]},"cursor":{"x":57}}],[0.08783299999999999,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bu                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,59          All ",{}]]},"cursor":{"x":58}}],[0.119934,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_buc                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,60          All ",{}]]},"cursor":{"x":59}}],[0.104221,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_buck                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,61          All ",{}]]},"cursor":{"x":60}}],[0.103785,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucke                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,62          All ",{}]]},"cursor":{"x":61}}],[0.063931,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,63          All ",{}]]},"cursor":{"x":62}}],[1.041423,{"lines":{"3":[["    TrailingBucketCounter",{}],["(",{"bg":6}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket",{}],[")",{"bg":6}],["                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,64          All ",{}]]},"cursor":{"x":63}}],[0.615398,{"lines":{"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,65          All ",{}]]},"cursor":{"x":64}}],[0.279312,{"lines":{"4":[["                                                                                                   ",{}]],"5":[["}                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,5           All ",{}]]},"cursor":{"x":4,"y":4}}],[0.183889,{"lines":{"5":[["                                                                                                   ",{}]],"6":[["}                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,5           All ",{}]]},"cursor":{"y":5}}],[0.327888,{"lines":{"5":[["    v                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,6           All ",{}]]},"cursor":{"x":5}}],[0.103882,{"lines":{"5":[["    vo                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,7           All ",{}]]},"cursor":{"x":6}}],[0.056072,{"lines":{"5":[["    voi                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,8           All ",{}]]},"cursor":{"x":7}}],[0.047992,{"lines":{"5":[["    ",{}],["void",{"fg":2}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,9           All ",{}]]},"cursor":{"x":8}}],[0.080217,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     6,10          All ",{}]]},"cursor":{"x":9}}],[0.319775,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" A                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,11          All ",{}]]},"cursor":{"x":10}}],[0.119954,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Ad                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,12          All ",{}]]},"cursor":{"x":11}}],[0.197051,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,13          All ",{}]]},"cursor":{"x":12}}],[0.443363,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,14          All ",{}]]},"cursor":{"x":13}}],[0.47971,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(i                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,15          All ",{}]]},"cursor":{"x":14}}],[0.040163,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(in                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,16          All ",{}]]},"cursor":{"x":15}}],[0.088029,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,17          All ",{}]]},"cursor":{"x":16}}],[0.095763,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     6,18          All ",{}]]},"cursor":{"x":17}}],[0.38415,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" c                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,19          All ",{}]]},"cursor":{"x":18}}],[0.08787200000000001,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" co                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,20          All ",{}]]},"cursor":{"x":19}}],[0.06403,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" cou                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,21          All ",{}]]},"cursor":{"x":20}}],[0.184011,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" coun                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,22          All ",{}]]},"cursor":{"x":21}}],[0.127858,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,23          All ",{}]]},"cursor":{"x":22}}],[0.128096,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count,                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,24          All ",{}]]},"cursor":{"x":23}}],[0.184024,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     6,25          All ",{}]]},"cursor":{"x":24}}],[0.22391,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, t                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,26          All ",{}]]},"cursor":{"x":25}}],[0.07204000000000001,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ti                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,27          All ",{}]]},"cursor":{"x":26}}],[0.167963,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, tim                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,28          All ",{}]]},"cursor":{"x":27}}],[0.080014,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, time                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,29          All ",{}]]},"cursor":{"x":28}}],[0.279253,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, time_                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,30          All ",{}]]},"cursor":{"x":29}}],[0.248847,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,31          All ",{}]]},"cursor":{"x":30}}],[0.12804,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     6,32          All ",{}]]},"cursor":{"x":31}}],[0.583944,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" n                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,33          All ",{}]]},"cursor":{"x":32}}],[0.064053,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" no                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,34          All ",{}]]},"cursor":{"x":33}}],[0.048041,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,35          All ",{}]]},"cursor":{"x":34}}],[0.329299,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add",{}],["(",{"bg":6}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now",{}],[")",{"bg":6}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,36          All ",{}]]},"cursor":{"x":35}}],[0.423265,{"lines":{"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,37          All ",{}]]},"cursor":{"x":36}}],[0.4154,{"lines":{"6":[["                                                                                                   ",{}]],"7":[["}                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,5           All ",{}]]},"cursor":{"x":4,"y":6}}],[0.391855,{"lines":{"7":[["                                                                                                   ",{}]],"8":[["}                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,5           All ",{}]]},"cursor":{"y":7}}],[0.7519400000000001,{"lines":{"7":[["    i                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,6           All ",{}]]},"cursor":{"x":5}}],[0.063967,{"lines":{"7":[["    in                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,7           All ",{}]]},"cursor":{"x":6}}],[0.079997,{"lines":{"7":[["    ",{}],["int",{"fg":2}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,8           All ",{}]]},"cursor":{"x":7}}],[0.080224,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     8,9           All ",{}]]},"cursor":{"x":8}}],[0.359845,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" T                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,10          All ",{}]]},"cursor":{"x":9}}],[0.16801,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" Tr                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,11          All ",{}]]},"cursor":{"x":10}}],[0.096983,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" Tra                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,12          All ",{}]]},"cursor":{"x":11}}],[0.239033,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" Trai                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,13          All ",{}]]},"cursor":{"x":12}}],[0.215998,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" Trail                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,14          All ",{}]]},"cursor":{"x":13}}],[0.152119,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" Traili                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,15          All ",{}]]},"cursor":{"x":14}}],[0.127906,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" Trailin                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,16          All ",{}]]},"cursor":{"x":15}}],[0.096056,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" Trailing                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,17          All ",{}]]},"cursor":{"x":16}}],[0.319864,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingC                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,18          All ",{}]]},"cursor":{"x":17}}],[0.224092,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCo                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,19          All ",{}]]},"cursor":{"x":18}}],[0.09601,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCou                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,20          All ",{}]]},"cursor":{"x":19}}],[0.175985,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCoun                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,21          All ",{}]]},"cursor":{"x":20}}],[0.847973,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,22          All ",{}]]},"cursor":{"x":21}}],[0.312473,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount(                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,23          All ",{}]]},"cursor":{"x":22}}],[0.783633,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount(t                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,24          All ",{}]]},"cursor":{"x":23}}],[0.079986,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount(ti                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,25          All ",{}]]},"cursor":{"x":24}}],[0.152031,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount(tim                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,26          All ",{}]]},"cursor":{"x":25}}],[0.080134,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount(time                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,27          All ",{}]]},"cursor":{"x":26}}],[0.280006,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount(time_                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,28          All ",{}]]},"cursor":{"x":27}}],[0.623833,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,29          All ",{}]]},"cursor":{"x":28}}],[0.128063,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     8,30          All ",{}]]},"cursor":{"x":29}}],[0.176541,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" n                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,31          All ",{}]]},"cursor":{"x":30}}],[0.063675,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" no                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,32          All ",{}]]},"cursor":{"x":31}}],[0.063874,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,33          All ",{}]]},"cursor":{"x":32}}],[0.369342,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount",{}],["(",{"bg":6}],["time_t",{"fg":2}],[" now",{}],[")",{"bg":6}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,34          All ",{}]]},"cursor":{"x":33}}],[0.41545,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,35          All ",{}]]},"cursor":{"x":34}}],[0.143689,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":33}}],[0.191331,{"lines":{"37":[["                                                                                 7,0-1         All ",{}]]},"cursor":{"x":0,"y":6}}],[0.175741,{"lines":{"37":[["                                                                                 6,34          All ",{}]]},"cursor":{"x":33,"y":5}}],[0.320066,{"lines":{"37":[["                                                                                 5,0-1         All ",{}]]},"cursor":{"x":0,"y":4}}],[0.167967,{"lines":{"37":[["                                                                                 4,34          All ",{}]]},"cursor":{"x":33,"y":3}}],[0.152033,{"lines":{"37":[["                                                                                 3,7           All ",{}]]},"cursor":{"x":6,"y":2}}],[0.984739,{"lines":{"3":[["                                                                                                   ",{}]],"4":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"9":[["}                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,1           All ",{}]]},"cursor":{"x":0,"y":3}}],[1.031653,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     4,5           All ",{}]]},"cursor":{"x":4}}],[0.664045,{"lines":{"3":[["    /                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,6           All ",{}]]},"cursor":{"x":5}}],[0.135937,{"lines":{"3":[["    ",{}],["//",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,7           All ",{}]]},"cursor":{"x":6}}],[0.11202,{"lines":{"3":[["    ",{}],["// ",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,8           All ",{}]]},"cursor":{"x":7}}],[0.240181,{"lines":{"3":[["    ",{}],["// E",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,9           All ",{}]]},"cursor":{"x":8}}],[0.215948,{"lines":{"3":[["    ",{}],["// Ex",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,10          All ",{}]]},"cursor":{"x":9}}],[0.183858,{"lines":{"3":[["    ",{}],["// Exa",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,11          All ",{}]]},"cursor":{"x":10}}],[0.103912,{"lines":{"3":[["    ",{}],["// Exam",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,12          All ",{}]]},"cursor":{"x":11}}],[0.160382,{"lines":{"3":[["    ",{}],["// Examp",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,13          All ",{}]]},"cursor":{"x":12}}],[0.160805,{"lines":{"3":[["    ",{}],["// Exampl",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,14          All ",{}]]},"cursor":{"x":13}}],[0.118946,{"lines":{"3":[["    ",{}],["// Example",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,15          All ",{}]]},"cursor":{"x":14}}],[0.327047,{"lines":{"3":[["    ",{}],["// Example:",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,16          All ",{}]]},"cursor":{"x":15}}],[0.09721100000000001,{"lines":{"3":[["    ",{}],["// Example: ",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,17          All ",{}]]},"cursor":{"x":16}}],[0.31966,{"lines":{"3":[["    ",{}],["// Example: T",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,18          All ",{}]]},"cursor":{"x":17}}],[0.15201,{"lines":{"3":[["    ",{}],["// Example: Tr",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,19          All ",{}]]},"cursor":{"x":18}}],[0.120128,{"lines":{"3":[["    ",{}],["// Example: Tra",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,20          All ",{}]]},"cursor":{"x":19}}],[0.18381,{"lines":{"3":[["    ",{}],["// Example: Trai",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,21          All ",{}]]},"cursor":{"x":20}}],[0.176117,{"lines":{"3":[["    ",{}],["// Example: Trail",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,22          All ",{}]]},"cursor":{"x":21}}],[0.152021,{"lines":{"3":[["    ",{}],["// Example: Traili",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,23          All ",{}]]},"cursor":{"x":22}}],[0.135882,{"lines":{"3":[["    ",{}],["// Example: Trailin",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,24          All ",{}]]},"cursor":{"x":23}}],[0.199947,{"lines":{"3":[["    ",{}],["// Example: Trailing",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,25          All ",{}]]},"cursor":{"x":24}}],[0.232377,{"lines":{"3":[["    ",{}],["// Example: TrailingB",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,26          All ",{}]]},"cursor":{"x":25}}],[0.191829,{"lines":{"3":[["    ",{}],["// Example: TrailingBu",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,27          All ",{}]]},"cursor":{"x":26}}],[0.127645,{"lines":{"3":[["    ",{}],["// Example: TrailingBuc",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,28          All ",{}]]},"cursor":{"x":27}}],[0.128446,{"lines":{"3":[["    ",{}],["// Example: TrailingBuck",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,29          All ",{}]]},"cursor":{"x":28}}],[0.08786099999999999,{"lines":{"3":[["    ",{}],["// Example: TrailingBucke",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,30          All ",{}]]},"cursor":{"x":29}}],[0.07997799999999999,{"lines":{"3":[["    ",{}],["// Example: TrailingBucket",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,31          All ",{}]]},"cursor":{"x":30}}],[0.215987,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketC",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,32          All ",{}]]},"cursor":{"x":31}}],[0.175774,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCo",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,33          All ",{}]]},"cursor":{"x":32}}],[0.120341,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCou",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,34          All ",{}]]},"cursor":{"x":33}}],[1.231299,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCoun",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,35          All ",{}]]},"cursor":{"x":34}}],[0.128571,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCount",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,36          All ",{}]]},"cursor":{"x":35}}],[0.12012,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounte",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,37          All ",{}]]},"cursor":{"x":36}}],[0.071837,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,38          All ",{}]]},"cursor":{"x":37}}],[0.256975,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,39          All ",{}]]},"cursor":{"x":38}}],[0.13526,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(3",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,40          All ",{}]]},"cursor":{"x":39}}],[0.191913,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(3-",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,41          All ",{}]]},"cursor":{"x":40}}],[0.023872,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(3-0",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,42          All ",{}]]},"cursor":{"x":41}}],[0.36817,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(3-",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,41          All ",{}]]},"cursor":{"x":40}}],[0.15899,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(3",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,40          All ",{}]]},"cursor":{"x":39}}],[0.432336,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,41          All ",{}]]},"cursor":{"x":40}}],[0.224554,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30,",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,42          All ",{}]]},"cursor":{"x":41}}],[0.104249,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, ",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,43          All ",{}]]},"cursor":{"x":42}}],[0.127796,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 3",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,44          All ",{}]]},"cursor":{"x":43}}],[0.136013,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,45          All ",{}]]},"cursor":{"x":44}}],[0.249519,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter",{"fg":4}],["(",{"fg":4,"bg":6}],["30, 30",{"fg":4}],[")",{"fg":4,"bg":6}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,46          All ",{}]]},"cursor":{"x":45}}],[0.543503,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) ",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,47          All ",{}]]},"cursor":{"x":46}}],[0.390936,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) t",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,48          All ",{}]]},"cursor":{"x":47}}],[0.184041,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tr",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,49          All ",{}]]},"cursor":{"x":48}}],[0.119967,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tra",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,50          All ",{}]]},"cursor":{"x":49}}],[0.216137,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) trac",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,51          All ",{}]]},"cursor":{"x":50}}],[0.119825,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) track",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,52          All ",{}]]},"cursor":{"x":51}}],[0.137136,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,53          All ",{}]]},"cursor":{"x":52}}],[0.126979,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks ",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,54          All ",{}]]},"cursor":{"x":53}}],[0.167983,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks t",{"fg":4}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,55          All ",{}]]},"cursor":{"x":54}}],[0.08798300000000001,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks th",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,56          All ",{}]]},"cursor":{"x":55}}],[0.079926,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,57          All ",{}]]},"cursor":{"x":56}}],[0.159996,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the ",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,58          All ",{}]]},"cursor":{"x":57}}],[0.240318,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the l",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,59          All ",{}]]},"cursor":{"x":58}}],[0.08787399999999999,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the la",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,60          All ",{}]]},"cursor":{"x":59}}],[0.063831,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the las",{"fg":4}],["                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,61          All ",{}]]},"cursor":{"x":60}}],[0.120332,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last",{"fg":4}],["                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,62          All ",{}]]},"cursor":{"x":61}}],[0.063654,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last ",{"fg":4}],["                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,63          All ",{}]]},"cursor":{"x":62}}],[0.176184,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 3",{"fg":4}],["                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,64          All ",{}]]},"cursor":{"x":63}}],[0.095946,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30",{"fg":4}],["                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,65          All ",{}]]},"cursor":{"x":64}}],[0.568066,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 ",{"fg":4}],["                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,66          All ",{}]]},"cursor":{"x":65}}],[0.175912,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 m",{"fg":4}],["                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,67          All ",{}]]},"cursor":{"x":66}}],[0.088016,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 mi",{"fg":4}],["                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,68          All ",{}]]},"cursor":{"x":67}}],[0.159982,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 min",{"fg":4}],["                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,69          All ",{}]]},"cursor":{"x":68}}],[0.14392,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minu",{"fg":4}],["                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,70          All ",{}]]},"cursor":{"x":69}}],[0.096093,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minut",{"fg":4}],["                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,71          All ",{}]]},"cursor":{"x":70}}],[0.056236,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute",{"fg":4}],["                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,72          All ",{}]]},"cursor":{"x":71}}],[0.27977,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-",{"fg":4}],["                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,73          All ",{}]]},"cursor":{"x":72}}],[0.167935,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-b",{"fg":4}],["                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,74          All ",{}]]},"cursor":{"x":73}}],[0.088147,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-bu",{"fg":4}],["                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,75          All ",{}]]},"cursor":{"x":74}}],[0.151913,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buc",{"fg":4}],["                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,76          All ",{}]]},"cursor":{"x":75}}],[0.111982,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buck",{"fg":4}],["                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,77          All ",{}]]},"cursor":{"x":76}}],[0.120021,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-bucke",{"fg":4}],["                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,78          All ",{}]]},"cursor":{"x":77}}],[0.063958,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-bucket",{"fg":4}],["                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,79          All ",{}]]},"cursor":{"x":78}}],[0.168009,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets",{"fg":4}],["                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,80          All ",{}]]},"cursor":{"x":79}}],[0.080003,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets ",{"fg":4}],["                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,81          All ",{}]]},"cursor":{"x":80}}],[0.24004,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets o",{"fg":4}],["                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,82          All ",{}]]},"cursor":{"x":81}}],[0.272011,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of",{"fg":4}],["                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,83          All ",{}]]},"cursor":{"x":82}}],[0.167733,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of ",{"fg":4}],["                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,84          All ",{}]]},"cursor":{"x":83}}],[0.393274,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of t",{"fg":4}],["               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,85          All ",{}]]},"cursor":{"x":84}}],[0.119522,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of ti",{"fg":4}],["              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,86          All ",{}]]},"cursor":{"x":85}}],[0.167496,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of tim",{"fg":4}],["             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,87          All ",{}]]},"cursor":{"x":86}}],[0.127864,{"lines":{"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,88          All ",{}]]},"cursor":{"x":87}}],[0.240512,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":86}}],[0.135154,{"lines":{"37":[["                                                                                 5,64          All ",{}]]},"cursor":{"x":63,"y":4}}],[0.159875,{"lines":{"37":[["                                                                                 6,0-1         All ",{}]]},"cursor":{"x":0,"y":5}}],[1.295993,{"lines":{"37":[["                                                                                 7,36          All ",{}]]},"cursor":{"x":35,"y":6}}],[0.536073,{"lines":{"37":[["                                                                                 8,0-1         All ",{}]]},"cursor":{"x":0,"y":7}}],[0.376465,{"lines":{"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"10":[["}                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,1           All ",{}]]},"cursor":{"y":8}}],[0.15978,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     9,5           All ",{}]]},"cursor":{"x":4}}],[0.312059,{"lines":{"8":[["    /                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,6           All ",{}]]},"cursor":{"x":5}}],[0.151948,{"lines":{"8":[["    ",{}],["//",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,7           All ",{}]]},"cursor":{"x":6}}],[0.07996200000000001,{"lines":{"8":[["    ",{}],["// ",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,8           All ",{}]]},"cursor":{"x":7}}],[0.232051,{"lines":{"8":[["    ",{}],["// R",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,9           All ",{}]]},"cursor":{"x":8}}],[0.215956,{"lines":{"8":[["    ",{}],["// Re",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,10          All ",{}]]},"cursor":{"x":9}}],[0.199987,{"lines":{"8":[["    ",{}],["// Ret",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,11          All ",{}]]},"cursor":{"x":10}}],[0.111978,{"lines":{"8":[["    ",{}],["// Retu",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,12          All ",{}]]},"cursor":{"x":11}}],[0.056035,{"lines":{"8":[["    ",{}],["// Retur",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,13          All ",{}]]},"cursor":{"x":12}}],[0.120125,{"lines":{"8":[["    ",{}],["// Return",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,14          All ",{}]]},"cursor":{"x":13}}],[0.095917,{"lines":{"8":[["    ",{}],["// Return ",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,15          All ",{}]]},"cursor":{"x":14}}],[0.088004,{"lines":{"8":[["    ",{}],["// Return t",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,16          All ",{}]]},"cursor":{"x":15}}],[0.271979,{"lines":{"8":[["    ",{}],["// Return th",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,17          All ",{}]]},"cursor":{"x":16}}],[0.167907,{"lines":{"8":[["    ",{}],["// Return the",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,18          All ",{}]]},"cursor":{"x":17}}],[0.08735900000000001,{"lines":{"8":[["    ",{}],["// Return the ",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,19          All ",{}]]},"cursor":{"x":18}}],[0.128672,{"lines":{"8":[["    ",{}],["// Return the t",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,20          All ",{}]]},"cursor":{"x":19}}],[0.096113,{"lines":{"8":[["    ",{}],["// Return the to",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,21          All ",{}]]},"cursor":{"x":20}}],[0.096043,{"lines":{"8":[["    ",{}],["// Return the tot",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,22          All ",{}]]},"cursor":{"x":21}}],[0.272103,{"lines":{"8":[["    ",{}],["// Return the tota",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,23          All ",{}]]},"cursor":{"x":22}}],[0.271845,{"lines":{"8":[["    ",{}],["// Return the total",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,24          All ",{}]]},"cursor":{"x":23}}],[0.151965,{"lines":{"8":[["    ",{}],["// Return the total ",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,25          All ",{}]]},"cursor":{"x":24}}],[0.240075,{"lines":{"8":[["    ",{}],["// Return the total c",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,26          All ",{}]]},"cursor":{"x":25}}],[0.08806799999999999,{"lines":{"8":[["    ",{}],["// Return the total co",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,27          All ",{}]]},"cursor":{"x":26}}],[0.055982,{"lines":{"8":[["    ",{}],["// Return the total cou",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,28          All ",{}]]},"cursor":{"x":27}}],[0.191172,{"lines":{"8":[["    ",{}],["// Return the total coun",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,29          All ",{}]]},"cursor":{"x":28}}],[0.056784,{"lines":{"8":[["    ",{}],["// Return the total count",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,30          All ",{}]]},"cursor":{"x":29}}],[0.087963,{"lines":{"8":[["    ",{}],["// Return the total count ",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,31          All ",{}]]},"cursor":{"x":30}}],[0.208055,{"lines":{"8":[["    ",{}],["// Return the total count o",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,32          All ",{}]]},"cursor":{"x":31}}],[0.07195699999999999,{"lines":{"8":[["    ",{}],["// Return the total count ov",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,33          All ",{}]]},"cursor":{"x":32}}],[0.119924,{"lines":{"8":[["    ",{}],["// Return the total count ove",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,34          All ",{}]]},"cursor":{"x":33}}],[0.08805,{"lines":{"8":[["    ",{}],["// Return the total count over",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,35          All ",{}]]},"cursor":{"x":34}}],[0.040056,{"lines":{"8":[["    ",{}],["// Return the total count over ",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,36          All ",{}]]},"cursor":{"x":35}}],[0.312228,{"lines":{"8":[["    ",{}],["// Return the total count over h",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,37          All ",{}]]},"cursor":{"x":36}}],[0.023499,{"lines":{"8":[["    ",{}],["// Return the total count over ht",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,38          All ",{}]]},"cursor":{"x":37}}],[1.128318,{"lines":{"8":[["    ",{}],["// Return the total count over h",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,37          All ",{}]]},"cursor":{"x":36}}],[0.171667,{"lines":{"8":[["    ",{}],["// Return the total count over ",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,36          All ",{}]]},"cursor":{"x":35}}],[0.060246,{"lines":{"8":[["    ",{}],["// Return the total count over t",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,37          All ",{}]]},"cursor":{"x":36}}],[0.143868,{"lines":{"8":[["    ",{}],["// Return the total count over th",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,38          All ",{}]]},"cursor":{"x":37}}],[0.144043,{"lines":{"8":[["    ",{}],["// Return the total count over the",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,39          All ",{}]]},"cursor":{"x":38}}],[0.120031,{"lines":{"8":[["    ",{}],["// Return the total count over the ",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,40          All ",{}]]},"cursor":{"x":39}}],[0.177123,{"lines":{"8":[["    ",{}],["// Return the total count over the l",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,41          All ",{}]]},"cursor":{"x":40}}],[0.02293,{"lines":{"8":[["    ",{}],["// Return the total count over the la",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,42          All ",{}]]},"cursor":{"x":41}}],[0.191991,{"lines":{"8":[["    ",{}],["// Return the total count over the las",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,43          All ",{}]]},"cursor":{"x":42}}],[0.184053,{"lines":{"8":[["    ",{}],["// Return the total count over the last",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,44          All ",{}]]},"cursor":{"x":43}}],[0.199882,{"lines":{"8":[["    ",{}],["// Return the total count over the last ",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,45          All ",{}]]},"cursor":{"x":44}}],[0.46419,{"lines":{"8":[["    ",{}],["// Return the total count over the last n",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,46          All ",{}]]},"cursor":{"x":45}}],[0.151904,{"lines":{"8":[["    ",{}],["// Return the total count over the last nu",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,47          All ",{}]]},"cursor":{"x":46}}],[0.160169,{"lines":{"8":[["    ",{}],["// Return the total count over the last num",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,48          All ",{}]]},"cursor":{"x":47}}],[0.223881,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,49          All ",{}]]},"cursor":{"x":48}}],[0.024626,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_)",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,50          All ",{}]]},"cursor":{"x":49}}],[0.399446,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,49          All ",{}]]},"cursor":{"x":48}}],[0.583883,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_b",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,50          All ",{}]]},"cursor":{"x":49}}],[0.080012,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_bu",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,51          All ",{}]]},"cursor":{"x":50}}],[0.135994,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buc",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,52          All ",{}]]},"cursor":{"x":51}}],[0.104081,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buck",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,53          All ",{}]]},"cursor":{"x":52}}],[0.104105,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_bucke",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,54          All ",{}]]},"cursor":{"x":53}}],[0.07993699999999999,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_bucket",{"fg":4}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,55          All ",{}]]},"cursor":{"x":54}}],[0.199915,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,56          All ",{}]]},"cursor":{"x":55}}],[0.112022,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets ",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,57          All ",{}]]},"cursor":{"x":56}}],[0.43195,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets w",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,58          All ",{}]]},"cursor":{"x":57}}],[0.096107,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets wo",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,59          All ",{}]]},"cursor":{"x":58}}],[0.07986699999999999,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets wor",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,60          All ",{}]]},"cursor":{"x":59}}],[0.224068,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets wort",{"fg":4}],["                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,61          All ",{}]]},"cursor":{"x":60}}],[0.09597700000000001,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth",{"fg":4}],["                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,62          All ",{}]]},"cursor":{"x":61}}],[0.096023,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth ",{"fg":4}],["                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,63          All ",{}]]},"cursor":{"x":62}}],[0.15999,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth o",{"fg":4}],["                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,64          All ",{}]]},"cursor":{"x":63}}],[0.063962,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth of",{"fg":4}],["                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,65          All ",{}]]},"cursor":{"x":64}}],[0.159953,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth of ",{"fg":4}],["                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,66          All ",{}]]},"cursor":{"x":65}}],[0.576125,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth of i",{"fg":4}],["                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,67          All ",{}]]},"cursor":{"x":66}}],[0.159895,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth of it",{"fg":4}],["                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,68          All ",{}]]},"cursor":{"x":67}}],[0.199925,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth of itm",{"fg":4}],["                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,69          All ",{}]]},"cursor":{"x":68}}],[0.521028,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth of it",{"fg":4}],["                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,68          All ",{}]]},"cursor":{"x":67}}],[0.1673,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth of i",{"fg":4}],["                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,67          All ",{}]]},"cursor":{"x":66}}],[0.287847,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth of ",{"fg":4}],["                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,66          All ",{}]]},"cursor":{"x":65}}],[0.183973,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth of t",{"fg":4}],["                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,67          All ",{}]]},"cursor":{"x":66}}],[0.071967,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth of ti",{"fg":4}],["                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,68          All ",{}]]},"cursor":{"x":67}}],[0.168039,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth of tim",{"fg":4}],["                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,69          All ",{}]]},"cursor":{"x":68}}],[0.103743,{"lines":{"8":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,70          All ",{}]]},"cursor":{"x":69}}],[0.240441,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":68}}],[0.263533,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.119823,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.08835800000000001,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.061586,{"lines":{"37":[["\"ch15_3.cpp\" [New] 11L, 397C written                                             9,69          All ",{}]]},"cursor":{"x":68,"y":8,"visible":true}}],[1.492081,{"lines":{"1":[["class",{"fg":2}],[" TrailingBucketCounter ",{}],["{",{"bg":6}],["                                                                      ",{}]],"10":[["}",{"bg":6}],["                                                                                                  ",{}]],"37":[["\"ch15_3.cpp\" [New] 11L, 397C written                                             11,1          All ",{}]]},"cursor":{"x":0,"y":10}}],[0.280084,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     11,2          All ",{}]]},"cursor":{"x":1}}],[0.175351,{"lines":{"1":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"10":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,3          All ",{}]]},"cursor":{"x":2}}],[0.159415,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":1}}],[0.152004,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"y":37}}],[0.151671,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.095652,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.106477,{"lines":{"37":[["\"ch15_3.cpp\" 11L, 398C written                                                   11,2          All ",{}]]},"cursor":{"x":1,"y":10,"visible":true}}],[0.837545,{"lines":{"11":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,1          All ",{}]]},"cursor":{"x":0,"y":11}}],[0.247907,{"lines":{"12":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,1          All ",{}]]},"cursor":{"y":12}}],[0.623295,{"lines":{"13":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,1          All ",{}]]},"cursor":{"y":13}}],[0.240154,{"lines":{"13":[["c                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,2          All ",{}]]},"cursor":{"x":1}}],[0.152603,{"lines":{"13":[["cl                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,3          All ",{}]]},"cursor":{"x":2}}],[0.103873,{"lines":{"13":[["cla                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,4          All ",{}]]},"cursor":{"x":3}}],[0.320249,{"lines":{"13":[["clas                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,5          All ",{}]]},"cursor":{"x":4}}],[0.159888,{"lines":{"13":[["class",{"fg":2}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,6          All ",{}]]},"cursor":{"x":5}}],[0.135878,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     14,7          All ",{}]]},"cursor":{"x":6}}],[0.336029,{"lines":{"13":[["class",{"fg":2}],[" M                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,8          All ",{}]]},"cursor":{"x":7}}],[0.19123,{"lines":{"13":[["class",{"fg":2}],[" Mi                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,9          All ",{}]]},"cursor":{"x":8}}],[0.152783,{"lines":{"13":[["class",{"fg":2}],[" Min                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,10         All ",{}]]},"cursor":{"x":9}}],[0.160058,{"lines":{"13":[["class",{"fg":2}],[" Minu                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,11         All ",{}]]},"cursor":{"x":10}}],[0.159889,{"lines":{"13":[["class",{"fg":2}],[" Minut                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,12         All ",{}]]},"cursor":{"x":11}}],[0.0566,{"lines":{"13":[["class",{"fg":2}],[" Minute                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,13         All ",{}]]},"cursor":{"x":12}}],[0.247482,{"lines":{"13":[["class",{"fg":2}],[" MinuteH                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,14         All ",{}]]},"cursor":{"x":13}}],[0.152281,{"lines":{"13":[["class",{"fg":2}],[" MinuteHo                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,15         All ",{}]]},"cursor":{"x":14}}],[0.08766400000000001,{"lines":{"13":[["class",{"fg":2}],[" MinuteHou                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,16         All ",{}]]},"cursor":{"x":15}}],[0.09597899999999999,{"lines":{"13":[["class",{"fg":2}],[" MinuteHour                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,17         All ",{}]]},"cursor":{"x":16}}],[0.21692,{"lines":{"13":[["class",{"fg":2}],[" MinuteHourC                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,18         All ",{}]]},"cursor":{"x":17}}],[0.14308,{"lines":{"13":[["class",{"fg":2}],[" MinuteHourCo                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,19         All ",{}]]},"cursor":{"x":18}}],[0.064108,{"lines":{"13":[["class",{"fg":2}],[" MinuteHourCou                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,20         All ",{}]]},"cursor":{"x":19}}],[0.216036,{"lines":{"13":[["class",{"fg":2}],[" MinuteHourCoun                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,21         All ",{}]]},"cursor":{"x":20}}],[0.095944,{"lines":{"13":[["class",{"fg":2}],[" MinuteHourCount                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,22         All ",{}]]},"cursor":{"x":21}}],[0.119973,{"lines":{"13":[["class",{"fg":2}],[" MinuteHourCounte                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,23         All ",{}]]},"cursor":{"x":22}}],[0.064149,{"lines":{"13":[["class",{"fg":2}],[" MinuteHourCounter                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,24         All ",{}]]},"cursor":{"x":23}}],[0.127933,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     14,25         All ",{}]]},"cursor":{"x":24}}],[0.248425,{"lines":{"13":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,26         All ",{}]]},"cursor":{"x":25}}],[0.151637,{"lines":{"14":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,1          All ",{}]]},"cursor":{"x":0,"y":14}}],[0.233895,{"lines":{"13":[["class",{"fg":2}],[" MinuteHourCounter ",{}],["{",{"bg":6}],["                                                                          ",{}]],"14":[["}",{"bg":6}],["                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,2          All ",{}]]},"cursor":{"x":1}}],[0.213976,{"lines":{"13":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"14":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,3          All ",{}]]},"cursor":{"x":2}}],[0.120752,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":1}}],[0.175184,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"y":37}}],[0.062974,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.104988,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.170958,{"lines":{"37":[["\"ch15_3.cpp\" 15L, 429C written                                                   15,2          All ",{}]]},"cursor":{"x":1,"y":14,"visible":true}}],[0.501089,{"lines":{"37":[["\"ch15_3.cpp\" 15L, 429C written                                                   14,2          All ",{}]]},"cursor":{"y":13}}],[0.17616,{"lines":{"14":[["                                                                                                   ",{}]],"15":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,1          All ",{}]]},"cursor":{"x":0,"y":14}}],[0.128034,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     15,5          All ",{}]]},"cursor":{"x":4}}],[1.079835,{"lines":{"14":[["    T                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,6          All ",{}]]},"cursor":{"x":5}}],[0.160086,{"lines":{"14":[["    Tr                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,7          All ",{}]]},"cursor":{"x":6}}],[0.087947,{"lines":{"14":[["    Tra                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,8          All ",{}]]},"cursor":{"x":7}}],[0.312161,{"lines":{"14":[["    Trai                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,9          All ",{}]]},"cursor":{"x":8}}],[0.192101,{"lines":{"14":[["    Trail                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,10         All ",{}]]},"cursor":{"x":9}}],[0.407748,{"lines":{"14":[["    Traili                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,11         All ",{}]]},"cursor":{"x":10}}],[0.080011,{"lines":{"14":[["    Trailin                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,12         All ",{}]]},"cursor":{"x":11}}],[0.095969,{"lines":{"14":[["    Trailing                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,13         All ",{}]]},"cursor":{"x":12}}],[0.288377,{"lines":{"14":[["    TrailingB                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,14         All ",{}]]},"cursor":{"x":13}}],[0.159685,{"lines":{"14":[["    TrailingBu                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,15         All ",{}]]},"cursor":{"x":14}}],[0.127973,{"lines":{"14":[["    TrailingBuc                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,16         All ",{}]]},"cursor":{"x":15}}],[0.128009,{"lines":{"14":[["    TrailingBuck                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,17         All ",{}]]},"cursor":{"x":16}}],[0.08805399999999999,{"lines":{"14":[["    TrailingBucke                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,18         All ",{}]]},"cursor":{"x":17}}],[0.055982,{"lines":{"14":[["    TrailingBucket                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,19         All ",{}]]},"cursor":{"x":18}}],[0.2321,{"lines":{"14":[["    TrailingBucketC                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,20         All ",{}]]},"cursor":{"x":19}}],[0.239905,{"lines":{"14":[["    TrailingBucketCo                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,21         All ",{}]]},"cursor":{"x":20}}],[0.079928,{"lines":{"14":[["    TrailingBucketCou                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,22         All ",{}]]},"cursor":{"x":21}}],[0.184095,{"lines":{"14":[["    TrailingBucketCoun                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,23         All ",{}]]},"cursor":{"x":22}}],[0.079989,{"lines":{"14":[["    TrailingBucketCount                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,24         All ",{}]]},"cursor":{"x":23}}],[0.088048,{"lines":{"14":[["    TrailingBucketCounte                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,25         All ",{}]]},"cursor":{"x":24}}],[0.08788700000000001,{"lines":{"14":[["    TrailingBucketCounter                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,26         All ",{}]]},"cursor":{"x":25}}],[0.08001,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     15,27         All ",{}]]},"cursor":{"x":26}}],[0.192207,{"lines":{"14":[["    TrailingBucketCounter m                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,28         All ",{}]]},"cursor":{"x":27}}],[0.087867,{"lines":{"14":[["    TrailingBucketCounter mi                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,29         All ",{}]]},"cursor":{"x":28}}],[0.151934,{"lines":{"14":[["    TrailingBucketCounter min                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,30         All ",{}]]},"cursor":{"x":29}}],[0.144042,{"lines":{"14":[["    TrailingBucketCounter minu                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,31         All ",{}]]},"cursor":{"x":30}}],[0.064009,{"lines":{"14":[["    TrailingBucketCounter minut                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,32         All ",{}]]},"cursor":{"x":31}}],[0.0641,{"lines":{"14":[["    TrailingBucketCounter minute                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,33         All ",{}]]},"cursor":{"x":32}}],[0.271825,{"lines":{"14":[["    TrailingBucketCounter minute_                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,34         All ",{}]]},"cursor":{"x":33}}],[0.35251,{"lines":{"14":[["    TrailingBucketCounter minute_c                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,35         All ",{}]]},"cursor":{"x":34}}],[0.09556199999999999,{"lines":{"14":[["    TrailingBucketCounter minute_co                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,36         All ",{}]]},"cursor":{"x":35}}],[0.06396399999999999,{"lines":{"14":[["    TrailingBucketCounter minute_cou                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,37         All ",{}]]},"cursor":{"x":36}}],[0.160126,{"lines":{"14":[["    TrailingBucketCounter minute_coun                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,38         All ",{}]]},"cursor":{"x":37}}],[0.383964,{"lines":{"14":[["    TrailingBucketCounter minute_count                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,39         All ",{}]]},"cursor":{"x":38}}],[0.304291,{"lines":{"14":[["    TrailingBucketCounter minute_counts                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,40         All ",{}]]},"cursor":{"x":39}}],[0.415694,{"lines":{"14":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,41         All ",{}]]},"cursor":{"x":40}}],[0.168844,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":39}}],[0.590975,{"lines":{"37":[["                                                                                 15,40         All ",{}]]}}],[0.328138,{"lines":{"15":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"16":[["};                                                                                                 ",{}]],"37":[["                                                                                 16,5          All ",{}]]},"cursor":{"x":4,"y":15}}],[0.319867,{"lines":{"37":[["                                                                                 16,6          All ",{}]]},"cursor":{"x":5}}],[0.500252,{"lines":{"37":[["                                                                                 16,7          All ",{}]]},"cursor":{"x":6}}],[0.030806,{"lines":{"37":[["                                                                                 16,8          All ",{}]]},"cursor":{"x":7}}],[0.031482,{"lines":{"37":[["                                                                                 16,9          All ",{}]]},"cursor":{"x":8}}],[0.030656,{"lines":{"37":[["                                                                                 16,10         All ",{}]]},"cursor":{"x":9}}],[0.031267,{"lines":{"37":[["                                                                                 16,11         All ",{}]]},"cursor":{"x":10}}],[0.029555,{"lines":{"37":[["                                                                                 16,12         All ",{}]]},"cursor":{"x":11}}],[0.030067,{"lines":{"37":[["                                                                                 16,13         All ",{}]]},"cursor":{"x":12}}],[0.031173,{"lines":{"37":[["                                                                                 16,14         All ",{}]]},"cursor":{"x":13}}],[0.029843,{"lines":{"37":[["                                                                                 16,15         All ",{}]]},"cursor":{"x":14}}],[0.031579,{"lines":{"37":[["                                                                                 16,16         All ",{}]]},"cursor":{"x":15}}],[0.03019,{"lines":{"37":[["                                                                                 16,17         All ",{}]]},"cursor":{"x":16}}],[0.031149,{"lines":{"37":[["                                                                                 16,18         All ",{}]]},"cursor":{"x":17}}],[0.02979,{"lines":{"37":[["                                                                                 16,19         All ",{}]]},"cursor":{"x":18}}],[0.031106,{"lines":{"37":[["                                                                                 16,20         All ",{}]]},"cursor":{"x":19}}],[0.030445,{"lines":{"37":[["                                                                                 16,21         All ",{}]]},"cursor":{"x":20}}],[0.030275,{"lines":{"37":[["                                                                                 16,22         All ",{}]]},"cursor":{"x":21}}],[0.029803,{"lines":{"37":[["                                                                                 16,23         All ",{}]]},"cursor":{"x":22}}],[0.031013,{"lines":{"37":[["                                                                                 16,24         All ",{}]]},"cursor":{"x":23}}],[0.031054,{"lines":{"37":[["                                                                                 16,25         All ",{}]]},"cursor":{"x":24}}],[0.031181,{"lines":{"37":[["                                                                                 16,26         All ",{}]]},"cursor":{"x":25}}],[0.028648,{"lines":{"37":[["                                                                                 16,27         All ",{}]]},"cursor":{"x":26}}],[0.440872,{"lines":{"15":[["    TrailingBucketCounter inute_counts;                                                            ",{}]]}}],[0.216069,{"lines":{"15":[["    TrailingBucketCounter nute_counts;                                                             ",{}]]}}],[0.207831,{"lines":{"15":[["    TrailingBucketCounter ute_counts;                                                              ",{}]]}}],[0.208007,{"lines":{"15":[["    TrailingBucketCounter te_counts;                                                               ",{}]]}}],[0.223977,{"lines":{"15":[["    TrailingBucketCounter e_counts;                                                                ",{}]]}}],[0.216214,{"lines":{"15":[["    TrailingBucketCounter _counts;                                                                 ",{}]]}}],[0.191507,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     16,27         All ",{}]]}}],[0.240304,{"lines":{"15":[["    TrailingBucketCounter h_counts;                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     16,28         All ",{}]]},"cursor":{"x":27}}],[0.072051,{"lines":{"15":[["    TrailingBucketCounter ho_counts;                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     16,29         All ",{}]]},"cursor":{"x":28}}],[0.13596,{"lines":{"15":[["    TrailingBucketCounter hou_counts;                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     16,30         All ",{}]]},"cursor":{"x":29}}],[0.120054,{"lines":{"15":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     16,31         All ",{}]]},"cursor":{"x":30}}],[0.281648,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":29}}],[0.214094,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.111903,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.080307,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.083966,{"lines":{"37":[["\"ch15_3.cpp\" 17L, 509C written                                                   16,30         All ",{}]]},"cursor":{"x":29,"y":15,"visible":true}}],[0.284099,{"lines":{"16":[["                                                                                                   ",{}]],"17":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,5          All ",{}]]},"cursor":{"x":4,"y":16}}],[0.223896,{"lines":{"17":[["                                                                                                   ",{}]],"18":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,5          All ",{}]]},"cursor":{"y":17}}],[0.200044,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     18,1          All ",{}]]},"cursor":{"x":0}}],[0.43989,{"lines":{"17":[["p                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,2          All ",{}]]},"cursor":{"x":1}}],[0.176108,{"lines":{"17":[["pb                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,3          All ",{}]]},"cursor":{"x":2}}],[0.335955,{"lines":{"17":[["p                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,2          All ",{}]]},"cursor":{"x":1}}],[0.200158,{"lines":{"17":[["pu                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,3          All ",{}]]},"cursor":{"x":2}}],[0.07982,{"lines":{"17":[["pub                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,4          All ",{}]]},"cursor":{"x":3}}],[0.135805,{"lines":{"17":[["publ                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,5          All ",{}]]},"cursor":{"x":4}}],[0.05629,{"lines":{"17":[["publi                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,6          All ",{}]]},"cursor":{"x":5}}],[0.07194,{"lines":{"17":[["public",{"fg":3}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,7          All ",{}]]},"cursor":{"x":6}}],[0.474218,{"lines":{"17":[["public",{"fg":3}],[":                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,8          All ",{}]]},"cursor":{"x":7}}],[0.6698190000000001,{"lines":{"18":[["                                                                                                   ",{}]],"19":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,1          All ",{}]]},"cursor":{"x":0,"y":18}}],[1.231951,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     19,5          All ",{}]]},"cursor":{"x":4}}],[0.344086,{"lines":{"18":[["    M                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,6          All ",{}]]},"cursor":{"x":5}}],[0.15906,{"lines":{"18":[["    Mi                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,7          All ",{}]]},"cursor":{"x":6}}],[0.152993,{"lines":{"18":[["    Min                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,8          All ",{}]]},"cursor":{"x":7}}],[0.143856,{"lines":{"18":[["    Minu                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,9          All ",{}]]},"cursor":{"x":8}}],[0.10412,{"lines":{"18":[["    Minut                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,10         All ",{}]]},"cursor":{"x":9}}],[0.071978,{"lines":{"18":[["    Minute                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,11         All ",{}]]},"cursor":{"x":10}}],[0.35184,{"lines":{"18":[["    MinuteH                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,12         All ",{}]]},"cursor":{"x":11}}],[0.160074,{"lines":{"18":[["    MinuteHo                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,13         All ",{}]]},"cursor":{"x":12}}],[0.09597700000000001,{"lines":{"18":[["    MinuteHou                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,14         All ",{}]]},"cursor":{"x":13}}],[0.104053,{"lines":{"18":[["    MinuteHour                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,15         All ",{}]]},"cursor":{"x":14}}],[0.248426,{"lines":{"18":[["    MinuteHourC                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,16         All ",{}]]},"cursor":{"x":15}}],[0.247634,{"lines":{"18":[["    MinuteHourCo                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,17         All ",{}]]},"cursor":{"x":16}}],[0.079989,{"lines":{"18":[["    MinuteHourCou                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,18         All ",{}]]},"cursor":{"x":17}}],[0.191893,{"lines":{"18":[["    MinuteHourCoun                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,19         All ",{}]]},"cursor":{"x":18}}],[0.09604799999999999,{"lines":{"18":[["    MinuteHourCount                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,20         All ",{}]]},"cursor":{"x":19}}],[0.128072,{"lines":{"18":[["    MinuteHourCounte                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,21         All ",{}]]},"cursor":{"x":20}}],[0.079957,{"lines":{"18":[["    MinuteHourCounter                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,22         All ",{}]]},"cursor":{"x":21}}],[0.640553,{"lines":{"18":[["    MinuteHourCounter(                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,23         All ",{}]]},"cursor":{"x":22}}],[0.073962,{"lines":{"18":[["    MinuteHourCounter",{}],["()",{"bg":6}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,24         All ",{}]]},"cursor":{"x":23}}],[0.263187,{"lines":{"18":[["    MinuteHourCounter()                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,25         All ",{}]]},"cursor":{"x":24}}],[0.230289,{"lines":{"18":[["    MinuteHourCounter() :                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,26         All ",{}]]},"cursor":{"x":25}}],[0.151834,{"lines":{"19":[["                                                                                                   ",{}]],"20":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,5          All ",{}]]},"cursor":{"x":4,"y":19}}],[0.352186,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     20,9          All ",{}]]},"cursor":{"x":8}}],[0.184152,{"lines":{"19":[["        m                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,10         All ",{}]]},"cursor":{"x":9}}],[0.08795500000000001,{"lines":{"19":[["        mi                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,11         All ",{}]]},"cursor":{"x":10}}],[0.16779,{"lines":{"19":[["        min                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,12         All ",{}]]},"cursor":{"x":11}}],[0.160076,{"lines":{"19":[["        minu                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,13         All ",{}]]},"cursor":{"x":12}}],[0.127867,{"lines":{"19":[["        minut                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,14         All ",{}]]},"cursor":{"x":13}}],[0.064122,{"lines":{"19":[["        minute                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,15         All ",{}]]},"cursor":{"x":14}}],[0.296129,{"lines":{"19":[["        minute_                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,16         All ",{}]]},"cursor":{"x":15}}],[0.176091,{"lines":{"19":[["        minute_c                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,17         All ",{}]]},"cursor":{"x":16}}],[0.12002,{"lines":{"19":[["        minute_co                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,18         All ",{}]]},"cursor":{"x":17}}],[0.079564,{"lines":{"19":[["        minute_cou                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,19         All ",{}]]},"cursor":{"x":18}}],[0.176476,{"lines":{"19":[["        minute_coun                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,20         All ",{}]]},"cursor":{"x":19}}],[0.079666,{"lines":{"19":[["        minute_count                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,21         All ",{}]]},"cursor":{"x":20}}],[0.176216,{"lines":{"19":[["        minute_counts                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,22         All ",{}]]},"cursor":{"x":21}}],[0.360354,{"lines":{"19":[["        minute_counts(                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,23         All ",{}]]},"cursor":{"x":22}}],[2.103624,{"lines":{"19":[["        minute_counts(",{}],["6",{"fg":1}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,24         All ",{}]]},"cursor":{"x":23}}],[0.295958,{"lines":{"19":[["        minute_counts(",{}],["60",{"fg":1}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,25         All ",{}]]},"cursor":{"x":24}}],[0.832022,{"lines":{"19":[["        minute_counts(",{}],["60",{"fg":1}],[",                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,26         All ",{}]]},"cursor":{"x":25}}],[0.128163,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     20,27         All ",{}]]},"cursor":{"x":26}}],[0.151896,{"lines":{"19":[["        minute_counts(",{}],["60",{"fg":1}],[", ",{}],["1",{"fg":1}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,28         All ",{}]]},"cursor":{"x":27}}],[0.395001,{"lines":{"19":[["        minute_counts",{}],["(",{"bg":6}],["60",{"fg":1}],[", ",{}],["1",{"fg":1}],[")",{"bg":6}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,29         All ",{}]]},"cursor":{"x":28}}],[0.806921,{"lines":{"19":[["        minute_counts(",{}],["60",{"fg":1}],[", ",{}],["1",{"fg":1}],["),                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,30         All ",{}]]},"cursor":{"x":29}}],[0.126714,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":28}}],[0.386034,{"lines":{"19":[["        minute_counts",{}],["(",{"bg":6}],["60",{"fg":1}],[", ",{}],["1",{"fg":1}],[")",{"bg":6}],[",                                                                      ",{}]],"37":[["                                                                                 20,28         All ",{}]]},"cursor":{"x":27}}],[0.150907,{"lines":{"19":[["        minute_counts(",{}],["60",{"fg":1}],[", ",{}],["1",{"fg":1}],["),                                                                      ",{}]],"37":[["                                                                                 20,27         All ",{}]]},"cursor":{"x":26}}],[0.142173,{"lines":{"37":[["                                                                                 20,26         All ",{}]]},"cursor":{"x":25}}],[0.151946,{"lines":{"37":[["                                                                                 20,25         All ",{}]]},"cursor":{"x":24}}],[0.143976,{"lines":{"37":[["                                                                                 20,24         All ",{}]]},"cursor":{"x":23}}],[0.128006,{"lines":{"37":[["                                                                                 20,23         All ",{}]]},"cursor":{"x":22}}],[0.455871,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     20,23         All ",{}]]}}],[0.52047,{"lines":{"19":[["        minute_counts(/",{}],["60",{"fg":1}],[", ",{}],["1",{"fg":1}],["),                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,24         All ",{}]]},"cursor":{"x":23}}],[0.223802,{"lines":{"19":[["        minute_counts(",{}],["/*60, 1),",{"fg":4}],["                                                                    ",{}]],"20":[["};",{"fg":4}],["                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,25         All ",{}]]},"cursor":{"x":24}}],[0.256024,{"lines":{"19":[["        minute_counts(",{}],["/* 60, 1),",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,26         All ",{}]]},"cursor":{"x":25}}],[0.5199820000000001,{"lines":{"19":[["        minute_counts(",{}],["/* n60, 1),",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,27         All ",{}]]},"cursor":{"x":26}}],[0.14412,{"lines":{"19":[["        minute_counts(",{}],["/* nu60, 1),",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,28         All ",{}]]},"cursor":{"x":27}}],[0.183969,{"lines":{"19":[["        minute_counts(",{}],["/* num60, 1),",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,29         All ",{}]]},"cursor":{"x":28}}],[0.256147,{"lines":{"19":[["        minute_counts(",{}],["/* num_60, 1),",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,30         All ",{}]]},"cursor":{"x":29}}],[0.22379,{"lines":{"19":[["        minute_counts(",{}],["/* num_b60, 1),",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,31         All ",{}]]},"cursor":{"x":30}}],[0.088153,{"lines":{"19":[["        minute_counts(",{}],["/* num_bu60, 1),",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,32         All ",{}]]},"cursor":{"x":31}}],[0.160151,{"lines":{"19":[["        minute_counts(",{}],["/* num_buc60, 1),",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,33         All ",{}]]},"cursor":{"x":32}}],[0.103766,{"lines":{"19":[["        minute_counts(",{}],["/* num_buck60, 1),",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,34         All ",{}]]},"cursor":{"x":33}}],[0.111993,{"lines":{"19":[["        minute_counts(",{}],["/* num_bucke60, 1),",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,35         All ",{}]]},"cursor":{"x":34}}],[0.063945,{"lines":{"19":[["        minute_counts(",{}],["/* num_bucket60, 1),",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,36         All ",{}]]},"cursor":{"x":35}}],[0.192069,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets60, 1),",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,37         All ",{}]]},"cursor":{"x":36}}],[0.464061,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets 60, 1),",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,38         All ",{}]]},"cursor":{"x":37}}],[0.191952,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets =60, 1),",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,39         All ",{}]]},"cursor":{"x":38}}],[0.09594999999999999,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = 60, 1),",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,40         All ",{}]]},"cursor":{"x":39}}],[0.304387,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = *60, 1),",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,41         All ",{}]]},"cursor":{"x":40}}],[0.175834,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["1",{"fg":1}],["),                                                   ",{}]],"20":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,42         All ",{}]]},"cursor":{"x":41}}],[1.248427,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":40}}],[0.143263,{"lines":{"37":[["                                                                                 20,42         All ",{}]]},"cursor":{"x":41}}],[0.175861,{"lines":{"37":[["                                                                                 20,43         All ",{}]]},"cursor":{"x":42}}],[0.151908,{"lines":{"37":[["                                                                                 20,44         All ",{}]]},"cursor":{"x":43}}],[0.152213,{"lines":{"37":[["                                                                                 20,45         All ",{}]]},"cursor":{"x":44}}],[0.263853,{"lines":{"37":[["                                                                                 20,46         All ",{}]]},"cursor":{"x":45}}],[0.23213,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     20,46         All ",{}]]}}],[0.45623,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", /",{}],["1",{"fg":1}],["),                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,47         All ",{}]]},"cursor":{"x":46}}],[0.240203,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/*1),",{"fg":4}],["                                                 ",{}]],"20":[["};",{"fg":4}],["                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,48         All ",{}]]},"cursor":{"x":47}}],[0.895919,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* 1),",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,49         All ",{}]]},"cursor":{"x":48}}],[0.143941,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* s1),",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,50         All ",{}]]},"cursor":{"x":49}}],[0.08787200000000001,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* se1),",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,51         All ",{}]]},"cursor":{"x":50}}],[0.200095,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* sec1),",{"fg":4}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,52         All ",{}]]},"cursor":{"x":51}}],[0.143967,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs1),",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,53         All ",{}]]},"cursor":{"x":52}}],[0.232012,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_1),",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,54         All ",{}]]},"cursor":{"x":53}}],[0.216048,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_p1),",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,55         All ",{}]]},"cursor":{"x":54}}],[0.119976,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_pe1),",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,56         All ",{}]]},"cursor":{"x":55}}],[0.096219,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per1),",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,57         All ",{}]]},"cursor":{"x":56}}],[0.287771,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_1),",{"fg":4}],["                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,58         All ",{}]]},"cursor":{"x":57}}],[0.14401,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_b1),",{"fg":4}],["                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,59         All ",{}]]},"cursor":{"x":58}}],[0.104034,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bu1),",{"fg":4}],["                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,60         All ",{}]]},"cursor":{"x":59}}],[0.136094,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_buc1),",{"fg":4}],["                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,61         All ",{}]]},"cursor":{"x":60}}],[0.119947,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_buck1),",{"fg":4}],["                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,62         All ",{}]]},"cursor":{"x":61}}],[0.096105,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucke1),",{"fg":4}],["                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,63         All ",{}]]},"cursor":{"x":62}}],[0.06377099999999999,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket1),",{"fg":4}],["                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,64         All ",{}]]},"cursor":{"x":63}}],[0.175852,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket 1),",{"fg":4}],["                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,65         All ",{}]]},"cursor":{"x":64}}],[0.20832,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket =1),",{"fg":4}],["                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,66         All ",{}]]},"cursor":{"x":65}}],[0.103961,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = 1),",{"fg":4}],["                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,67         All ",{}]]},"cursor":{"x":66}}],[0.335947,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = *1),",{"fg":4}],["                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,68         All ",{}]]},"cursor":{"x":67}}],[0.19212,{"lines":{"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"20":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,69         All ",{}]]},"cursor":{"x":68}}],[0.216376,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":67}}],[0.327338,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.071572,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.112342,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.806438,{"lines":{"37":[["\"ch15_3.cpp\" 21L, 616C written                                                   20,68         All ",{}]]},"cursor":{"x":67,"y":19,"visible":true}}],[0.345699,{"lines":{"20":[["                                                                                                   ",{}]],"21":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,9          All ",{}]]},"cursor":{"x":8,"y":20}}],[0.320018,{"lines":{"20":[["        h                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,10         All ",{}]]},"cursor":{"x":9}}],[0.09586799999999999,{"lines":{"20":[["        ho                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,11         All ",{}]]},"cursor":{"x":10}}],[0.135973,{"lines":{"20":[["        hou                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,12         All ",{}]]},"cursor":{"x":11}}],[0.128111,{"lines":{"20":[["        hour                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,13         All ",{}]]},"cursor":{"x":12}}],[0.295896,{"lines":{"20":[["        hour_                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,14         All ",{}]]},"cursor":{"x":13}}],[0.184014,{"lines":{"20":[["        hour_c                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,15         All ",{}]]},"cursor":{"x":14}}],[0.088033,{"lines":{"20":[["        hour_co                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,16         All ",{}]]},"cursor":{"x":15}}],[0.072031,{"lines":{"20":[["        hour_cou                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,17         All ",{}]]},"cursor":{"x":16}}],[0.239973,{"lines":{"20":[["        hour_coun                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,18         All ",{}]]},"cursor":{"x":17}}],[0.128115,{"lines":{"20":[["        hour_count                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,19         All ",{}]]},"cursor":{"x":18}}],[0.175834,{"lines":{"20":[["        hour_counts                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,20         All ",{}]]},"cursor":{"x":19}}],[0.320562,{"lines":{"20":[["        hour_counts(                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,21         All ",{}]]},"cursor":{"x":20}}],[1.695466,{"lines":{"20":[["        hour_counts(",{}],["6",{"fg":1}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,22         All ",{}]]},"cursor":{"x":21}}],[0.264086,{"lines":{"20":[["        hour_counts(",{}],["60",{"fg":1}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,23         All ",{}]]},"cursor":{"x":22}}],[0.496009,{"lines":{"20":[["        hour_counts(",{}],["60",{"fg":1}],[",                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,24         All ",{}]]},"cursor":{"x":23}}],[0.319994,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     21,25         All ",{}]]},"cursor":{"x":24}}],[0.207972,{"lines":{"20":[["        hour_counts(",{}],["60",{"fg":1}],[", ",{}],["6",{"fg":1}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,26         All ",{}]]},"cursor":{"x":25}}],[0.128065,{"lines":{"20":[["        hour_counts(",{}],["60",{"fg":1}],[", ",{}],["60",{"fg":1}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,27         All ",{}]]},"cursor":{"x":26}}],[0.283181,{"lines":{"20":[["        hour_counts",{}],["(",{"bg":6}],["60",{"fg":1}],[", ",{}],["60",{"fg":1}],[")",{"bg":6}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,28         All ",{}]]},"cursor":{"x":27}}],[0.909384,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":26}}],[0.172868,{"lines":{"20":[["        hour_counts(",{}],["60",{"fg":1}],[", ",{}],["60",{"fg":1}],[")                                                                        ",{}]],"37":[["                                                                                 21,26         All ",{}]]},"cursor":{"x":25}}],[0.17043,{"lines":{"37":[["                                                                                 21,25         All ",{}]]},"cursor":{"x":24}}],[0.14386,{"lines":{"37":[["                                                                                 21,24         All ",{}]]},"cursor":{"x":23}}],[0.144319,{"lines":{"37":[["                                                                                 21,23         All ",{}]]},"cursor":{"x":22}}],[0.159639,{"lines":{"37":[["                                                                                 21,22         All ",{}]]},"cursor":{"x":21}}],[0.127962,{"lines":{"37":[["                                                                                 21,21         All ",{}]]},"cursor":{"x":20}}],[0.239895,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     21,21         All ",{}]]}}],[0.400503,{"lines":{"20":[["        hour_counts(/",{}],["60",{"fg":1}],[", ",{}],["60",{"fg":1}],[")                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,22         All ",{}]]},"cursor":{"x":21}}],[0.21593,{"lines":{"20":[["        hour_counts(",{}],["/*60, 60)",{"fg":4}],["                                                                      ",{}]],"21":[["};",{"fg":4}],["                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,23         All ",{}]]},"cursor":{"x":22}}],[0.511919,{"lines":{"20":[["        hour_counts(",{}],["/*n60, 60)",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,24         All ",{}]]},"cursor":{"x":23}}],[0.19302,{"lines":{"20":[["        hour_counts(",{}],["/*ny60, 60)",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,25         All ",{}]]},"cursor":{"x":24}}],[0.006789,{"lines":{"20":[["        hour_counts(",{}],["/*nyu60, 60)",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,26         All ",{}]]},"cursor":{"x":25}}],[0.304213,{"lines":{"20":[["        hour_counts(",{}],["/*ny60, 60)",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,25         All ",{}]]},"cursor":{"x":24}}],[0.152105,{"lines":{"20":[["        hour_counts(",{}],["/*n60, 60)",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,24         All ",{}]]},"cursor":{"x":23}}],[0.143879,{"lines":{"20":[["        hour_counts(",{}],["/*n 60, 60)",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,25         All ",{}]]},"cursor":{"x":24}}],[0.20821,{"lines":{"20":[["        hour_counts(",{}],["/*n60, 60)",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,24         All ",{}]]},"cursor":{"x":23}}],[0.143776,{"lines":{"20":[["        hour_counts(",{}],["/*60, 60)",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,23         All ",{}]]},"cursor":{"x":22}}],[0.096247,{"lines":{"20":[["        hour_counts(",{}],["/* 60, 60)",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,24         All ",{}]]},"cursor":{"x":23}}],[0.312055,{"lines":{"20":[["        hour_counts(",{}],["/* n60, 60)",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,25         All ",{}]]},"cursor":{"x":24}}],[0.151222,{"lines":{"20":[["        hour_counts(",{}],["/* nu60, 60)",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,26         All ",{}]]},"cursor":{"x":25}}],[0.176569,{"lines":{"20":[["        hour_counts(",{}],["/* num60, 60)",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,27         All ",{}]]},"cursor":{"x":26}}],[0.399962,{"lines":{"20":[["        hour_counts(",{}],["/* num_60, 60)",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,28         All ",{}]]},"cursor":{"x":27}}],[0.288043,{"lines":{"20":[["        hour_counts(",{}],["/* num_b60, 60)",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,29         All ",{}]]},"cursor":{"x":28}}],[0.096165,{"lines":{"20":[["        hour_counts(",{}],["/* num_bu60, 60)",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,30         All ",{}]]},"cursor":{"x":29}}],[0.127771,{"lines":{"20":[["        hour_counts(",{}],["/* num_buc60, 60)",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,31         All ",{}]]},"cursor":{"x":30}}],[0.11199,{"lines":{"20":[["        hour_counts(",{}],["/* num_buck60, 60)",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,32         All ",{}]]},"cursor":{"x":31}}],[0.096014,{"lines":{"20":[["        hour_counts(",{}],["/* num_bucke60, 60)",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,33         All ",{}]]},"cursor":{"x":32}}],[0.08803999999999999,{"lines":{"20":[["        hour_counts(",{}],["/* num_bucket60, 60)",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,34         All ",{}]]},"cursor":{"x":33}}],[0.167967,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets60, 60)",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,35         All ",{}]]},"cursor":{"x":34}}],[0.167974,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets 60, 60)",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,36         All ",{}]]},"cursor":{"x":35}}],[0.159964,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets =60, 60)",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,37         All ",{}]]},"cursor":{"x":36}}],[0.120098,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = 60, 60)",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,38         All ",{}]]},"cursor":{"x":37}}],[0.264087,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = *60, 60)",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,39         All ",{}]]},"cursor":{"x":38}}],[0.208342,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["60",{"fg":1}],[")                                                     ",{}]],"21":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,40         All ",{}]]},"cursor":{"x":39}}],[0.135693,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["60",{"fg":1}],[")                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,41         All ",{}]]},"cursor":{"x":40}}],[0.240408,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":39}}],[0.159273,{"lines":{"37":[["                                                                                 21,41         All ",{}]]},"cursor":{"x":40}}],[0.151866,{"lines":{"37":[["                                                                                 21,42         All ",{}]]},"cursor":{"x":41}}],[0.160408,{"lines":{"37":[["                                                                                 21,43         All ",{}]]},"cursor":{"x":42}}],[0.135898,{"lines":{"37":[["                                                                                 21,44         All ",{}]]},"cursor":{"x":43}}],[0.143488,{"lines":{"37":[["                                                                                 21,45         All ",{}]]},"cursor":{"x":44}}],[0.184126,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     21,45         All ",{}]]}}],[0.416568,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", /",{}],["60",{"fg":1}],[")                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,46         All ",{}]]},"cursor":{"x":45}}],[0.208138,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/*60)",{"fg":4}],["                                                  ",{}]],"21":[["};",{"fg":4}],["                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,47         All ",{}]]},"cursor":{"x":46}}],[0.167229,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* 60)",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,48         All ",{}]]},"cursor":{"x":47}}],[0.4321,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* s60)",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,49         All ",{}]]},"cursor":{"x":48}}],[0.192604,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* se60)",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,50         All ",{}]]},"cursor":{"x":49}}],[0.232014,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* sec60)",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,51         All ",{}]]},"cursor":{"x":50}}],[0.151193,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs60)",{"fg":4}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,52         All ",{}]]},"cursor":{"x":51}}],[0.312726,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_60)",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,53         All ",{}]]},"cursor":{"x":52}}],[0.368057,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_p60)",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,54         All ",{}]]},"cursor":{"x":53}}],[0.071919,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_pe60)",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,55         All ",{}]]},"cursor":{"x":54}}],[0.08812300000000001,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per60)",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,56         All ",{}]]},"cursor":{"x":55}}],[0.216011,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_60)",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,57         All ",{}]]},"cursor":{"x":56}}],[0.127869,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_b60)",{"fg":4}],["                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,58         All ",{}]]},"cursor":{"x":57}}],[0.087991,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bu60)",{"fg":4}],["                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,59         All ",{}]]},"cursor":{"x":58}}],[0.120066,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_buc60)",{"fg":4}],["                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,60         All ",{}]]},"cursor":{"x":59}}],[0.087947,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_buck60)",{"fg":4}],["                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,61         All ",{}]]},"cursor":{"x":60}}],[0.104042,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucke60)",{"fg":4}],["                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,62         All ",{}]]},"cursor":{"x":61}}],[0.056144,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket60)",{"fg":4}],["                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,63         All ",{}]]},"cursor":{"x":62}}],[0.439894,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket 60)",{"fg":4}],["                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,64         All ",{}]]},"cursor":{"x":63}}],[0.247964,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket *60)",{"fg":4}],["                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,65         All ",{}]]},"cursor":{"x":64}}],[0.120202,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],["60",{"fg":1}],[")                               ",{}]],"21":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,66         All ",{}]]},"cursor":{"x":65}}],[0.48046,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[")                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,67         All ",{}]]},"cursor":{"x":66}}],[0.328043,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":65}}],[0.663028,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.087629,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.128278,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.104645,{"lines":{"37":[["\"ch15_3.cpp\" 22L, 686C written                                                   21,66         All ",{}]]},"cursor":{"x":65,"y":20,"visible":true}}],[1.17885,{"lines":{"20":[["        hour_counts",{}],["(",{"bg":6}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[")",{"bg":6}],["                              ",{}]],"37":[["\"ch15_3.cpp\" 22L, 686C written                                                   21,69         All ",{}]]},"cursor":{"x":68}}],[0.192159,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     21,70         All ",{}]]},"cursor":{"x":69}}],[0.151448,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[")                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,71         All ",{}]]},"cursor":{"x":70}}],[0.240773,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") ",{}],["{",{"bg":6}],["                            ",{}]],"21":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,72         All ",{}]]},"cursor":{"x":71}}],[0.199268,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"21":[["                                                                                                   ",{}]],"22":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,9          All ",{}]]},"cursor":{"x":8,"y":21}}],[0.256305,{"lines":{"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") ",{}],["{",{"bg":6}],["                            ",{}]],"21":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,10         All ",{}]]},"cursor":{"x":9}}],[0.125394,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":8}}],[1.004191,{"cursor":{"visible":false}}],[0.001901,{"lines":{"37":[["                                                                                 22,9          All ",{}]]},"cursor":{"visible":true}}],[0.108502,{"lines":{"21":[["       ",{}],["}",{"bg":6}],["                                                                                           ",{}]],"37":[["                                                                                 22,8          All ",{}]]},"cursor":{"x":7}}],[0.480088,{"lines":{"21":[["      ",{}],["}",{"bg":6}],["                                                                                            ",{}]],"37":[["                                                                                 22,7          All ",{}]]},"cursor":{"x":6}}],[0.239869,{"lines":{"21":[["     ",{}],["}",{"bg":6}],["                                                                                             ",{}]],"37":[["                                                                                 22,6          All ",{}]]},"cursor":{"x":5}}],[0.248138,{"lines":{"21":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 22,5          All ",{}]]},"cursor":{"x":4}}],[0.64422,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.136066,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.015647,{"lines":{"37":[[":wq                                                                                                ",{}]]},"cursor":{"x":3}}],[0.096536,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.093627,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch15_3.cpp                                        ",{}]],"1":[["                                                                                                   ",{}]],"2":[["                                                                                                   ",{}]],"3":[["                                                                                                   ",{}]],"4":[["                                                                                                   ",{}]],"6":[["                                                                                                   ",{}]],"8":[["                                                                                                   ",{}]],"9":[["                                                                                                   ",{}]],"10":[["                                                                                                   ",{}]],"13":[["                                                                                                   ",{}]],"14":[["                                                                                                   ",{}]],"15":[["                                                                                                   ",{}]],"17":[["                                                                                                   ",{}]],"18":[["                                                                                                   ",{}]],"19":[["                                                                                                   ",{}]],"20":[["                                                                                                   ",{}]],"21":[["                                                                                                   ",{}]],"22":[["                                                                                                   ",{}]],"23":[["                                                                                                   ",{}]],"24":[["                                                                                                   ",{}]],"25":[["                                                                                                   ",{}]],"26":[["                                                                                                   ",{}]],"27":[["                                                                                                   ",{}]],"28":[["                                                                                                   ",{}]],"29":[["                                                                                                   ",{}]],"30":[["                                                                                                   ",{}]],"31":[["                                                                                                   ",{}]],"32":[["                                                                                                   ",{}]],"33":[["                                                                                                   ",{}]],"34":[["                                                                                                   ",{}]],"35":[["                                                                                                   ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                                   ",{}]]},"cursor":{"x":0,"y":1,"visible":true}}],[0.000482,{"lines":{"1":[["gsong@gsong-desktop:~/ch15-min_hour_counter$                                                       ",{}]]},"cursor":{"x":45}}],[1.113588,{"lines":{"1":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch15_3.cpp                                        ",{}]]},"cursor":{"x":59}}],[0.376682,{"cursor":{"x":0,"y":2}}],[0.030732,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["                                                                                                   ",{}]]}}],[0.005765,{"lines":{"0":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"1":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"2":[["public",{"fg":3}],[":                                                                                            ",{}]],"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"4":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"6":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"8":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"9":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"10":[["};                                                                                                 ",{}]],"13":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"14":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"15":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"17":[["public",{"fg":3}],[":                                                                                            ",{}]],"18":[["    MinuteHourCounter() :                                                                          ",{}]],"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"21":[["    }                                                                                              ",{}]],"22":[["};                                                                                                 ",{}]],"23":[["~                                                                                                  ",{"fg":4,"bold":true}]],"24":[["~                                                                                                  ",{"fg":4,"bold":true}]],"25":[["~                                                                                                  ",{"fg":4,"bold":true}]],"26":[["~                                                                                                  ",{"fg":4,"bold":true}]],"27":[["~                                                                                                  ",{"fg":4,"bold":true}]],"28":[["~                                                                                                  ",{"fg":4,"bold":true}]],"29":[["~                                                                                                  ",{"fg":4,"bold":true}]],"30":[["~                                                                                                  ",{"fg":4,"bold":true}]],"31":[["~                                                                                                  ",{"fg":4,"bold":true}]],"32":[["~                                                                                                  ",{"fg":4,"bold":true}]],"33":[["~                                                                                                  ",{"fg":4,"bold":true}]],"34":[["~                                                                                                  ",{"fg":4,"bold":true}]],"35":[["~                                                                                                  ",{"fg":4,"bold":true}]],"36":[["~                                                                                                  ",{"fg":4,"bold":true}]],"37":[["\"ch15_3.cpp\" 23L, 694C                                                           1,1           All ",{}]]},"cursor":{"y":0}}],[0.021738,{}],[0.613345,{"lines":{"37":[["\"ch15_3.cpp\" 23L, 694C                                                           2,1           All ",{}]]},"cursor":{"y":1}}],[0.403772,{"lines":{"13":[["class",{"fg":2}],[" MinuteHourCounter ",{}],["{",{"bg":6}],["                                                                          ",{}]],"22":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["\"ch15_3.cpp\" 23L, 694C                                                           23,1          All ",{}]]},"cursor":{"y":22}}],[0.588019,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.087964,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.112543,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.111827,{"lines":{"37":[["\"ch15_3.cpp\" 23L, 694C written                                                   23,1          All ",{}]]},"cursor":{"x":0,"y":22,"visible":true}}],[1.114266,{"lines":{"13":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"22":[["};                                                                                                 ",{}]],"37":[["\"ch15_3.cpp\" 23L, 694C written                                                   22,1          All ",{}]]},"cursor":{"y":21}}],[0.454041,{"lines":{"22":[["                                                                                                   ",{}]],"23":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,5          All ",{}]]},"cursor":{"x":4,"y":22}}],[0.207929,{"lines":{"23":[["                                                                                                   ",{}]],"24":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,5          All ",{}]]},"cursor":{"y":23}}],[0.303815,{"lines":{"23":[["    v                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,6          All ",{}]]},"cursor":{"x":5}}],[0.063902,{"lines":{"23":[["    vo                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,7          All ",{}]]},"cursor":{"x":6}}],[0.079877,{"lines":{"23":[["    voi                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,8          All ",{}]]},"cursor":{"x":7}}],[0.048103,{"lines":{"23":[["    ",{}],["void",{"fg":2}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,9          All ",{}]]},"cursor":{"x":8}}],[0.111999,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     24,10         All ",{}]]},"cursor":{"x":9}}],[0.552076,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" A                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,11         All ",{}]]},"cursor":{"x":10}}],[0.175835,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Ad                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,12         All ",{}]]},"cursor":{"x":11}}],[0.144119,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,13         All ",{}]]},"cursor":{"x":12}}],[0.264395,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,14         All ",{}]]},"cursor":{"x":13}}],[0.223706,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(i                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,15         All ",{}]]},"cursor":{"x":14}}],[0.08805499999999999,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(in                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,16         All ",{}]]},"cursor":{"x":15}}],[0.071828,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,17         All ",{}]]},"cursor":{"x":16}}],[0.07995099999999999,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     24,18         All ",{}]]},"cursor":{"x":17}}],[0.128037,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" c                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,19         All ",{}]]},"cursor":{"x":18}}],[0.033468,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" co                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,20         All ",{}]]},"cursor":{"x":19}}],[0.094579,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" cou                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,21         All ",{}]]},"cursor":{"x":20}}],[0.184042,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" coun                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,22         All ",{}]]},"cursor":{"x":21}}],[0.07990899999999999,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,23         All ",{}]]},"cursor":{"x":22}}],[0.329892,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add",{}],["(",{"bg":6}],["int",{"fg":2}],[" count",{}],[")",{"bg":6}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,24         All ",{}]]},"cursor":{"x":23}}],[0.504981,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count)                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,25         All ",{}]]},"cursor":{"x":24}}],[0.200725,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                          ",{}]],"24":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,26         All ",{}]]},"cursor":{"x":25}}],[0.159257,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"24":[["                                                                                                   ",{}]],"25":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,5          All ",{}]]},"cursor":{"x":4,"y":24}}],[0.248582,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                          ",{}]],"24":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,6          All ",{}]]},"cursor":{"x":5}}],[0.669283,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":4}}],[0.269355,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"24":[["    }                                                                                              ",{}]],"37":[["                                                                                 24,5          All ",{}]]},"cursor":{"y":23}}],[0.145974,{"lines":{"24":[["                                                                                                   ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,5          All ",{}]]},"cursor":{"y":24}}],[0.151918,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     25,9          All ",{}]]},"cursor":{"x":8}}],[0.184,{"lines":{"24":[["        t                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,10         All ",{}]]},"cursor":{"x":9}}],[0.07215100000000001,{"lines":{"24":[["        ti                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,11         All ",{}]]},"cursor":{"x":10}}],[0.143849,{"lines":{"24":[["        tim                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,12         All ",{}]]},"cursor":{"x":11}}],[0.088071,{"lines":{"24":[["        time                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,13         All ",{}]]},"cursor":{"x":12}}],[0.263986,{"lines":{"24":[["        time_                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,14         All ",{}]]},"cursor":{"x":13}}],[0.184005,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,15         All ",{}]]},"cursor":{"x":14}}],[0.120008,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     25,16         All ",{}]]},"cursor":{"x":15}}],[0.327985,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" n                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,17         All ",{}]]},"cursor":{"x":16}}],[0.047941,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" no                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,18         All ",{}]]},"cursor":{"x":17}}],[0.104021,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,19         All ",{}]]},"cursor":{"x":18}}],[0.112314,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     25,20         All ",{}]]},"cursor":{"x":19}}],[0.359793,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now =                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,21         All ",{}]]},"cursor":{"x":20}}],[0.08819399999999999,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     25,22         All ",{}]]},"cursor":{"x":21}}],[0.223902,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = t                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,23         All ",{}]]},"cursor":{"x":22}}],[0.13585,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = ti                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,24         All ",{}]]},"cursor":{"x":23}}],[0.007964000000000001,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = tio                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,25         All ",{}]]},"cursor":{"x":24}}],[0.176275,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = tiom                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,26         All ",{}]]},"cursor":{"x":25}}],[0.255993,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = tio                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,25         All ",{}]]},"cursor":{"x":24}}],[0.13668,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = ti                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,24         All ",{}]]},"cursor":{"x":23}}],[0.247189,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = tim                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,25         All ",{}]]},"cursor":{"x":24}}],[0.120066,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = time                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,26         All ",{}]]},"cursor":{"x":25}}],[0.328288,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = time(                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,27         All ",{}]]},"cursor":{"x":26}}],[0.011116,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = time",{}],["()",{"bg":6}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,28         All ",{}]]},"cursor":{"x":27}}],[0.031818,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = time()_                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,29         All ",{}]]},"cursor":{"x":28}}],[0.312278,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = time",{}],["()",{"bg":6}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,28         All ",{}]]},"cursor":{"x":27}}],[0.167761,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = time(                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,27         All ",{}]]},"cursor":{"x":26}}],[0.848303,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = time",{}],["()",{"bg":6}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,28         All ",{}]]},"cursor":{"x":27}}],[0.567304,{"lines":{"24":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,29         All ",{}]]},"cursor":{"x":28}}],[0.237314,{"lines":{"25":[["                                                                                                   ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,9          All ",{}]]},"cursor":{"x":8,"y":25}}],[0.479699,{"lines":{"25":[["        m                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,10         All ",{}]]},"cursor":{"x":9}}],[0.07198,{"lines":{"25":[["        mi                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,11         All ",{}]]},"cursor":{"x":10}}],[0.191998,{"lines":{"25":[["        min                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,12         All ",{}]]},"cursor":{"x":11}}],[0.176024,{"lines":{"25":[["        minu                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,13         All ",{}]]},"cursor":{"x":12}}],[0.15205,{"lines":{"25":[["        minut                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,14         All ",{}]]},"cursor":{"x":13}}],[0.064057,{"lines":{"25":[["        minute                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,15         All ",{}]]},"cursor":{"x":14}}],[0.28011,{"lines":{"25":[["        minute_                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,16         All ",{}]]},"cursor":{"x":15}}],[0.207725,{"lines":{"25":[["        minute_c                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,17         All ",{}]]},"cursor":{"x":16}}],[0.136009,{"lines":{"25":[["        minute_co                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,18         All ",{}]]},"cursor":{"x":17}}],[0.104227,{"lines":{"25":[["        minute_cou                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,19         All ",{}]]},"cursor":{"x":18}}],[0.175875,{"lines":{"25":[["        minute_coun                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,20         All ",{}]]},"cursor":{"x":19}}],[0.079897,{"lines":{"25":[["        minute_count                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,21         All ",{}]]},"cursor":{"x":20}}],[0.183993,{"lines":{"25":[["        minute_counts                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,22         All ",{}]]},"cursor":{"x":21}}],[0.136269,{"lines":{"25":[["        minute_counts.                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,23         All ",{}]]},"cursor":{"x":22}}],[0.239825,{"lines":{"25":[["        minute_counts.A                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,24         All ",{}]]},"cursor":{"x":23}}],[0.144035,{"lines":{"25":[["        minute_counts.Ad                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,25         All ",{}]]},"cursor":{"x":24}}],[0.152041,{"lines":{"25":[["        minute_counts.Add                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,26         All ",{}]]},"cursor":{"x":25}}],[0.488368,{"lines":{"25":[["        minute_counts.Add(                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,27         All ",{}]]},"cursor":{"x":26}}],[0.743706,{"lines":{"25":[["        minute_counts.Add(c                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,28         All ",{}]]},"cursor":{"x":27}}],[0.071907,{"lines":{"25":[["        minute_counts.Add(co                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,29         All ",{}]]},"cursor":{"x":28}}],[0.07192999999999999,{"lines":{"25":[["        minute_counts.Add(cou                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,30         All ",{}]]},"cursor":{"x":29}}],[0.176237,{"lines":{"25":[["        minute_counts.Add(coun                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,31         All ",{}]]},"cursor":{"x":30}}],[0.127889,{"lines":{"25":[["        minute_counts.Add(count                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,32         All ",{}]]},"cursor":{"x":31}}],[0.160024,{"lines":{"25":[["        minute_counts.Add(count,                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,33         All ",{}]]},"cursor":{"x":32}}],[0.144023,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     26,34         All ",{}]]},"cursor":{"x":33}}],[0.143914,{"lines":{"25":[["        minute_counts.Add(count, n                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,35         All ",{}]]},"cursor":{"x":34}}],[0.047925,{"lines":{"25":[["        minute_counts.Add(count, no                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,36         All ",{}]]},"cursor":{"x":35}}],[0.064084,{"lines":{"25":[["        minute_counts.Add(count, now                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,37         All ",{}]]},"cursor":{"x":36}}],[0.307528,{"lines":{"25":[["        minute_counts.Add",{}],["(",{"bg":6}],["count, now",{}],[")",{"bg":6}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,38         All ",{}]]},"cursor":{"x":37}}],[0.383423,{"lines":{"25":[["        minute_counts.Add(count, now);                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,39         All ",{}]]},"cursor":{"x":38}}],[0.181408,{"lines":{"26":[["                                                                                                   ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,9          All ",{}]]},"cursor":{"x":8,"y":26}}],[0.655816,{"lines":{"26":[["        h                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,10         All ",{}]]},"cursor":{"x":9}}],[0.07964599999999999,{"lines":{"26":[["        ho                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,11         All ",{}]]},"cursor":{"x":10}}],[0.112024,{"lines":{"26":[["        hou                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,12         All ",{}]]},"cursor":{"x":11}}],[0.08801100000000001,{"lines":{"26":[["        hour                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,13         All ",{}]]},"cursor":{"x":12}}],[0.263917,{"lines":{"26":[["        hour_                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,14         All ",{}]]},"cursor":{"x":13}}],[0.92806,{"lines":{"26":[["        hour_c                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,15         All ",{}]]},"cursor":{"x":14}}],[0.08798,{"lines":{"26":[["        hour_co                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,16         All ",{}]]},"cursor":{"x":15}}],[0.072144,{"lines":{"26":[["        hour_cou                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,17         All ",{}]]},"cursor":{"x":16}}],[0.184253,{"lines":{"26":[["        hour_coun                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,18         All ",{}]]},"cursor":{"x":17}}],[0.015448,{"lines":{"26":[["        hour_count                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,19         All ",{}]]},"cursor":{"x":18}}],[0.864212,{"lines":{"26":[["        hour_counts                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,20         All ",{}]]},"cursor":{"x":19}}],[0.280429,{"lines":{"26":[["        hour_counts.                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,21         All ",{}]]},"cursor":{"x":20}}],[0.631781,{"lines":{"26":[["        hour_counts.A                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,22         All ",{}]]},"cursor":{"x":21}}],[0.143729,{"lines":{"26":[["        hour_counts.Ad                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,23         All ",{}]]},"cursor":{"x":22}}],[0.152086,{"lines":{"26":[["        hour_counts.Add                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,24         All ",{}]]},"cursor":{"x":23}}],[0.800549,{"lines":{"26":[["        hour_counts.Add(                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,25         All ",{}]]},"cursor":{"x":24}}],[0.255538,{"lines":{"26":[["        hour_counts.Add(c                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,26         All ",{}]]},"cursor":{"x":25}}],[0.087949,{"lines":{"26":[["        hour_counts.Add(co                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,27         All ",{}]]},"cursor":{"x":26}}],[0.08791599999999999,{"lines":{"26":[["        hour_counts.Add(cou                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,28         All ",{}]]},"cursor":{"x":27}}],[0.200035,{"lines":{"26":[["        hour_counts.Add(coun                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,29         All ",{}]]},"cursor":{"x":28}}],[0.152904,{"lines":{"26":[["        hour_counts.Add(count                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,30         All ",{}]]},"cursor":{"x":29}}],[0.630445,{"lines":{"26":[["        hour_counts.Add(count,                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,31         All ",{}]]},"cursor":{"x":30}}],[0.128646,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     27,32         All ",{}]]},"cursor":{"x":31}}],[0.160026,{"lines":{"26":[["        hour_counts.Add(count, n                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,33         All ",{}]]},"cursor":{"x":32}}],[0.056291,{"lines":{"26":[["        hour_counts.Add(count, no                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,34         All ",{}]]},"cursor":{"x":33}}],[0.07950699999999999,{"lines":{"26":[["        hour_counts.Add(count, now                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,35         All ",{}]]},"cursor":{"x":34}}],[0.347859,{"lines":{"26":[["        hour_counts.Add",{}],["(",{"bg":6}],["count, now",{}],[")",{"bg":6}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,36         All ",{}]]},"cursor":{"x":35}}],[0.455529,{"lines":{"26":[["        hour_counts.Add(count, now);                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,37         All ",{}]]},"cursor":{"x":36}}],[1.045544,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":35}}],[0.411307,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                          ",{}]],"27":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 28,5          All ",{}]]},"cursor":{"x":4,"y":27}}],[0.767101,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,5          All ",{}]]},"cursor":{"y":28}}],[0.677123,{"lines":{"29":[["                                                                                                   ",{}]],"30":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,5          All ",{}]]},"cursor":{"y":29}}],[0.431643,{"lines":{"29":[["    i                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,6          All ",{}]]},"cursor":{"x":5}}],[0.063944,{"lines":{"29":[["    in                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,7          All ",{}]]},"cursor":{"x":6}}],[0.048074,{"lines":{"29":[["    ",{}],["int",{"fg":2}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,8          All ",{}]]},"cursor":{"x":7}}],[0.104249,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     30,9          All ",{}]]},"cursor":{"x":8}}],[0.208055,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" M                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,10         All ",{}]]},"cursor":{"x":9}}],[0.415805,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" Mi                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,11         All ",{}]]},"cursor":{"x":10}}],[0.223966,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" Min                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,12         All ",{}]]},"cursor":{"x":11}}],[0.16792,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" Minu                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,13         All ",{}]]},"cursor":{"x":12}}],[0.135939,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" Minut                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,14         All ",{}]]},"cursor":{"x":13}}],[0.056094,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" Minute                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,15         All ",{}]]},"cursor":{"x":14}}],[0.536462,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteC                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,16         All ",{}]]},"cursor":{"x":15}}],[0.19158,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCo                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,17         All ",{}]]},"cursor":{"x":16}}],[0.080031,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCou                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,18         All ",{}]]},"cursor":{"x":17}}],[0.216007,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCoun                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,19         All ",{}]]},"cursor":{"x":18}}],[0.095914,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,20         All ",{}]]},"cursor":{"x":19}}],[0.280384,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount(                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,21         All ",{}]]},"cursor":{"x":20}}],[0.067652,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount",{}],["()",{"bg":6}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,22         All ",{}]]},"cursor":{"x":21}}],[0.095608,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount()                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,23         All ",{}]]},"cursor":{"x":22}}],[0.320476,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"30":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,24         All ",{}]]},"cursor":{"x":23}}],[0.23157,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"30":[["                                                                                                   ",{}]],"31":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,5          All ",{}]]},"cursor":{"x":4,"y":30}}],[0.25642,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"30":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,6          All ",{}]]},"cursor":{"x":5}}],[0.196786,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":4}}],[0.358102,{"cursor":{"visible":false}}],[0.000315,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"30":[["    }                                                                                              ",{}]],"37":[["                                                                                 30,5          All ",{}]]},"cursor":{"y":29,"visible":true}}],[0.144789,{"lines":{"30":[["                                                                                                   ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,5          All ",{}]]},"cursor":{"y":30}}],[0.128239,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     31,9          All ",{}]]},"cursor":{"x":8}}],[0.456628,{"lines":{"30":[["        t                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,10         All ",{}]]},"cursor":{"x":9}}],[0.08706999999999999,{"lines":{"30":[["        ti                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,11         All ",{}]]},"cursor":{"x":10}}],[0.161057,{"lines":{"30":[["        tim                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,12         All ",{}]]},"cursor":{"x":11}}],[0.078851,{"lines":{"30":[["        time                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,13         All ",{}]]},"cursor":{"x":12}}],[0.240054,{"lines":{"30":[["        time_                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,14         All ",{}]]},"cursor":{"x":13}}],[0.136106,{"lines":{"30":[["        ",{}],["time_t",{"fg":2}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,15         All ",{}]]},"cursor":{"x":14}}],[0.087897,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     31,16         All ",{}]]},"cursor":{"x":15}}],[0.144051,{"lines":{"30":[["        ",{}],["time_t",{"fg":2}],[" n                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,17         All ",{}]]},"cursor":{"x":16}}],[0.047912,{"lines":{"30":[["        ",{}],["time_t",{"fg":2}],[" no                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,18         All ",{}]]},"cursor":{"x":17}}],[0.071905,{"lines":{"30":[["        ",{}],["time_t",{"fg":2}],[" now                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,19         All ",{}]]},"cursor":{"x":18}}],[0.104373,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     31,20         All ",{}]]},"cursor":{"x":19}}],[0.263819,{"lines":{"30":[["        ",{}],["time_t",{"fg":2}],[" now =                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,21         All ",{}]]},"cursor":{"x":20}}],[0.127964,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     31,22         All ",{}]]},"cursor":{"x":21}}],[0.775977,{"lines":{"30":[["        ",{}],["time_t",{"fg":2}],[" now = t                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,23         All ",{}]]},"cursor":{"x":22}}],[0.064029,{"lines":{"30":[["        ",{}],["time_t",{"fg":2}],[" now = ti                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,24         All ",{}]]},"cursor":{"x":23}}],[0.160009,{"lines":{"30":[["        ",{}],["time_t",{"fg":2}],[" now = tim                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,25         All ",{}]]},"cursor":{"x":24}}],[0.071948,{"lines":{"30":[["        ",{}],["time_t",{"fg":2}],[" now = time                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,26         All ",{}]]},"cursor":{"x":25}}],[0.280603,{"lines":{"30":[["        ",{}],["time_t",{"fg":2}],[" now = time(                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,27         All ",{}]]},"cursor":{"x":26}}],[0.051952,{"lines":{"30":[["        ",{}],["time_t",{"fg":2}],[" now = time",{}],["()",{"bg":6}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,28         All ",{}]]},"cursor":{"x":27}}],[0.238992,{"lines":{"30":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,29         All ",{}]]},"cursor":{"x":28}}],[0.220625,{"lines":{"31":[["                                                                                                   ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,9          All ",{}]]},"cursor":{"x":8,"y":31}}],[0.215867,{"lines":{"31":[["        r                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,10         All ",{}]]},"cursor":{"x":9}}],[0.048209,{"lines":{"31":[["        re                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,11         All ",{}]]},"cursor":{"x":10}}],[0.14372,{"lines":{"31":[["        ret                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,12         All ",{}]]},"cursor":{"x":11}}],[0.07213899999999999,{"lines":{"31":[["        retu                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,13         All ",{}]]},"cursor":{"x":12}}],[0.10385,{"lines":{"31":[["        retur                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,14         All ",{}]]},"cursor":{"x":13}}],[0.048145,{"lines":{"31":[["        ",{}],["return",{"fg":3}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,15         All ",{}]]},"cursor":{"x":14}}],[0.119859,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     32,16         All ",{}]]},"cursor":{"x":15}}],[0.120188,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" m                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,17         All ",{}]]},"cursor":{"x":16}}],[0.09589200000000001,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" mi                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,18         All ",{}]]},"cursor":{"x":17}}],[0.208067,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" min                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,19         All ",{}]]},"cursor":{"x":18}}],[0.176278,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minu                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,20         All ",{}]]},"cursor":{"x":19}}],[0.119984,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minut                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,21         All ",{}]]},"cursor":{"x":20}}],[0.071774,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,22         All ",{}]]},"cursor":{"x":21}}],[0.271975,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,23         All ",{}]]},"cursor":{"x":22}}],[0.13582,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_c                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,24         All ",{}]]},"cursor":{"x":23}}],[0.088419,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_co                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,25         All ",{}]]},"cursor":{"x":24}}],[0.055652,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_cou                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,26         All ",{}]]},"cursor":{"x":25}}],[0.254239,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_coun                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,27         All ",{}]]},"cursor":{"x":26}}],[0.07364900000000001,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_count                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,28         All ",{}]]},"cursor":{"x":27}}],[0.9121939999999999,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,29         All ",{}]]},"cursor":{"x":28}}],[0.199963,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,30         All ",{}]]},"cursor":{"x":29}}],[0.688015,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.T                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,31         All ",{}]]},"cursor":{"x":30}}],[0.168003,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.Tr                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,32         All ",{}]]},"cursor":{"x":31}}],[0.095931,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.Tra                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,33         All ",{}]]},"cursor":{"x":32}}],[0.232082,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.Trai                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,34         All ",{}]]},"cursor":{"x":33}}],[0.248037,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.Trail                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,35         All ",{}]]},"cursor":{"x":34}}],[0.175929,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.Traili                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,36         All ",{}]]},"cursor":{"x":35}}],[0.240053,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.Trailin                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,37         All ",{}]]},"cursor":{"x":36}}],[0.616002,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.Trailing                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,38         All ",{}]]},"cursor":{"x":37}}],[0.264415,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingC                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,39         All ",{}]]},"cursor":{"x":38}}],[0.175485,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCo                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,40         All ",{}]]},"cursor":{"x":39}}],[0.06413099999999999,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCou                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,41         All ",{}]]},"cursor":{"x":40}}],[0.159827,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCoun                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,42         All ",{}]]},"cursor":{"x":41}}],[0.08802599999999999,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,43         All ",{}]]},"cursor":{"x":42}}],[0.416611,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,44         All ",{}]]},"cursor":{"x":43}}],[0.471517,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(n                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,45         All ",{}]]},"cursor":{"x":44}}],[0.0561,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(no                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,46         All ",{}]]},"cursor":{"x":45}}],[0.09617199999999999,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,47         All ",{}]]},"cursor":{"x":46}}],[0.348306,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount",{}],["(",{"bg":6}],["now",{}],[")",{"bg":6}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,48         All ",{}]]},"cursor":{"x":47}}],[0.295124,{"lines":{"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,49         All ",{}]]},"cursor":{"x":48}}],[0.316973,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":47}}],[0.259679,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"32":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 33,5          All ",{}]]},"cursor":{"x":4,"y":32}}],[0.431165,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"32":[["    }                                                                                              ",{}]],"37":[["                                                                                 32,48         All ",{}]]},"cursor":{"x":47,"y":31}}],[0.156168,{"lines":{"37":[["                                                                                 31,28         All ",{}]]},"cursor":{"x":27,"y":30}}],[0.244475,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"32":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 30,23         All ",{}]]},"cursor":{"x":22,"y":29}}],[0.58738,{"lines":{"37":[["4 lines yanked                                                                   30,23         All ",{}]]}}],[0.259915,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"32":[["    }                                                                                              ",{}]],"37":[["4 lines yanked                                                                   31,23         All ",{}]]},"cursor":{"y":30}}],[0.156311,{"lines":{"37":[["4 lines yanked                                                                   32,23         All ",{}]]},"cursor":{"y":31}}],[0.14865,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"32":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["4 lines yanked                                                                   33,5          All ",{}]]},"cursor":{"x":4,"y":32}}],[0.279621,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"34":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"35":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["4 more lines                                                                     34,5          Top ",{}]]},"cursor":{"y":33}}],[0.213863,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"32":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["4 more lines                                                                     33,5          Top ",{}]]},"cursor":{"y":32}}],[0.119557,{"lines":{"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"35":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"36":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     34,5          Top ",{}]]},"cursor":{"y":33}}],[0.09521300000000001,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":0}}],[0.143473,{"lines":{"37":[["                                                                                 35,5          Top ",{}]]},"cursor":{"x":4,"y":34}}],[0.159684,{"lines":{"37":[["                                                                                 35,6          Top ",{}]]},"cursor":{"x":5}}],[0.176135,{"lines":{"37":[["                                                                                 35,7          Top ",{}]]},"cursor":{"x":6}}],[0.167752,{"lines":{"37":[["                                                                                 35,8          Top ",{}]]},"cursor":{"x":7}}],[0.168065,{"lines":{"37":[["                                                                                 35,9          Top ",{}]]},"cursor":{"x":8}}],[0.240231,{"lines":{"34":[["    ",{}],["int",{"fg":2}],[" inuteCount() {                                                                             ",{}]]}}],[0.184067,{"lines":{"34":[["    ",{}],["int",{"fg":2}],[" nuteCount() {                                                                              ",{}]]}}],[0.191936,{"lines":{"34":[["    ",{}],["int",{"fg":2}],[" uteCount() {                                                                               ",{}]]}}],[0.20023,{"lines":{"34":[["    ",{}],["int",{"fg":2}],[" teCount() {                                                                                ",{}]]}}],[0.231828,{"lines":{"34":[["    ",{}],["int",{"fg":2}],[" eCount() {                                                                                 ",{}]]}}],[0.207651,{"lines":{"37":[["                                                                                 35,10         Top ",{}]]},"cursor":{"x":9}}],[0.527993,{"lines":{"37":[["                                                                                 35,9          Top ",{}]]},"cursor":{"x":8}}],[0.200483,{"lines":{"34":[["    ",{}],["int",{"fg":2}],[" Count() {                                                                                  ",{}]]}}],[0.175401,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     35,9          Top ",{}]]}}],[0.216449,{"lines":{"34":[["    ",{}],["int",{"fg":2}],[" HCount() {                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,10         Top ",{}]]},"cursor":{"x":9}}],[0.136063,{"lines":{"34":[["    ",{}],["int",{"fg":2}],[" HoCount() {                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,11         Top ",{}]]},"cursor":{"x":10}}],[0.079952,{"lines":{"34":[["    ",{}],["int",{"fg":2}],[" HouCount() {                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,12         Top ",{}]]},"cursor":{"x":11}}],[0.135938,{"lines":{"34":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,13         Top ",{}]]},"cursor":{"x":12}}],[0.288625,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":11}}],[0.158387,{"lines":{"37":[["                                                                                 36,12         Top ",{}]]},"cursor":{"y":35}}],[0.201756,{"lines":{"37":[["                                                                                 37,12         Top ",{}]]},"cursor":{"y":36}}],[0.16383,{"lines":{"0":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"1":[["public",{"fg":3}],[":                                                                                            ",{}]],"2":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"8":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"9":[["};                                                                                                 ",{}]],"10":[["                                                                                                   ",{}]],"12":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"13":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"14":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"15":[["                                                                                                   ",{}]],"16":[["public",{"fg":3}],[":                                                                                            ",{}]],"17":[["    MinuteHourCounter() :                                                                          ",{}]],"18":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"19":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"23":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"24":[["        minute_counts.Add(count, now);                                                             ",{}]],"25":[["        hour_counts.Add(count, now);                                                               ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"29":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"30":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["int",{"fg":2}],[" HourCount() ",{}],["{",{"bg":6}],["                                                                              ",{}]],"34":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"35":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"36":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 38,5          50% ",{}]]},"cursor":{"x":4}}],[0.174901,{"lines":{"0":[["public",{"fg":3}],[":                                                                                            ",{}]],"1":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"2":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"8":[["};                                                                                                 ",{}]],"9":[["                                                                                                   ",{}]],"11":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"12":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"13":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"14":[["                                                                                                   ",{}]],"15":[["public",{"fg":3}],[":                                                                                            ",{}]],"16":[["    MinuteHourCounter() :                                                                          ",{}]],"17":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"18":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"19":[["    }                                                                                              ",{}]],"20":[["                                                                                                   ",{}]],"21":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"22":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"23":[["        minute_counts.Add(count, now);                                                             ",{}]],"24":[["        hour_counts.Add(count, now);                                                               ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"28":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"29":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"33":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"34":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["                                                                                 39,2          Bot ",{}]]},"cursor":{"x":1}}],[0.193006,{"lines":{"32":[["    ",{}],["int",{"fg":2}],[" HourCount() ",{}],["{",{"bg":6}],["                                                                              ",{}]],"35":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 38,5          Bot ",{}]]},"cursor":{"x":4,"y":35}}],[0.159057,{"lines":{"32":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"35":[["    }                                                                                              ",{}]],"37":[["                                                                                 37,12         Bot ",{}]]},"cursor":{"x":11,"y":34}}],[0.276456,{"lines":{"37":[["                                                                                 37,16         Bot ",{}]]},"cursor":{"x":15}}],[0.447938,{"lines":{"34":[["        ",{}],["return",{"fg":3}],[" inute_counts.TrailingCount(now);                                                    ",{}]]}}],[0.216034,{"lines":{"34":[["        ",{}],["return",{"fg":3}],[" nute_counts.TrailingCount(now);                                                     ",{}]]}}],[0.224025,{"lines":{"34":[["        ",{}],["return",{"fg":3}],[" ute_counts.TrailingCount(now);                                                      ",{}]]}}],[0.216145,{"lines":{"34":[["        ",{}],["return",{"fg":3}],[" te_counts.TrailingCount(now);                                                       ",{}]]}}],[0.231781,{"lines":{"34":[["        ",{}],["return",{"fg":3}],[" e_counts.TrailingCount(now);                                                        ",{}]]}}],[0.1921,{"lines":{"34":[["        ",{}],["return",{"fg":3}],[" _counts.TrailingCount(now);                                                         ",{}]]}}],[0.167578,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     37,16         Bot ",{}]]}}],[0.616325,{"lines":{"34":[["        ",{}],["return",{"fg":3}],[" h_counts.TrailingCount(now);                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,17         Bot ",{}]]},"cursor":{"x":16}}],[0.056034,{"lines":{"34":[["        ",{}],["return",{"fg":3}],[" ho_counts.TrailingCount(now);                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,18         Bot ",{}]]},"cursor":{"x":17}}],[0.128091,{"lines":{"34":[["        ",{}],["return",{"fg":3}],[" hou_counts.TrailingCount(now);                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,19         Bot ",{}]]},"cursor":{"x":18}}],[0.151943,{"lines":{"34":[["        ",{}],["return",{"fg":3}],[" hour_counts.TrailingCount(now);                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,20         Bot ",{}]]},"cursor":{"x":19}}],[0.728429,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":18}}],[1.001296,{"lines":{"37":[["                                                                                 37,19         Bot ",{}]]}}],[0.229893,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.103725,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.120608,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.113753,{"lines":{"37":[["\"ch15_3.cpp\" 39L, 1046C written                                                  37,19         Bot ",{}]]},"cursor":{"x":18,"y":34,"visible":true}}],[0.314732,{"lines":{"32":[["    ",{}],["int",{"fg":2}],[" HourCount() ",{}],["{",{"bg":6}],["                                                                              ",{}]],"35":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 39L, 1046C written                                                  38,5          Bot ",{}]]},"cursor":{"x":4,"y":35}}],[0.175231,{"lines":{"32":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"35":[["    }                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 39L, 1046C written                                                  39,2          Bot ",{}]]},"cursor":{"x":1,"y":36}}],[0.147948,{}],[0.176243,{}],[0.151644,{}],[0.605145,{"lines":{"32":[["    ",{}],["int",{"fg":2}],[" HourCount() ",{}],["{",{"bg":6}],["                                                                              ",{}]],"35":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 39L, 1046C written                                                  38,5          Bot ",{}]]},"cursor":{"x":4,"y":35}}],[0.499091,{"lines":{"32":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"35":[["    }                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 39L, 1046C written                                                  37,19         Bot ",{}]]},"cursor":{"x":18,"y":34}}],[7.128279,{"lines":{"0":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"1":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"2":[["public",{"fg":3}],[":                                                                                            ",{}]],"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"4":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"6":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"9":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"10":[["};                                                                                                 ",{}]],"11":[["                                                                                                   ",{}]],"12":[["                                                                                                   ",{}]],"13":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"14":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"15":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"16":[["                                                                                                   ",{}]],"17":[["public",{"fg":3}],[":                                                                                            ",{}]],"18":[["    MinuteHourCounter() :                                                                          ",{}]],"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"21":[["    }                                                                                              ",{}]],"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"24":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"25":[["        minute_counts.Add(count, now);                                                             ",{}]],"26":[["        hour_counts.Add(count, now);                                                               ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"30":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"35":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"36":[["        ",{}],["return",{"fg":3}],[" hour_counts.TrailingCount(now);                                                     ",{}]],"37":[["                                                                                 1,1           Top ",{}]]},"cursor":{"x":0,"y":0}}],[0.479911,{"lines":{"37":[["                                                                                 2,1           Top ",{}]]},"cursor":{"y":1}}],[0.159832,{"lines":{"37":[["                                                                                 3,1           Top ",{}]]},"cursor":{"y":2}}],[0.169176,{"lines":{"37":[["                                                                                 4,1           Top ",{}]]},"cursor":{"y":3}}],[0.150822,{"lines":{"37":[["                                                                                 5,1           Top ",{}]]},"cursor":{"y":4}}],[0.168015,{"lines":{"37":[["                                                                                 6,0-1         Top ",{}]]},"cursor":{"y":5}}],[0.183999,{"lines":{"37":[["                                                                                 7,1           Top ",{}]]},"cursor":{"y":6}}],[0.9599220000000001,{"lines":{"37":[["                                                                                 7,36          Top ",{}]]},"cursor":{"x":35}}],[3.960114,{"lines":{"37":[["                                                                                 6,0-1         Top ",{}]]},"cursor":{"x":0,"y":5}}],[0.176095,{"lines":{"37":[["                                                                                 5,64          Top ",{}]]},"cursor":{"x":63,"y":4}}],[0.207791,{"lines":{"37":[["                                                                                 4,87          Top ",{}]]},"cursor":{"x":86,"y":3}}],[0.488011,{"lines":{"37":[["                                                                                 5,64          Top ",{}]]},"cursor":{"x":63,"y":4}}],[0.192074,{"lines":{"37":[["                                                                                 6,0-1         Top ",{}]]},"cursor":{"x":0,"y":5}}],[0.264059,{"lines":{"37":[["                                                                                 5,64          Top ",{}]]},"cursor":{"x":63,"y":4}}],[1.11706,{"lines":{"4":[["    TrailingBucketCounter",{}],["(",{"bg":6}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket",{}],[")",{"bg":6}],["                                    ",{}]],"37":[["                                                                                 5,63          Top ",{}]]},"cursor":{"x":62}}],[0.336032,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     5,64          Top ",{}]]},"cursor":{"x":63}}],[0.175122,{"lines":{"4":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket)                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,65          Top ",{}]]},"cursor":{"x":64}}],[2.484515,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":63}}],[1.001304,{"lines":{"37":[["                                                                                 5,64          Top ",{}]]}}],[0.513257,{"lines":{"4":[["    TrailingBucketCounter",{}],["(",{"bg":6}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket",{}],[")",{"bg":6}],["                                    ",{}]],"37":[["1 change; before #22  4 seconds ago                                              5,63          Top ",{}]]},"cursor":{"x":62}}],[1.429432,{}],[0.2197,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     5,64          Top ",{}]]},"cursor":{"x":63}}],[0.41581,{"lines":{"4":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,65          Top ",{}]]},"cursor":{"x":64}}],[0.188606,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":63}}],[0.159432,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.127483,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.07223499999999999,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.091894,{"lines":{"37":[["\"ch15_3.cpp\" 39L, 1046C written                                                  5,64          Top ",{}]]},"cursor":{"x":63,"y":4,"visible":true}}],[0.227783,{}],[0.752112,{"lines":{"37":[[":.,.+1!                                                                                            ",{}]]},"cursor":{"x":7,"y":37}}],[0.159987,{"lines":{"37":[[":.,.+1!k                                                                                           ",{}]]},"cursor":{"x":8}}],[0.13586,{"lines":{"37":[[":.,.+1!kk                                                                                          ",{}]]},"cursor":{"x":9}}],[0.152061,{"lines":{"37":[[":.,.+1!kkk                                                                                         ",{}]]},"cursor":{"x":10}}],[0.288083,{"lines":{"37":[[":.,.+1!kk                                                                                          ",{}]]},"cursor":{"x":9}}],[0.143994,{"lines":{"37":[[":.,.+1!k                                                                                           ",{}]]},"cursor":{"x":8}}],[0.136293,{"lines":{"37":[[":.,.+1!                                                                                            ",{}]]},"cursor":{"x":7}}],[0.135529,{"lines":{"37":[[":.,.+1                                                                                             ",{}]]},"cursor":{"x":6}}],[0.50025,{"lines":{"37":[[":.,.+                                                                                              ",{}]]},"cursor":{"x":5}}],[0.032189,{"lines":{"37":[[":.,.                                                                                               ",{}]]},"cursor":{"x":4}}],[0.029903,{"lines":{"37":[[":.,                                                                                                ",{}]]},"cursor":{"x":3}}],[0.030778,{"lines":{"37":[[":.                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.030859,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1}}],[0.03127,{"lines":{"37":[["                                                                                 4,64          Top ",{}]]},"cursor":{"x":63,"y":3}}],[0.030856,{"lines":{"37":[["                                                                                 4,63          Top ",{}]]},"cursor":{"x":62}}],[0.032231,{"lines":{"37":[["                                                                                 4,62          Top ",{}]]},"cursor":{"x":61}}],[0.029468,{"lines":{"37":[["                                                                                 4,61          Top ",{}]]},"cursor":{"x":60}}],[0.031815,{"lines":{"37":[["                                                                                 4,60          Top ",{}]]},"cursor":{"x":59}}],[0.652511,{}],[0.192174,{"lines":{"37":[["                                                                                 1,1           Top ",{}]]},"cursor":{"x":0,"y":0}}],[0.552361,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"2":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"3":[["public",{"fg":3}],[":                                                                                            ",{}]],"4":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"5":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"10":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"11":[["};                                                                                                 ",{}]],"13":[["                                                                                                   ",{}]],"14":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"15":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"16":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"17":[["                                                                                                   ",{}]],"18":[["public",{"fg":3}],[":                                                                                            ",{}]],"19":[["    MinuteHourCounter() :                                                                          ",{}]],"20":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"21":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"25":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"26":[["        minute_counts.Add(count, now);                                                             ",{}]],"27":[["        hour_counts.Add(count, now);                                                               ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"31":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"32":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"36":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,1           Top ",{}]]}}],[0.735847,{"lines":{"0":[["c                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,2           Top ",{}]]},"cursor":{"x":1}}],[0.168892,{"lines":{"0":[["cl                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,3           Top ",{}]]},"cursor":{"x":2}}],[0.119222,{"lines":{"0":[["cla                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,4           Top ",{}]]},"cursor":{"x":3}}],[0.18394,{"lines":{"0":[["clas                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,5           Top ",{}]]},"cursor":{"x":4}}],[0.151951,{"lines":{"0":[["class",{"fg":2}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,6           Top ",{}]]},"cursor":{"x":5}}],[0.167993,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     1,7           Top ",{}]]},"cursor":{"x":6}}],[0.847973,{"lines":{"0":[["class",{"fg":2}],[" C                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,8           Top ",{}]]},"cursor":{"x":7}}],[0.200393,{"lines":{"0":[["class",{"fg":2}],[" Co                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,9           Top ",{}]]},"cursor":{"x":8}}],[0.087822,{"lines":{"0":[["class",{"fg":2}],[" Con                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,10          Top ",{}]]},"cursor":{"x":9}}],[0.111803,{"lines":{"0":[["class",{"fg":2}],[" Conv                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,11          Top ",{}]]},"cursor":{"x":10}}],[0.184035,{"lines":{"0":[["class",{"fg":2}],[" Conve                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,12          Top ",{}]]},"cursor":{"x":11}}],[0.552042,{"lines":{"0":[["class",{"fg":2}],[" Convey                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,13          Top ",{}]]},"cursor":{"x":12}}],[0.119779,{"lines":{"0":[["class",{"fg":2}],[" Conveyo                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,14          Top ",{}]]},"cursor":{"x":13}}],[0.096314,{"lines":{"0":[["class",{"fg":2}],[" Conveyou                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,15          Top ",{}]]},"cursor":{"x":14}}],[1.399929,{"lines":{"0":[["class",{"fg":2}],[" Conveyo                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,14          Top ",{}]]},"cursor":{"x":13}}],[0.6239209999999999,{"lines":{"0":[["class",{"fg":2}],[" Conveyor                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,15          Top ",{}]]},"cursor":{"x":14}}],[0.400086,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQ                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,16          Top ",{}]]},"cursor":{"x":15}}],[0.175876,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQu                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,17          Top ",{}]]},"cursor":{"x":16}}],[0.68834,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQue                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,18          Top ",{}]]},"cursor":{"x":17}}],[0.103758,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQueu                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,19          Top ",{}]]},"cursor":{"x":18}}],[0.088021,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQueue                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,20          Top ",{}]]},"cursor":{"x":19}}],[0.352204,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     1,21          Top ",{}]]},"cursor":{"x":20}}],[0.213856,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,22          Top ",{}]]},"cursor":{"x":21}}],[0.409967,{"lines":{"1":[["                                                                                                   ",{}]],"2":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"3":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"4":[["public",{"fg":3}],[":                                                                                            ",{}]],"5":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"6":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"11":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"12":[["};                                                                                                 ",{}]],"14":[["                                                                                                   ",{}]],"15":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"16":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"17":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"18":[["                                                                                                   ",{}]],"19":[["public",{"fg":3}],[":                                                                                            ",{}]],"20":[["    MinuteHourCounter() :                                                                          ",{}]],"21":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"22":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"26":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"27":[["        minute_counts.Add(count, now);                                                             ",{}]],"28":[["        hour_counts.Add(count, now);                                                               ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"32":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"33":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,1           Top ",{}]]},"cursor":{"x":0,"y":1}}],[0.296036,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQueue ",{}],["{",{"bg":6}],["                                                                              ",{}]],"1":[["}",{"bg":6}],["                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,2           Top ",{}]]},"cursor":{"x":1}}],[0.192504,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":0}}],[0.478279,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     2,2           Top ",{}]]},"cursor":{"x":98,"y":37,"visible":false}}],[0.001945,{"cursor":{"x":1,"y":1,"visible":true}}],[0.074862,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"1":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     2,3           Top ",{}]]},"cursor":{"x":2}}],[0.796949,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":1}}],[0.383577,{"lines":{"2":[["                                                                                                   ",{}]],"3":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"4":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"5":[["public",{"fg":3}],[":                                                                                            ",{}]],"6":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"7":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"12":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"13":[["};                                                                                                 ",{}]],"15":[["                                                                                                   ",{}]],"16":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"17":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"18":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"19":[["                                                                                                   ",{}]],"20":[["public",{"fg":3}],[":                                                                                            ",{}]],"21":[["    MinuteHourCounter() :                                                                          ",{}]],"22":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"23":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"27":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"28":[["        minute_counts.Add(count, now);                                                             ",{}]],"29":[["        hour_counts.Add(count, now);                                                               ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"33":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"34":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,1           Top ",{}]]},"cursor":{"x":0,"y":2}}],[0.119761,{"lines":{"37":[["                                                                                                   ",{}]]}}],[0.140208,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQueue ",{}],["{",{"bg":6}],["                                                                              ",{}]],"1":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["                                                                                 2,1           Top ",{}]]},"cursor":{"y":1}}],[0.159153,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"1":[["};                                                                                                 ",{}]],"37":[["                                                                                 1,1           Top ",{}]]},"cursor":{"y":0}}],[0.468608,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"2":[["};                                                                                                 ",{}]],"3":[["                                                                                                   ",{}]],"4":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"5":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"6":[["public",{"fg":3}],[":                                                                                            ",{}]],"7":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"8":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"13":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"14":[["};                                                                                                 ",{}]],"16":[["                                                                                                   ",{}]],"17":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"18":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"19":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"20":[["                                                                                                   ",{}]],"21":[["public",{"fg":3}],[":                                                                                            ",{}]],"22":[["    MinuteHourCounter() :                                                                          ",{}]],"23":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"24":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"28":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"29":[["        minute_counts.Add(count, now);                                                             ",{}]],"30":[["        hour_counts.Add(count, now);                                                               ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"34":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"35":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,1           Top ",{}]]}}],[0.480221,{"lines":{"0":[["/                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,2           Top ",{}]]},"cursor":{"x":1}}],[0.135835,{"lines":{"0":[["//",{"fg":4}],["                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,3           Top ",{}]]},"cursor":{"x":2}}],[0.183978,{"lines":{"0":[["// ",{"fg":4}],["                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,4           Top ",{}]]},"cursor":{"x":3}}],[0.751897,{"lines":{"0":[["// A",{"fg":4}],["                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,5           Top ",{}]]},"cursor":{"x":4}}],[0.167993,{"lines":{"0":[["// A ",{"fg":4}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,6           Top ",{}]]},"cursor":{"x":5}}],[0.280097,{"lines":{"0":[["// A q",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,7           Top ",{}]]},"cursor":{"x":6}}],[0.127958,{"lines":{"0":[["// A qu",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,8           Top ",{}]]},"cursor":{"x":7}}],[0.128178,{"lines":{"0":[["// A que",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,9           Top ",{}]]},"cursor":{"x":8}}],[0.151856,{"lines":{"0":[["// A queu",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,10          Top ",{}]]},"cursor":{"x":9}}],[0.088308,{"lines":{"0":[["// A queue",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,11          Top ",{}]]},"cursor":{"x":10}}],[0.11171,{"lines":{"0":[["// A queue ",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,12          Top ",{}]]},"cursor":{"x":11}}],[0.175987,{"lines":{"0":[["// A queue w",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,13          Top ",{}]]},"cursor":{"x":12}}],[0.08812200000000001,{"lines":{"0":[["// A queue wi",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,14          Top ",{}]]},"cursor":{"x":13}}],[0.25593,{"lines":{"0":[["// A queue wit",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,15          Top ",{}]]},"cursor":{"x":14}}],[0.088103,{"lines":{"0":[["// A queue with",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,16          Top ",{}]]},"cursor":{"x":15}}],[0.11183,{"lines":{"0":[["// A queue with ",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,17          Top ",{}]]},"cursor":{"x":16}}],[0.135871,{"lines":{"0":[["// A queue with a",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,18          Top ",{}]]},"cursor":{"x":17}}],[0.224126,{"lines":{"0":[["// A queue with a ",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,19          Top ",{}]]},"cursor":{"x":18}}],[0.376052,{"lines":{"0":[["// A queue with a m",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,20          Top ",{}]]},"cursor":{"x":19}}],[0.183881,{"lines":{"0":[["// A queue with a mi",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,21          Top ",{}]]},"cursor":{"x":20}}],[0.248203,{"lines":{"0":[["// A queue with a mix",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,22          Top ",{}]]},"cursor":{"x":21}}],[0.41676,{"lines":{"0":[["// A queue with a mixi",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,23          Top ",{}]]},"cursor":{"x":22}}],[0.399141,{"lines":{"0":[["// A queue with a mix",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,22          Top ",{}]]},"cursor":{"x":21}}],[0.160188,{"lines":{"0":[["// A queue with a mi",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,21          Top ",{}]]},"cursor":{"x":20}}],[0.143823,{"lines":{"0":[["// A queue with a m",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,20          Top ",{}]]},"cursor":{"x":19}}],[0.160085,{"lines":{"0":[["// A queue with a ma",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,21          Top ",{}]]},"cursor":{"x":20}}],[0.240276,{"lines":{"0":[["// A queue with a max",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,22          Top ",{}]]},"cursor":{"x":21}}],[0.09563199999999999,{"lines":{"0":[["// A queue with a maxi",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,23          Top ",{}]]},"cursor":{"x":22}}],[0.224035,{"lines":{"0":[["// A queue with a maxim",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,24          Top ",{}]]},"cursor":{"x":23}}],[0.231976,{"lines":{"0":[["// A queue with a maximu",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,25          Top ",{}]]},"cursor":{"x":24}}],[0.280047,{"lines":{"0":[["// A queue with a maximum",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,26          Top ",{}]]},"cursor":{"x":25}}],[0.583962,{"lines":{"0":[["// A queue with a maximum ",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,27          Top ",{}]]},"cursor":{"x":26}}],[0.664034,{"lines":{"0":[["// A queue with a maximum n",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,28          Top ",{}]]},"cursor":{"x":27}}],[0.160038,{"lines":{"0":[["// A queue with a maximum nu",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,29          Top ",{}]]},"cursor":{"x":28}}],[0.191839,{"lines":{"0":[["// A queue with a maximum num",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,30          Top ",{}]]},"cursor":{"x":29}}],[0.120033,{"lines":{"0":[["// A queue with a maximum numb",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,31          Top ",{}]]},"cursor":{"x":30}}],[0.135996,{"lines":{"0":[["// A queue with a maximum numbe",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,32          Top ",{}]]},"cursor":{"x":31}}],[0.06404799999999999,{"lines":{"0":[["// A queue with a maximum number",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,33          Top ",{}]]},"cursor":{"x":32}}],[0.07198400000000001,{"lines":{"0":[["// A queue with a maximum number ",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,34          Top ",{}]]},"cursor":{"x":33}}],[0.151254,{"lines":{"0":[["// A queue with a maximum number o",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,35          Top ",{}]]},"cursor":{"x":34}}],[0.0567,{"lines":{"0":[["// A queue with a maximum number of",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,36          Top ",{}]]},"cursor":{"x":35}}],[0.08808299999999999,{"lines":{"0":[["// A queue with a maximum number of ",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,37          Top ",{}]]},"cursor":{"x":36}}],[0.159957,{"lines":{"0":[["// A queue with a maximum number of s",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,38          Top ",{}]]},"cursor":{"x":37}}],[0.119974,{"lines":{"0":[["// A queue with a maximum number of so",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,39          Top ",{}]]},"cursor":{"x":38}}],[0.352078,{"lines":{"0":[["// A queue with a maximum number of s",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,38          Top ",{}]]},"cursor":{"x":37}}],[0.19194,{"lines":{"0":[["// A queue with a maximum number of sl",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,39          Top ",{}]]},"cursor":{"x":38}}],[0.17595,{"lines":{"0":[["// A queue with a maximum number of slo",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,40          Top ",{}]]},"cursor":{"x":39}}],[0.047934,{"lines":{"0":[["// A queue with a maximum number of slot",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,41          Top ",{}]]},"cursor":{"x":40}}],[0.144112,{"lines":{"0":[["// A queue with a maximum number of slots",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,42          Top ",{}]]},"cursor":{"x":41}}],[1.032156,{"lines":{"0":[["// A queue with a maximum number of slots,",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,43          Top ",{}]]},"cursor":{"x":42}}],[0.13582,{"lines":{"0":[["// A queue with a maximum number of slots, ",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,44          Top ",{}]]},"cursor":{"x":43}}],[0.127967,{"lines":{"0":[["// A queue with a maximum number of slots, w",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,45          Top ",{}]]},"cursor":{"x":44}}],[0.072099,{"lines":{"0":[["// A queue with a maximum number of slots, wh",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,46          Top ",{}]]},"cursor":{"x":45}}],[0.063932,{"lines":{"0":[["// A queue with a maximum number of slots, whe",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,47          Top ",{}]]},"cursor":{"x":46}}],[0.06399100000000001,{"lines":{"0":[["// A queue with a maximum number of slots, wher",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,48          Top ",{}]]},"cursor":{"x":47}}],[0.104079,{"lines":{"0":[["// A queue with a maximum number of slots, where",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,49          Top ",{}]]},"cursor":{"x":48}}],[0.088238,{"lines":{"0":[["// A queue with a maximum number of slots, where ",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,50          Top ",{}]]},"cursor":{"x":49}}],[0.167676,{"lines":{"0":[["// A queue with a maximum number of slots, where o",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,51          Top ",{}]]},"cursor":{"x":50}}],[0.176119,{"lines":{"0":[["// A queue with a maximum number of slots, where ol",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,52          Top ",{}]]},"cursor":{"x":51}}],[0.047953,{"lines":{"0":[["// A queue with a maximum number of slots, where old",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,53          Top ",{}]]},"cursor":{"x":52}}],[0.08810999999999999,{"lines":{"0":[["// A queue with a maximum number of slots, where old ",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,54          Top ",{}]]},"cursor":{"x":53}}],[0.11994,{"lines":{"0":[["// A queue with a maximum number of slots, where old d",{"fg":4}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,55          Top ",{}]]},"cursor":{"x":54}}],[0.087945,{"lines":{"0":[["// A queue with a maximum number of slots, where old da",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,56          Top ",{}]]},"cursor":{"x":55}}],[0.056052,{"lines":{"0":[["// A queue with a maximum number of slots, where old dat",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,57          Top ",{}]]},"cursor":{"x":56}}],[0.104213,{"lines":{"0":[["// A queue with a maximum number of slots, where old data",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,58          Top ",{}]]},"cursor":{"x":57}}],[0.127778,{"lines":{"0":[["// A queue with a maximum number of slots, where old data ",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,59          Top ",{}]]},"cursor":{"x":58}}],[0.35215,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,60          Top ",{}]]},"cursor":{"x":59}}],[0.240143,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"f",{"fg":4}],["                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,61          Top ",{}]]},"cursor":{"x":60}}],[0.07975599999999999,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"fa",{"fg":4}],["                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,62          Top ",{}]]},"cursor":{"x":61}}],[0.232044,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"fal",{"fg":4}],["                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,63          Top ",{}]]},"cursor":{"x":62}}],[0.159924,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"fall",{"fg":4}],["                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,64          Top ",{}]]},"cursor":{"x":63}}],[0.128081,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls",{"fg":4}],["                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,65          Top ",{}]]},"cursor":{"x":64}}],[0.103976,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls ",{"fg":4}],["                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,66          Top ",{}]]},"cursor":{"x":65}}],[0.277369,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls o",{"fg":4}],["                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,67          Top ",{}]]},"cursor":{"x":66}}],[0.058633,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls of",{"fg":4}],["                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,68          Top ",{}]]},"cursor":{"x":67}}],[0.143946,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off",{"fg":4}],["                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,69          Top ",{}]]},"cursor":{"x":68}}],[0.249645,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off\"",{"fg":4}],["                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,70          Top ",{}]]},"cursor":{"x":69}}],[0.070412,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off\" ",{"fg":4}],["                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,71          Top ",{}]]},"cursor":{"x":70}}],[0.159978,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off\" t",{"fg":4}],["                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,72          Top ",{}]]},"cursor":{"x":71}}],[0.064027,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off\" th",{"fg":4}],["                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,73          Top ",{}]]},"cursor":{"x":72}}],[0.127927,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off\" the",{"fg":4}],["                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,74          Top ",{}]]},"cursor":{"x":73}}],[0.032146,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off\" the ",{"fg":4}],["                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,75          Top ",{}]]},"cursor":{"x":74}}],[0.175935,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off\" the e",{"fg":4}],["                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,76          Top ",{}]]},"cursor":{"x":75}}],[0.072149,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off\" the en",{"fg":4}],["                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,77          Top ",{}]]},"cursor":{"x":76}}],[0.143899,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off\" the end",{"fg":4}],["                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,78          Top ",{}]]},"cursor":{"x":77}}],[0.704458,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":76}}],[0.423129,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.071654,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.096487,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.106834,{"lines":{"37":[["\"ch15_3.cpp\" 43L, 1150C written                                                  1,77          Top ",{}]]},"cursor":{"x":76,"y":0,"visible":true}}],[0.673654,{"lines":{"1":[["class",{"fg":2}],[" ConveyorQueue ",{}],["{",{"bg":6}],["                                                                              ",{}]],"2":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["\"ch15_3.cpp\" 43L, 1150C written                                                  2,21          Top ",{}]]},"cursor":{"x":20,"y":1}}],[0.159349,{"lines":{"1":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"2":[["};                                                                                                 ",{}]],"37":[["\"ch15_3.cpp\" 43L, 1150C written                                                  3,2           Top ",{}]]},"cursor":{"x":1,"y":2}}],[0.360724,{"lines":{"1":[["class",{"fg":2}],[" ConveyorQueue ",{}],["{",{"bg":6}],["                                                                              ",{}]],"2":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["\"ch15_3.cpp\" 43L, 1150C written                                                  2,21          Top ",{}]]},"cursor":{"x":20,"y":1}}],[0.951345,{"lines":{"1":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"2":[["                                                                                                   ",{}]],"3":[["};                                                                                                 ",{}]],"4":[["                                                                                                   ",{}]],"5":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"6":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"7":[["public",{"fg":3}],[":                                                                                            ",{}]],"8":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"9":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"14":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"15":[["};                                                                                                 ",{}]],"17":[["                                                                                                   ",{}]],"18":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"19":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"20":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"21":[["                                                                                                   ",{}]],"22":[["public",{"fg":3}],[":                                                                                            ",{}]],"23":[["    MinuteHourCounter() :                                                                          ",{}]],"24":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"25":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"29":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"30":[["        minute_counts.Add(count, now);                                                             ",{}]],"31":[["        hour_counts.Add(count, now);                                                               ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"35":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"36":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,1           Top ",{}]]},"cursor":{"x":0,"y":2}}],[0.372193,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     3,5           Top ",{}]]},"cursor":{"x":4}}],[0.559805,{"lines":{"2":[["    C                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,6           Top ",{}]]},"cursor":{"x":5}}],[0.167941,{"lines":{"2":[["    Co                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,7           Top ",{}]]},"cursor":{"x":6}}],[0.08806700000000001,{"lines":{"2":[["    Con                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,8           Top ",{}]]},"cursor":{"x":7}}],[0.200127,{"lines":{"2":[["    Conv                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,9           Top ",{}]]},"cursor":{"x":8}}],[0.799991,{"lines":{"2":[["    Conve                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,10          Top ",{}]]},"cursor":{"x":9}}],[0.280064,{"lines":{"2":[["    Convey                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,11          Top ",{}]]},"cursor":{"x":10}}],[0.200008,{"lines":{"2":[["    Conveyo                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,12          Top ",{}]]},"cursor":{"x":11}}],[0.279952,{"lines":{"2":[["    Conveyor                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,13          Top ",{}]]},"cursor":{"x":12}}],[0.336202,{"lines":{"2":[["    ConveyorQ                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,14          Top ",{}]]},"cursor":{"x":13}}],[0.175658,{"lines":{"2":[["    ConveyorQu                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,15          Top ",{}]]},"cursor":{"x":14}}],[0.223577,{"lines":{"2":[["    ConveyorQue                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,16          Top ",{}]]},"cursor":{"x":15}}],[0.22416,{"lines":{"2":[["    ConveyorQueu                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,17          Top ",{}]]},"cursor":{"x":16}}],[0.224375,{"lines":{"2":[["    ConveyorQueue                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,18          Top ",{}]]},"cursor":{"x":17}}],[1.068884,{"lines":{"2":[["    ConveyorQueue(                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,19          Top ",{}]]},"cursor":{"x":18}}],[0.355219,{"lines":{"2":[["    ConveyorQueue(i                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,20          Top ",{}]]},"cursor":{"x":19}}],[0.07988199999999999,{"lines":{"2":[["    ConveyorQueue(in                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,21          Top ",{}]]},"cursor":{"x":20}}],[0.088046,{"lines":{"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,22          Top ",{}]]},"cursor":{"x":21}}],[0.048048,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     3,23          Top ",{}]]},"cursor":{"x":22}}],[0.10447,{"lines":{"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" m                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,24          Top ",{}]]},"cursor":{"x":23}}],[0.103647,{"lines":{"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" ma                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,25          Top ",{}]]},"cursor":{"x":24}}],[0.143861,{"lines":{"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,26          Top ",{}]]},"cursor":{"x":25}}],[0.272015,{"lines":{"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,27          Top ",{}]]},"cursor":{"x":26}}],[0.256059,{"lines":{"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_i                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,28          Top ",{}]]},"cursor":{"x":27}}],[0.120101,{"lines":{"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_it                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,29          Top ",{}]]},"cursor":{"x":28}}],[0.071771,{"lines":{"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_ite                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,30          Top ",{}]]},"cursor":{"x":29}}],[0.120244,{"lines":{"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_item                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,31          Top ",{}]]},"cursor":{"x":30}}],[0.143776,{"lines":{"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,32          Top ",{}]]},"cursor":{"x":31}}],[0.71697,{"lines":{"2":[["    ConveyorQueue",{}],["(",{"bg":6}],["int",{"fg":2}],[" max_items",{}],[")",{"bg":6}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,33          Top ",{}]]},"cursor":{"x":32}}],[0.9990250000000001,{"lines":{"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items);                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,34          Top ",{}]]},"cursor":{"x":33}}],[0.532763,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":32}}],[0.471027,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.087768,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.088354,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.107332,{"lines":{"37":[["\"ch15_3.cpp\" 44L, 1184C written                                                                    ",{}]]},"cursor":{"x":31}}],[0.000166,{"lines":{"37":[["\"ch15_3.cpp\" 44L, 1184C written                                                  3,33          Top ",{}]]},"cursor":{"x":32,"y":2,"visible":true}}],[0.8295709999999999,{"lines":{"3":[["                                                                                                   ",{}]],"4":[["};                                                                                                 ",{}]],"5":[["                                                                                                   ",{}]],"6":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"7":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"8":[["public",{"fg":3}],[":                                                                                            ",{}]],"9":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"10":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"15":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"16":[["};                                                                                                 ",{}]],"18":[["                                                                                                   ",{}]],"19":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"20":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"21":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"22":[["                                                                                                   ",{}]],"23":[["public",{"fg":3}],[":                                                                                            ",{}]],"24":[["    MinuteHourCounter() :                                                                          ",{}]],"25":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"26":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"30":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"31":[["        minute_counts.Add(count, now);                                                             ",{}]],"32":[["        hour_counts.Add(count, now);                                                               ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"36":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,5           Top ",{}]]},"cursor":{"x":4,"y":3}}],[0.398969,{"lines":{"4":[["                                                                                                   ",{}]],"5":[["};                                                                                                 ",{}]],"6":[["                                                                                                   ",{}]],"7":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"8":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"9":[["public",{"fg":3}],[":                                                                                            ",{}]],"10":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"11":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"16":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"17":[["};                                                                                                 ",{}]],"19":[["                                                                                                   ",{}]],"20":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"21":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"22":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"23":[["                                                                                                   ",{}]],"24":[["public",{"fg":3}],[":                                                                                            ",{}]],"25":[["    MinuteHourCounter() :                                                                          ",{}]],"26":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"27":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"31":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"32":[["        minute_counts.Add(count, now);                                                             ",{}]],"33":[["        hour_counts.Add(count, now);                                                               ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,5           Top ",{}]]},"cursor":{"y":4}}],[0.52789,{"lines":{"4":[["    v                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,6           Top ",{}]]},"cursor":{"x":5}}],[0.07201,{"lines":{"4":[["    vo                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,7           Top ",{}]]},"cursor":{"x":6}}],[0.08834,{"lines":{"4":[["    voi                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,8           Top ",{}]]},"cursor":{"x":7}}],[0.032334,{"lines":{"4":[["    ",{}],["void",{"fg":2}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,9           Top ",{}]]},"cursor":{"x":8}}],[0.079527,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     5,10          Top ",{}]]},"cursor":{"x":9}}],[0.191806,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" A                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,11          Top ",{}]]},"cursor":{"x":10}}],[0.128672,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" Ad                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,12          Top ",{}]]},"cursor":{"x":11}}],[0.151387,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" Add                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,13          Top ",{}]]},"cursor":{"x":12}}],[0.44818,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddT                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,14          Top ",{}]]},"cursor":{"x":13}}],[0.129979,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddTo                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,15          Top ",{}]]},"cursor":{"x":14}}],[0.181788,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToB                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,16          Top ",{}]]},"cursor":{"x":15}}],[0.096136,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBA                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,17          Top ",{}]]},"cursor":{"x":16}}],[0.143731,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBAc                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,18          Top ",{}]]},"cursor":{"x":17}}],[0.104253,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBAck                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,19          Top ",{}]]},"cursor":{"x":18}}],[0.455953,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBAc                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,18          Top ",{}]]},"cursor":{"x":17}}],[0.144267,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBA                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,17          Top ",{}]]},"cursor":{"x":16}}],[0.127478,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBAa                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,18          Top ",{}]]},"cursor":{"x":17}}],[0.800224,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBA                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,17          Top ",{}]]},"cursor":{"x":16}}],[0.136137,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToB                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,16          Top ",{}]]},"cursor":{"x":15}}],[0.456057,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddTo                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,15          Top ",{}]]},"cursor":{"x":14}}],[0.168969,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToa                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,16          Top ",{}]]},"cursor":{"x":15}}],[0.294896,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddTo                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,15          Top ",{}]]},"cursor":{"x":14}}],[0.263668,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToB                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,16          Top ",{}]]},"cursor":{"x":15}}],[0.136221,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBa                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,17          Top ",{}]]},"cursor":{"x":16}}],[0.120107,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBac                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,18          Top ",{}]]},"cursor":{"x":17}}],[0.111951,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBack                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,19          Top ",{}]]},"cursor":{"x":18}}],[0.676426,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,20          Top ",{}]]},"cursor":{"x":19}}],[1.811978,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(i                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,21          Top ",{}]]},"cursor":{"x":20}}],[0.079732,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(in                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,22          Top ",{}]]},"cursor":{"x":21}}],[0.032209,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,23          Top ",{}]]},"cursor":{"x":22}}],[0.07985299999999999,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     5,24          Top ",{}]]},"cursor":{"x":23}}],[0.167408,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" c                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,25          Top ",{}]]},"cursor":{"x":24}}],[0.072232,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" co                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,26          Top ",{}]]},"cursor":{"x":25}}],[0.056179,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" cou                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,27          Top ",{}]]},"cursor":{"x":26}}],[0.184107,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" coun                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,28          Top ",{}]]},"cursor":{"x":27}}],[0.088018,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,29          Top ",{}]]},"cursor":{"x":28}}],[0.308773,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBack",{}],["(",{"bg":6}],["int",{"fg":2}],[" count",{}],[")",{"bg":6}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,30          Top ",{}]]},"cursor":{"x":29}}],[0.391131,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,31          Top ",{}]]},"cursor":{"x":30}}],[0.356154,{"lines":{"5":[["                                                                                                   ",{}]],"6":[["};                                                                                                 ",{}]],"7":[["                                                                                                   ",{}]],"8":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"9":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"10":[["public",{"fg":3}],[":                                                                                            ",{}]],"11":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"12":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"17":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"18":[["};                                                                                                 ",{}]],"20":[["                                                                                                   ",{}]],"21":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"22":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"23":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"24":[["                                                                                                   ",{}]],"25":[["public",{"fg":3}],[":                                                                                            ",{}]],"26":[["    MinuteHourCounter() :                                                                          ",{}]],"27":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"28":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"32":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"33":[["        minute_counts.Add(count, now);                                                             ",{}]],"34":[["        hour_counts.Add(count, now);                                                               ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,5           Top ",{}]]},"cursor":{"x":4,"y":5}}],[0.151936,{"lines":{"6":[["                                                                                                   ",{}]],"7":[["};                                                                                                 ",{}]],"8":[["                                                                                                   ",{}]],"9":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"10":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"11":[["public",{"fg":3}],[":                                                                                            ",{}]],"12":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"13":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"18":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"19":[["};                                                                                                 ",{}]],"21":[["                                                                                                   ",{}]],"22":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"23":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"24":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"25":[["                                                                                                   ",{}]],"26":[["public",{"fg":3}],[":                                                                                            ",{}]],"27":[["    MinuteHourCounter() :                                                                          ",{}]],"28":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"29":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"33":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"34":[["        minute_counts.Add(count, now);                                                             ",{}]],"35":[["        hour_counts.Add(count, now);                                                               ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,5           Top ",{}]]},"cursor":{"y":6}}],[0.312229,{"lines":{"6":[["    v                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,6           Top ",{}]]},"cursor":{"x":5}}],[0.079719,{"lines":{"6":[["    vo                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,7           Top ",{}]]},"cursor":{"x":6}}],[0.07992299999999999,{"lines":{"6":[["    voi                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,8           Top ",{}]]},"cursor":{"x":7}}],[0.055894,{"lines":{"6":[["    ",{}],["void",{"fg":2}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,9           Top ",{}]]},"cursor":{"x":8}}],[0.07209599999999999,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     7,10          Top ",{}]]},"cursor":{"x":9}}],[0.231189,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" S                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,11          Top ",{}]]},"cursor":{"x":10}}],[0.088827,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Sh                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,12          Top ",{}]]},"cursor":{"x":11}}],[0.047997,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shi                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,13          Top ",{}]]},"cursor":{"x":12}}],[0.088273,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shif                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,14          Top ",{}]]},"cursor":{"x":13}}],[0.151779,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,15          Top ",{}]]},"cursor":{"x":14}}],[0.380112,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,16          Top ",{}]]},"cursor":{"x":15}}],[0.284022,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(i                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,17          Top ",{}]]},"cursor":{"x":16}}],[0.07212499999999999,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(in                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,18          Top ",{}]]},"cursor":{"x":17}}],[0.079873,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,19          Top ",{}]]},"cursor":{"x":18}}],[0.047978,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     7,20          Top ",{}]]},"cursor":{"x":19}}],[0.176011,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" n                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,21          Top ",{}]]},"cursor":{"x":20}}],[0.160278,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" nu                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,22          Top ",{}]]},"cursor":{"x":21}}],[0.175707,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,23          Top ",{}]]},"cursor":{"x":22}}],[0.191966,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,24          Top ",{}]]},"cursor":{"x":23}}],[0.045016,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift",{}],["(",{"bg":6}],["int",{"fg":2}],[" num_",{}],[")",{"bg":6}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,25          Top ",{}]]},"cursor":{"x":24}}],[0.446784,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,24          Top ",{}]]},"cursor":{"x":23}}],[0.580245,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_s                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,25          Top ",{}]]},"cursor":{"x":24}}],[0.136038,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_sh                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,26          Top ",{}]]},"cursor":{"x":25}}],[0.039948,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shi                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,27          Top ",{}]]},"cursor":{"x":26}}],[0.088281,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shif                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,28          Top ",{}]]},"cursor":{"x":27}}],[0.175759,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shift                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,29          Top ",{}]]},"cursor":{"x":28}}],[0.119915,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifte                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,30          Top ",{}]]},"cursor":{"x":29}}],[0.208099,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,31          Top ",{}]]},"cursor":{"x":30}}],[0.940777,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift",{}],["(",{"bg":6}],["int",{"fg":2}],[" num_shifted",{}],[")",{"bg":6}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,32          Top ",{}]]},"cursor":{"x":31}}],[0.735134,{"lines":{"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     7,33          Top ",{}]]},"cursor":{"x":32}}],[0.7561600000000001,{"lines":{"7":[["                                                                                                   ",{}]],"8":[["};                                                                                                 ",{}]],"9":[["                                                                                                   ",{}]],"10":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"11":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"12":[["public",{"fg":3}],[":                                                                                            ",{}]],"13":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"14":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"19":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"20":[["};                                                                                                 ",{}]],"22":[["                                                                                                   ",{}]],"23":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"24":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"25":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"26":[["                                                                                                   ",{}]],"27":[["public",{"fg":3}],[":                                                                                            ",{}]],"28":[["    MinuteHourCounter() :                                                                          ",{}]],"29":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"30":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"34":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"35":[["        minute_counts.Add(count, now);                                                             ",{}]],"36":[["        hour_counts.Add(count, now);                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,5           Top ",{}]]},"cursor":{"x":4,"y":7}}],[0.431721,{"lines":{"7":[["    i                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,6           Top ",{}]]},"cursor":{"x":5}}],[0.07122199999999999,{"lines":{"7":[["    in                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,7           Top ",{}]]},"cursor":{"x":6}}],[0.056794,{"lines":{"7":[["    ",{}],["int",{"fg":2}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,8           Top ",{}]]},"cursor":{"x":7}}],[0.048051,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     8,9           Top ",{}]]},"cursor":{"x":8}}],[0.232009,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" T                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,10          Top ",{}]]},"cursor":{"x":9}}],[0.183931,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" To                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,11          Top ",{}]]},"cursor":{"x":10}}],[0.216369,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" Tot                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,12          Top ",{}]]},"cursor":{"x":11}}],[0.183672,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" Tota                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,13          Top ",{}]]},"cursor":{"x":12}}],[0.128044,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" Total                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,14          Top ",{}]]},"cursor":{"x":13}}],[0.191904,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TotalS                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,15          Top ",{}]]},"cursor":{"x":14}}],[0.136001,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TotalSu                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,16          Top ",{}]]},"cursor":{"x":15}}],[0.167992,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TotalSum                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,17          Top ",{}]]},"cursor":{"x":16}}],[0.23628,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TotalSum(                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,18          Top ",{}]]},"cursor":{"x":17}}],[0.056624,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TotalSum",{}],["()",{"bg":6}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,19          Top ",{}]]},"cursor":{"x":18}}],[0.288107,{"lines":{"7":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,20          Top ",{}]]},"cursor":{"x":19}}],[0.171601,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":18}}],[0.175479,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.127818,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.088514,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.09646200000000001,{"lines":{"37":[["\"ch15_3.cpp\" 49L, 1270C written                                                  8,19          Top ",{}]]},"cursor":{"x":18,"y":7,"visible":true}}],[0.119037,{"lines":{"37":[["\"ch15_3.cpp\" 49L, 1270C written                                                  7,19          Top ",{}]]},"cursor":{"y":6}}],[0.160011,{"lines":{"37":[["\"ch15_3.cpp\" 49L, 1270C written                                                  6,0-1         Top ",{}]]},"cursor":{"x":0,"y":5}}],[0.156128,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBack",{}],["(",{"bg":6}],["int",{"fg":2}],[" count",{}],[")",{"bg":6}],[";                                                                     ",{}]],"37":[["\"ch15_3.cpp\" 49L, 1270C written                                                  5,19          Top ",{}]]},"cursor":{"x":18,"y":4}}],[0.135711,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"37":[["\"ch15_3.cpp\" 49L, 1270C written                                                  4,0-1         Top ",{}]]},"cursor":{"x":0,"y":3}}],[1.892574,{"lines":{"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"8":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"9":[["};                                                                                                 ",{}]],"10":[["                                                                                                   ",{}]],"11":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"12":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"13":[["public",{"fg":3}],[":                                                                                            ",{}]],"14":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"15":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"18":[["                                                                                                   ",{}]],"19":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"20":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"21":[["};                                                                                                 ",{}]],"23":[["                                                                                                   ",{}]],"24":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"25":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"26":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"27":[["                                                                                                   ",{}]],"28":[["public",{"fg":3}],[":                                                                                            ",{}]],"29":[["    MinuteHourCounter() :                                                                          ",{}]],"30":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"31":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"35":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"36":[["        minute_counts.Add(count, now);                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,1           Top ",{}]]},"cursor":{"y":4}}],[0.248026,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     5,5           Top ",{}]]},"cursor":{"x":4}}],[0.207864,{"lines":{"4":[["    /                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,6           Top ",{}]]},"cursor":{"x":5}}],[0.159883,{"lines":{"4":[["    ",{}],["//",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,7           Top ",{}]]},"cursor":{"x":6}}],[0.088028,{"lines":{"4":[["    ",{}],["// ",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,8           Top ",{}]]},"cursor":{"x":7}}],[0.447984,{"lines":{"4":[["    ",{}],["// I",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,9           Top ",{}]]},"cursor":{"x":8}}],[0.183994,{"lines":{"4":[["    ",{}],["// In",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,10          Top ",{}]]},"cursor":{"x":9}}],[0.159996,{"lines":{"4":[["    ",{}],["// Inc",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,11          Top ",{}]]},"cursor":{"x":10}}],[0.192103,{"lines":{"4":[["    ",{}],["// Incr",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,12          Top ",{}]]},"cursor":{"x":11}}],[0.039778,{"lines":{"4":[["    ",{}],["// Incre",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,13          Top ",{}]]},"cursor":{"x":12}}],[0.25698,{"lines":{"4":[["    ",{}],["// Increm",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,14          Top ",{}]]},"cursor":{"x":13}}],[0.08715199999999999,{"lines":{"4":[["    ",{}],["// Increme",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,15          Top ",{}]]},"cursor":{"x":14}}],[0.09599299999999999,{"lines":{"4":[["    ",{}],["// Incremen",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,16          Top ",{}]]},"cursor":{"x":15}}],[0.127894,{"lines":{"4":[["    ",{}],["// Increment",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,17          Top ",{}]]},"cursor":{"x":16}}],[0.12879,{"lines":{"4":[["    ",{}],["// Increment ",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,18          Top ",{}]]},"cursor":{"x":17}}],[0.423521,{"lines":{"4":[["    ",{}],["// Increment t",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,19          Top ",{}]]},"cursor":{"x":18}}],[0.175821,{"lines":{"4":[["    ",{}],["// Increment th",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,20          Top ",{}]]},"cursor":{"x":19}}],[0.168078,{"lines":{"4":[["    ",{}],["// Increment the",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,21          Top ",{}]]},"cursor":{"x":20}}],[0.12005,{"lines":{"4":[["    ",{}],["// Increment the ",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,22          Top ",{}]]},"cursor":{"x":21}}],[0.096148,{"lines":{"4":[["    ",{}],["// Increment the v",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,23          Top ",{}]]},"cursor":{"x":22}}],[0.09582,{"lines":{"4":[["    ",{}],["// Increment the va",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,24          Top ",{}]]},"cursor":{"x":23}}],[0.063997,{"lines":{"4":[["    ",{}],["// Increment the val",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,25          Top ",{}]]},"cursor":{"x":24}}],[0.081152,{"lines":{"4":[["    ",{}],["// Increment the valu",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,26          Top ",{}]]},"cursor":{"x":25}}],[0.102905,{"lines":{"4":[["    ",{}],["// Increment the value",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,27          Top ",{}]]},"cursor":{"x":26}}],[0.079876,{"lines":{"4":[["    ",{}],["// Increment the value ",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,28          Top ",{}]]},"cursor":{"x":27}}],[0.256156,{"lines":{"4":[["    ",{}],["// Increment the value a",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,29          Top ",{}]]},"cursor":{"x":28}}],[0.127928,{"lines":{"4":[["    ",{}],["// Increment the value at",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,30          Top ",{}]]},"cursor":{"x":29}}],[0.06406000000000001,{"lines":{"4":[["    ",{}],["// Increment the value at ",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,31          Top ",{}]]},"cursor":{"x":30}}],[0.183966,{"lines":{"4":[["    ",{}],["// Increment the value at t",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,32          Top ",{}]]},"cursor":{"x":31}}],[0.119994,{"lines":{"4":[["    ",{}],["// Increment the value at th",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,33          Top ",{}]]},"cursor":{"x":32}}],[0.087946,{"lines":{"4":[["    ",{}],["// Increment the value at the",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,34          Top ",{}]]},"cursor":{"x":33}}],[0.120102,{"lines":{"4":[["    ",{}],["// Increment the value at the ",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,35          Top ",{}]]},"cursor":{"x":34}}],[0.087922,{"lines":{"4":[["    ",{}],["// Increment the value at the b",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,36          Top ",{}]]},"cursor":{"x":35}}],[0.055955,{"lines":{"4":[["    ",{}],["// Increment the value at the ba",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,37          Top ",{}]]},"cursor":{"x":36}}],[0.376076,{"lines":{"4":[["    ",{}],["// Increment the value at the bac",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,38          Top ",{}]]},"cursor":{"x":37}}],[0.096168,{"lines":{"4":[["    ",{}],["// Increment the value at the back",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,39          Top ",{}]]},"cursor":{"x":38}}],[0.162356,{"lines":{"4":[["    ",{}],["// Increment the value at the back ",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,40          Top ",{}]]},"cursor":{"x":39}}],[0.10945,{"lines":{"4":[["    ",{}],["// Increment the value at the back o",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,41          Top ",{}]]},"cursor":{"x":40}}],[0.08803900000000001,{"lines":{"4":[["    ",{}],["// Increment the value at the back of",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,42          Top ",{}]]},"cursor":{"x":41}}],[0.128035,{"lines":{"4":[["    ",{}],["// Increment the value at the back of ",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,43          Top ",{}]]},"cursor":{"x":42}}],[0.223933,{"lines":{"4":[["    ",{}],["// Increment the value at the back of t",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,44          Top ",{}]]},"cursor":{"x":43}}],[0.112367,{"lines":{"4":[["    ",{}],["// Increment the value at the back of th",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,45          Top ",{}]]},"cursor":{"x":44}}],[0.095557,{"lines":{"4":[["    ",{}],["// Increment the value at the back of the",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,46          Top ",{}]]},"cursor":{"x":45}}],[0.056087,{"lines":{"4":[["    ",{}],["// Increment the value at the back of the ",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,47          Top ",{}]]},"cursor":{"x":46}}],[0.160143,{"lines":{"4":[["    ",{}],["// Increment the value at the back of the q",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,48          Top ",{}]]},"cursor":{"x":47}}],[0.08806,{"lines":{"4":[["    ",{}],["// Increment the value at the back of the qu",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,49          Top ",{}]]},"cursor":{"x":48}}],[0.071587,{"lines":{"4":[["    ",{}],["// Increment the value at the back of the que",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,50          Top ",{}]]},"cursor":{"x":49}}],[0.152099,{"lines":{"4":[["    ",{}],["// Increment the value at the back of the queu",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,51          Top ",{}]]},"cursor":{"x":50}}],[0.040668,{"lines":{"4":[["    ",{}],["// Increment the value at the back of the queue",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,52          Top ",{}]]},"cursor":{"x":51}}],[0.208001,{"lines":{"4":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,53          Top ",{}]]},"cursor":{"x":52}}],[0.207923,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":51}}],[0.359356,{"lines":{"37":[["                                                                                 6,30          Top ",{}]]},"cursor":{"x":29,"y":5}}],[0.639776,{"lines":{"37":[["                                                                                 7,0-1         Top ",{}]]},"cursor":{"x":0,"y":6}}],[0.440253,{"lines":{"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"9":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"10":[["};                                                                                                 ",{}]],"11":[["                                                                                                   ",{}]],"12":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"13":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"14":[["public",{"fg":3}],[":                                                                                            ",{}]],"15":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"16":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"19":[["                                                                                                   ",{}]],"20":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"21":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"22":[["};                                                                                                 ",{}]],"24":[["                                                                                                   ",{}]],"25":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"26":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"27":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"28":[["                                                                                                   ",{}]],"29":[["public",{"fg":3}],[":                                                                                            ",{}]],"30":[["    MinuteHourCounter() :                                                                          ",{}]],"31":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"32":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"36":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,1           Top ",{}]]},"cursor":{"y":7}}],[0.296026,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     8,5           Top ",{}]]},"cursor":{"x":4}}],[0.456284,{"lines":{"7":[["    /                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,6           Top ",{}]]},"cursor":{"x":5}}],[0.151777,{"lines":{"7":[["    ",{}],["//",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,7           Top ",{}]]},"cursor":{"x":6}}],[0.088143,{"lines":{"7":[["    ",{}],["// ",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,8           Top ",{}]]},"cursor":{"x":7}}],[0.255812,{"lines":{"7":[["    ",{}],["// E",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,9           Top ",{}]]},"cursor":{"x":8}}],[0.167982,{"lines":{"7":[["    ",{}],["// Ea",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,10          Top ",{}]]},"cursor":{"x":9}}],[0.176111,{"lines":{"7":[["    ",{}],["// Eac",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,11          Top ",{}]]},"cursor":{"x":10}}],[0.127951,{"lines":{"7":[["    ",{}],["// Each",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,12          Top ",{}]]},"cursor":{"x":11}}],[0.079919,{"lines":{"7":[["    ",{}],["// Each ",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,13          Top ",{}]]},"cursor":{"x":12}}],[0.152015,{"lines":{"7":[["    ",{}],["// Each v",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,14          Top ",{}]]},"cursor":{"x":13}}],[0.09600499999999999,{"lines":{"7":[["    ",{}],["// Each va",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,15          Top ",{}]]},"cursor":{"x":14}}],[0.095988,{"lines":{"7":[["    ",{}],["// Each val",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,16          Top ",{}]]},"cursor":{"x":15}}],[0.071975,{"lines":{"7":[["    ",{}],["// Each valu",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,17          Top ",{}]]},"cursor":{"x":16}}],[0.087978,{"lines":{"7":[["    ",{}],["// Each value",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,18          Top ",{}]]},"cursor":{"x":17}}],[0.088226,{"lines":{"7":[["    ",{}],["// Each value ",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,19          Top ",{}]]},"cursor":{"x":18}}],[0.143879,{"lines":{"7":[["    ",{}],["// Each value i",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,20          Top ",{}]]},"cursor":{"x":19}}],[0.06400400000000001,{"lines":{"7":[["    ",{}],["// Each value in",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,21          Top ",{}]]},"cursor":{"x":20}}],[0.136057,{"lines":{"7":[["    ",{}],["// Each value in ",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,22          Top ",{}]]},"cursor":{"x":21}}],[0.959958,{"lines":{"7":[["    ",{}],["// Each value in t",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,23          Top ",{}]]},"cursor":{"x":22}}],[0.103963,{"lines":{"7":[["    ",{}],["// Each value in th",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,24          Top ",{}]]},"cursor":{"x":23}}],[0.111732,{"lines":{"7":[["    ",{}],["// Each value in the",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,25          Top ",{}]]},"cursor":{"x":24}}],[0.09628100000000001,{"lines":{"7":[["    ",{}],["// Each value in the ",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,26          Top ",{}]]},"cursor":{"x":25}}],[0.463957,{"lines":{"7":[["    ",{}],["// Each value in the q",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,27          Top ",{}]]},"cursor":{"x":26}}],[0.120073,{"lines":{"7":[["    ",{}],["// Each value in the qu",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,28          Top ",{}]]},"cursor":{"x":27}}],[0.063934,{"lines":{"7":[["    ",{}],["// Each value in the que",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,29          Top ",{}]]},"cursor":{"x":28}}],[0.135986,{"lines":{"7":[["    ",{}],["// Each value in the queu",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,30          Top ",{}]]},"cursor":{"x":29}}],[0.023962,{"lines":{"7":[["    ",{}],["// Each value in the queue",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,31          Top ",{}]]},"cursor":{"x":30}}],[0.128169,{"lines":{"7":[["    ",{}],["// Each value in the queue ",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,32          Top ",{}]]},"cursor":{"x":31}}],[0.159881,{"lines":{"7":[["    ",{}],["// Each value in the queue i",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,33          Top ",{}]]},"cursor":{"x":32}}],[0.06400599999999999,{"lines":{"7":[["    ",{}],["// Each value in the queue is",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,34          Top ",{}]]},"cursor":{"x":33}}],[0.135996,{"lines":{"7":[["    ",{}],["// Each value in the queue is ",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,35          Top ",{}]]},"cursor":{"x":34}}],[0.152126,{"lines":{"7":[["    ",{}],["// Each value in the queue is s",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,36          Top ",{}]]},"cursor":{"x":35}}],[0.128071,{"lines":{"7":[["    ",{}],["// Each value in the queue is sh",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,37          Top ",{}]]},"cursor":{"x":36}}],[0.031942,{"lines":{"7":[["    ",{}],["// Each value in the queue is shi",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,38          Top ",{}]]},"cursor":{"x":37}}],[0.511933,{"lines":{"7":[["    ",{}],["// Each value in the queue is shif",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,39          Top ",{}]]},"cursor":{"x":38}}],[0.288043,{"lines":{"7":[["    ",{}],["// Each value in the queue is shift",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,40          Top ",{}]]},"cursor":{"x":39}}],[0.264227,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifte",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,41          Top ",{}]]},"cursor":{"x":40}}],[0.183807,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,42          Top ",{}]]},"cursor":{"x":41}}],[0.103986,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted ",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,43          Top ",{}]]},"cursor":{"x":42}}],[0.399896,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted f",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,44          Top ",{}]]},"cursor":{"x":43}}],[0.104222,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted fo",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,45          Top ",{}]]},"cursor":{"x":44}}],[0.11186,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted for",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,46          Top ",{}]]},"cursor":{"x":45}}],[0.240032,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forw",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,47          Top ",{}]]},"cursor":{"x":46}}],[0.152072,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forwa",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,48          Top ",{}]]},"cursor":{"x":47}}],[0.584692,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forwar",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,49          Top ",{}]]},"cursor":{"x":48}}],[0.19115,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,50          Top ",{}]]},"cursor":{"x":49}}],[0.152004,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward ",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,51          Top ",{}]]},"cursor":{"x":50}}],[0.200274,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward b",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,52          Top ",{}]]},"cursor":{"x":51}}],[0.063777,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,53          Top ",{}]]},"cursor":{"x":52}}],[0.103948,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by ",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,54          Top ",{}]]},"cursor":{"x":53}}],[0.464129,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by '",{"fg":4}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,55          Top ",{}]]},"cursor":{"x":54}}],[0.591957,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by 'n",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,56          Top ",{}]]},"cursor":{"x":55}}],[0.167949,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by 'nu",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,57          Top ",{}]]},"cursor":{"x":56}}],[0.167997,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,58          Top ",{}]]},"cursor":{"x":57}}],[0.392066,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num_",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,59          Top ",{}]]},"cursor":{"x":58}}],[0.23204,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num_s",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,60          Top ",{}]]},"cursor":{"x":59}}],[0.127984,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num_sh",{"fg":4}],["                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,61          Top ",{}]]},"cursor":{"x":60}}],[0.039954,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shi",{"fg":4}],["                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,62          Top ",{}]]},"cursor":{"x":61}}],[0.104152,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shif",{"fg":4}],["                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,63          Top ",{}]]},"cursor":{"x":62}}],[0.17589,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shift",{"fg":4}],["                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,64          Top ",{}]]},"cursor":{"x":63}}],[0.096278,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifte",{"fg":4}],["                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,65          Top ",{}]]},"cursor":{"x":64}}],[0.183661,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted",{"fg":4}],["                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,66          Top ",{}]]},"cursor":{"x":65}}],[0.128059,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'",{"fg":4}],["                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,67          Top ",{}]]},"cursor":{"x":66}}],[0.584012,{"lines":{"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,68          Top ",{}]]},"cursor":{"x":67}}],[0.392023,{"lines":{"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"10":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"11":[["};                                                                                                 ",{}]],"12":[["                                                                                                   ",{}]],"13":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"14":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"15":[["public",{"fg":3}],[":                                                                                            ",{}]],"16":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"17":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"18":[["                                                                                                   ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"20":[["                                                                                                   ",{}]],"21":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"22":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"23":[["};                                                                                                 ",{}]],"25":[["                                                                                                   ",{}]],"26":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"27":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"28":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"29":[["                                                                                                   ",{}]],"30":[["public",{"fg":3}],[":                                                                                            ",{}]],"31":[["    MinuteHourCounter() :                                                                          ",{}]],"32":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"33":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,5           Top ",{}]]},"cursor":{"x":4,"y":8}}],[0.343925,{"lines":{"8":[["    /                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,6           Top ",{}]]},"cursor":{"x":5}}],[0.144658,{"lines":{"8":[["    ",{}],["//",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,7           Top ",{}]]},"cursor":{"x":6}}],[0.09525400000000001,{"lines":{"8":[["    ",{}],["// ",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,8           Top ",{}]]},"cursor":{"x":7}}],[0.407989,{"lines":{"8":[["    ",{}],["// N",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,9           Top ",{}]]},"cursor":{"x":8}}],[0.151912,{"lines":{"8":[["    ",{}],["// Ne",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,10          Top ",{}]]},"cursor":{"x":9}}],[0.08827599999999999,{"lines":{"8":[["    ",{}],["// New",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,11          Top ",{}]]},"cursor":{"x":10}}],[0.103833,{"lines":{"8":[["    ",{}],["// New ",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,12          Top ",{}]]},"cursor":{"x":11}}],[0.319987,{"lines":{"8":[["    ",{}],["// New i",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,13          Top ",{}]]},"cursor":{"x":12}}],[0.063995,{"lines":{"8":[["    ",{}],["// New it",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,14          Top ",{}]]},"cursor":{"x":13}}],[0.087905,{"lines":{"8":[["    ",{}],["// New ite",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,15          Top ",{}]]},"cursor":{"x":14}}],[0.160089,{"lines":{"8":[["    ",{}],["// New item",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,16          Top ",{}]]},"cursor":{"x":15}}],[0.136048,{"lines":{"8":[["    ",{}],["// New items",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,17          Top ",{}]]},"cursor":{"x":16}}],[0.088036,{"lines":{"8":[["    ",{}],["// New items ",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,18          Top ",{}]]},"cursor":{"x":17}}],[0.143871,{"lines":{"8":[["    ",{}],["// New items a",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,19          Top ",{}]]},"cursor":{"x":18}}],[0.06402099999999999,{"lines":{"8":[["    ",{}],["// New items ar",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,20          Top ",{}]]},"cursor":{"x":19}}],[0.08001800000000001,{"lines":{"8":[["    ",{}],["// New items are",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,21          Top ",{}]]},"cursor":{"x":20}}],[0.096386,{"lines":{"8":[["    ",{}],["// New items are ",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,22          Top ",{}]]},"cursor":{"x":21}}],[0.199692,{"lines":{"8":[["    ",{}],["// New items are i",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,23          Top ",{}]]},"cursor":{"x":22}}],[0.184048,{"lines":{"8":[["    ",{}],["// New items are in",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,24          Top ",{}]]},"cursor":{"x":23}}],[0.151975,{"lines":{"8":[["    ",{}],["// New items are ini",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,25          Top ",{}]]},"cursor":{"x":24}}],[0.127872,{"lines":{"8":[["    ",{}],["// New items are init",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,26          Top ",{}]]},"cursor":{"x":25}}],[0.112022,{"lines":{"8":[["    ",{}],["// New items are initi",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,27          Top ",{}]]},"cursor":{"x":26}}],[0.136035,{"lines":{"8":[["    ",{}],["// New items are initia",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,28          Top ",{}]]},"cursor":{"x":27}}],[0.128057,{"lines":{"8":[["    ",{}],["// New items are initial",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,29          Top ",{}]]},"cursor":{"x":28}}],[0.079987,{"lines":{"8":[["    ",{}],["// New items are initiali",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,30          Top ",{}]]},"cursor":{"x":29}}],[0.063962,{"lines":{"8":[["    ",{}],["// New items are initializ",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,31          Top ",{}]]},"cursor":{"x":30}}],[0.127904,{"lines":{"8":[["    ",{}],["// New items are initialize",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,32          Top ",{}]]},"cursor":{"x":31}}],[0.17599,{"lines":{"8":[["    ",{}],["// New items are initialized",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,33          Top ",{}]]},"cursor":{"x":32}}],[0.096095,{"lines":{"8":[["    ",{}],["// New items are initialized ",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,34          Top ",{}]]},"cursor":{"x":33}}],[0.152449,{"lines":{"8":[["    ",{}],["// New items are initialized t",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,35          Top ",{}]]},"cursor":{"x":34}}],[0.111616,{"lines":{"8":[["    ",{}],["// New items are initialized to",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,36          Top ",{}]]},"cursor":{"x":35}}],[0.080069,{"lines":{"8":[["    ",{}],["// New items are initialized to ",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,37          Top ",{}]]},"cursor":{"x":36}}],[0.343935,{"lines":{"8":[["    ",{}],["// New items are initialized to 0",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,38          Top ",{}]]},"cursor":{"x":37}}],[0.224055,{"lines":{"8":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,39          Top ",{}]]},"cursor":{"x":38}}],[0.216151,{"lines":{"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"11":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"12":[["};                                                                                                 ",{}]],"13":[["                                                                                                   ",{}]],"14":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"15":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"16":[["public",{"fg":3}],[":                                                                                            ",{}]],"17":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"18":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"19":[["                                                                                                   ",{}]],"20":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"23":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"24":[["};                                                                                                 ",{}]],"26":[["                                                                                                   ",{}]],"27":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"28":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"29":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"30":[["                                                                                                   ",{}]],"31":[["public",{"fg":3}],[":                                                                                            ",{}]],"32":[["    MinuteHourCounter() :                                                                          ",{}]],"33":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"34":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,5          Top ",{}]]},"cursor":{"x":4,"y":9}}],[0.359715,{"lines":{"9":[["    /                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,6          Top ",{}]]},"cursor":{"x":5}}],[0.160066,{"lines":{"9":[["    ",{}],["//",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,7          Top ",{}]]},"cursor":{"x":6}}],[0.047844,{"lines":{"9":[["    ",{}],["// ",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,8          Top ",{}]]},"cursor":{"x":7}}],[0.224062,{"lines":{"9":[["    ",{}],["// O",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,9          Top ",{}]]},"cursor":{"x":8}}],[0.008017,{"lines":{"9":[["    ",{}],["// OI",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,10         Top ",{}]]},"cursor":{"x":9}}],[1.152038,{"lines":{"9":[["    ",{}],["// O",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,9          Top ",{}]]},"cursor":{"x":8}}],[0.20791,{"lines":{"9":[["    ",{}],["// Ol",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,10         Top ",{}]]},"cursor":{"x":9}}],[0.367488,{"lines":{"9":[["    ",{}],["// Old",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,11         Top ",{}]]},"cursor":{"x":10}}],[0.208581,{"lines":{"9":[["    ",{}],["// Olde",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,12         Top ",{}]]},"cursor":{"x":11}}],[0.256022,{"lines":{"9":[["    ",{}],["// Oldes",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,13         Top ",{}]]},"cursor":{"x":12}}],[0.25599,{"lines":{"9":[["    ",{}],["// Oldest",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,14         Top ",{}]]},"cursor":{"x":13}}],[0.264027,{"lines":{"9":[["    ",{}],["// Oldest ",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,15         Top ",{}]]},"cursor":{"x":14}}],[0.191973,{"lines":{"9":[["    ",{}],["// Oldest i",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,16         Top ",{}]]},"cursor":{"x":15}}],[0.088037,{"lines":{"9":[["    ",{}],["// Oldest it",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,17         Top ",{}]]},"cursor":{"x":16}}],[0.06364,{"lines":{"9":[["    ",{}],["// Oldest ite",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,18         Top ",{}]]},"cursor":{"x":17}}],[0.096238,{"lines":{"9":[["    ",{}],["// Oldest item",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,19         Top ",{}]]},"cursor":{"x":18}}],[0.152536,{"lines":{"9":[["    ",{}],["// Oldest items",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,20         Top ",{}]]},"cursor":{"x":19}}],[0.111615,{"lines":{"9":[["    ",{}],["// Oldest items ",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,21         Top ",{}]]},"cursor":{"x":20}}],[0.13589,{"lines":{"9":[["    ",{}],["// Oldest items w",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,22         Top ",{}]]},"cursor":{"x":21}}],[0.09607499999999999,{"lines":{"9":[["    ",{}],["// Oldest items wi",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,23         Top ",{}]]},"cursor":{"x":22}}],[0.168216,{"lines":{"9":[["    ",{}],["// Oldest items wil",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,24         Top ",{}]]},"cursor":{"x":23}}],[0.151759,{"lines":{"9":[["    ",{}],["// Oldest items will",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,25         Top ",{}]]},"cursor":{"x":24}}],[0.104059,{"lines":{"9":[["    ",{}],["// Oldest items will ",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,26         Top ",{}]]},"cursor":{"x":25}}],[0.111942,{"lines":{"9":[["    ",{}],["// Oldest items will b",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,27         Top ",{}]]},"cursor":{"x":26}}],[0.103939,{"lines":{"9":[["    ",{}],["// Oldest items will be",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,28         Top ",{}]]},"cursor":{"x":27}}],[0.08809599999999999,{"lines":{"9":[["    ",{}],["// Oldest items will be ",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,29         Top ",{}]]},"cursor":{"x":28}}],[0.329013,{"lines":{"9":[["    ",{}],["// Oldest items will be r",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,30         Top ",{}]]},"cursor":{"x":29}}],[0.055128,{"lines":{"9":[["    ",{}],["// Oldest items will be re",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,31         Top ",{}]]},"cursor":{"x":30}}],[0.159757,{"lines":{"9":[["    ",{}],["// Oldest items will be rem",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,32         Top ",{}]]},"cursor":{"x":31}}],[0.063967,{"lines":{"9":[["    ",{}],["// Oldest items will be remo",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,33         Top ",{}]]},"cursor":{"x":32}}],[0.087987,{"lines":{"9":[["    ",{}],["// Oldest items will be remov",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,34         Top ",{}]]},"cursor":{"x":33}}],[0.119996,{"lines":{"9":[["    ",{}],["// Oldest items will be remove",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,35         Top ",{}]]},"cursor":{"x":34}}],[0.160187,{"lines":{"9":[["    ",{}],["// Oldest items will be removed",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,36         Top ",{}]]},"cursor":{"x":35}}],[0.104136,{"lines":{"9":[["    ",{}],["// Oldest items will be removed ",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,37         Top ",{}]]},"cursor":{"x":36}}],[0.159961,{"lines":{"9":[["    ",{}],["// Oldest items will be removed s",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,38         Top ",{}]]},"cursor":{"x":37}}],[0.127852,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,39         Top ",{}]]},"cursor":{"x":38}}],[0.135983,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so ",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,40         Top ",{}]]},"cursor":{"x":39}}],[0.136076,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so t",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,41         Top ",{}]]},"cursor":{"x":40}}],[0.09590899999999999,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so th",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,42         Top ",{}]]},"cursor":{"x":41}}],[0.040114,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so the",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,43         Top ",{}]]},"cursor":{"x":42}}],[0.088072,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so ther",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,44         Top ",{}]]},"cursor":{"x":43}}],[0.095904,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,45         Top ",{}]]},"cursor":{"x":44}}],[0.06395099999999999,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there ",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,46         Top ",{}]]},"cursor":{"x":45}}],[0.223967,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there a",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,47         Top ",{}]]},"cursor":{"x":46}}],[0.103966,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there ar",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,48         Top ",{}]]},"cursor":{"x":47}}],[0.08000599999999999,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,49         Top ",{}]]},"cursor":{"x":48}}],[0.079765,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are ",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,50         Top ",{}]]},"cursor":{"x":49}}],[0.09622699999999999,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are  ",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,51         Top ",{}]]},"cursor":{"x":50}}],[1.24814,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are  >",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,52         Top ",{}]]},"cursor":{"x":51}}],[0.600044,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are  ",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,51         Top ",{}]]},"cursor":{"x":50}}],[0.143839,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are ",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,50         Top ",{}]]},"cursor":{"x":49}}],[0.583959,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are >",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,51         Top ",{}]]},"cursor":{"x":50}}],[0.624258,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are ",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,50         Top ",{}]]},"cursor":{"x":49}}],[0.440022,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are <",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,51         Top ",{}]]},"cursor":{"x":50}}],[0.608449,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are <=",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,52         Top ",{}]]},"cursor":{"x":51}}],[0.343448,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are <= ",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,53         Top ",{}]]},"cursor":{"x":52}}],[0.191941,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are <= m",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,54         Top ",{}]]},"cursor":{"x":53}}],[0.088073,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are <= ma",{"fg":4}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,55         Top ",{}]]},"cursor":{"x":54}}],[0.151879,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are <= max",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,56         Top ",{}]]},"cursor":{"x":55}}],[0.33605,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are <= max_",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,57         Top ",{}]]},"cursor":{"x":56}}],[0.288053,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are <= max_i",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,58         Top ",{}]]},"cursor":{"x":57}}],[0.151948,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are <= max_it",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,59         Top ",{}]]},"cursor":{"x":58}}],[0.392047,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are <= max_ite",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,60         Top ",{}]]},"cursor":{"x":59}}],[0.311982,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are <= max_item",{"fg":4}],["                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,61         Top ",{}]]},"cursor":{"x":60}}],[0.192056,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are <= max_items",{"fg":4}],["                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,62         Top ",{}]]},"cursor":{"x":61}}],[0.984278,{"lines":{"9":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,63         Top ",{}]]},"cursor":{"x":62}}],[0.168216,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":61}}],[0.599298,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.0795,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.088337,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.112725,{"lines":{"37":[["\"ch15_3.cpp\" 53L, 1493C written                                                  10,62         Top ",{}]]},"cursor":{"x":61,"y":9,"visible":true}}],[0.327237,{"lines":{"37":[["\"ch15_3.cpp\" 53L, 1493C written                                                  11,32         Top ",{}]]},"cursor":{"x":31,"y":10}}],[1.224296,{"lines":{"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"13":[["};                                                                                                 ",{}]],"14":[["                                                                                                   ",{}]],"15":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"16":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"17":[["public",{"fg":3}],[":                                                                                            ",{}]],"18":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"19":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"20":[["                                                                                                   ",{}]],"21":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"24":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"25":[["};                                                                                                 ",{}]],"27":[["                                                                                                   ",{}]],"28":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"29":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"30":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"31":[["                                                                                                   ",{}]],"32":[["public",{"fg":3}],[":                                                                                            ",{}]],"33":[["    MinuteHourCounter() :                                                                          ",{}]],"34":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"35":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,5          Top ",{}]]},"cursor":{"x":4,"y":11}}],[0.399652,{"lines":{"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"14":[["};                                                                                                 ",{}]],"15":[["                                                                                                   ",{}]],"16":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"17":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"18":[["public",{"fg":3}],[":                                                                                            ",{}]],"19":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"20":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"25":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"26":[["};                                                                                                 ",{}]],"28":[["                                                                                                   ",{}]],"29":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"30":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"31":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"32":[["                                                                                                   ",{}]],"33":[["public",{"fg":3}],[":                                                                                            ",{}]],"34":[["    MinuteHourCounter() :                                                                          ",{}]],"35":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"36":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,5          Top ",{}]]},"cursor":{"y":12}}],[0.432264,{"lines":{"12":[["    /                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,6          Top ",{}]]},"cursor":{"x":5}}],[0.240161,{"lines":{"12":[["    ",{}],["// ",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,8          Top ",{}]]},"cursor":{"x":7}}],[0.847847,{"lines":{"12":[["    ",{}],["// R",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,9          Top ",{}]]},"cursor":{"x":8}}],[0.224004,{"lines":{"12":[["    ",{}],["// Re",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,10         Top ",{}]]},"cursor":{"x":9}}],[0.216011,{"lines":{"12":[["    ",{}],["// Ret",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,11         Top ",{}]]},"cursor":{"x":10}}],[0.071856,{"lines":{"12":[["    ",{}],["// Retu",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,12         Top ",{}]]},"cursor":{"x":11}}],[0.103966,{"lines":{"12":[["    ",{}],["// Retur",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,13         Top ",{}]]},"cursor":{"x":12}}],[0.06407400000000001,{"lines":{"12":[["    ",{}],["// Return",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,14         Top ",{}]]},"cursor":{"x":13}}],[0.095877,{"lines":{"12":[["    ",{}],["// Return ",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,15         Top ",{}]]},"cursor":{"x":14}}],[0.112123,{"lines":{"12":[["    ",{}],["// Return t",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,16         Top ",{}]]},"cursor":{"x":15}}],[0.080146,{"lines":{"12":[["    ",{}],["// Return th",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,17         Top ",{}]]},"cursor":{"x":16}}],[0.06397700000000001,{"lines":{"12":[["    ",{}],["// Return the",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,18         Top ",{}]]},"cursor":{"x":17}}],[0.079899,{"lines":{"12":[["    ",{}],["// Return the ",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,19         Top ",{}]]},"cursor":{"x":18}}],[0.152208,{"lines":{"12":[["    ",{}],["// Return the t",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,20         Top ",{}]]},"cursor":{"x":19}}],[0.087868,{"lines":{"12":[["    ",{}],["// Return the to",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,21         Top ",{}]]},"cursor":{"x":20}}],[0.095997,{"lines":{"12":[["    ",{}],["// Return the tot",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,22         Top ",{}]]},"cursor":{"x":21}}],[0.152029,{"lines":{"12":[["    ",{}],["// Return the totl",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,23         Top ",{}]]},"cursor":{"x":22}}],[0.424298,{"lines":{"12":[["    ",{}],["// Return the tot",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,22         Top ",{}]]},"cursor":{"x":21}}],[0.07971399999999999,{"lines":{"12":[["    ",{}],["// Return the tota",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,23         Top ",{}]]},"cursor":{"x":22}}],[0.135987,{"lines":{"12":[["    ",{}],["// Return the total",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,24         Top ",{}]]},"cursor":{"x":23}}],[0.143997,{"lines":{"12":[["    ",{}],["// Return the total ",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,25         Top ",{}]]},"cursor":{"x":24}}],[0.151937,{"lines":{"12":[["    ",{}],["// Return the total v",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,26         Top ",{}]]},"cursor":{"x":25}}],[0.06400599999999999,{"lines":{"12":[["    ",{}],["// Return the total va",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,27         Top ",{}]]},"cursor":{"x":26}}],[0.128223,{"lines":{"12":[["    ",{}],["// Return the total val",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,28         Top ",{}]]},"cursor":{"x":27}}],[0.09581199999999999,{"lines":{"12":[["    ",{}],["// Return the total valu",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,29         Top ",{}]]},"cursor":{"x":28}}],[0.09599000000000001,{"lines":{"12":[["    ",{}],["// Return the total value",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,30         Top ",{}]]},"cursor":{"x":29}}],[0.087982,{"lines":{"12":[["    ",{}],["// Return the total value ",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,31         Top ",{}]]},"cursor":{"x":30}}],[0.6079909999999999,{"lines":{"12":[["    ",{}],["// Return the total value o",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,32         Top ",{}]]},"cursor":{"x":31}}],[0.06403300000000001,{"lines":{"12":[["    ",{}],["// Return the total value of",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,33         Top ",{}]]},"cursor":{"x":32}}],[0.09614300000000001,{"lines":{"12":[["    ",{}],["// Return the total value of ",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,34         Top ",{}]]},"cursor":{"x":33}}],[0.135916,{"lines":{"12":[["    ",{}],["// Return the total value of a",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,35         Top ",{}]]},"cursor":{"x":34}}],[0.088023,{"lines":{"12":[["    ",{}],["// Return the total value of al",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,36         Top ",{}]]},"cursor":{"x":35}}],[0.14397,{"lines":{"12":[["    ",{}],["// Return the total value of all",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,37         Top ",{}]]},"cursor":{"x":36}}],[0.095939,{"lines":{"12":[["    ",{}],["// Return the total value of all ",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,38         Top ",{}]]},"cursor":{"x":37}}],[0.200109,{"lines":{"12":[["    ",{}],["// Return the total value of all i",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,39         Top ",{}]]},"cursor":{"x":38}}],[0.200074,{"lines":{"12":[["    ",{}],["// Return the total value of all it",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,40         Top ",{}]]},"cursor":{"x":39}}],[0.143873,{"lines":{"12":[["    ",{}],["// Return the total value of all ite",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,41         Top ",{}]]},"cursor":{"x":40}}],[0.169615,{"lines":{"12":[["    ",{}],["// Return the total value of all item",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,42         Top ",{}]]},"cursor":{"x":41}}],[0.142438,{"lines":{"12":[["    ",{}],["// Return the total value of all items",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,43         Top ",{}]]},"cursor":{"x":42}}],[0.176045,{"lines":{"12":[["    ",{}],["// Return the total value of all items ",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,44         Top ",{}]]},"cursor":{"x":43}}],[0.360199,{"lines":{"12":[["    ",{}],["// Return the total value of all items c",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,45         Top ",{}]]},"cursor":{"x":44}}],[0.135841,{"lines":{"12":[["    ",{}],["// Return the total value of all items cu",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,46         Top ",{}]]},"cursor":{"x":45}}],[0.07983800000000001,{"lines":{"12":[["    ",{}],["// Return the total value of all items cur",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,47         Top ",{}]]},"cursor":{"x":46}}],[0.144199,{"lines":{"12":[["    ",{}],["// Return the total value of all items curr",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,48         Top ",{}]]},"cursor":{"x":47}}],[0.119776,{"lines":{"12":[["    ",{}],["// Return the total value of all items curre",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,49         Top ",{}]]},"cursor":{"x":48}}],[0.112026,{"lines":{"12":[["    ",{}],["// Return the total value of all items curren",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,50         Top ",{}]]},"cursor":{"x":49}}],[0.135928,{"lines":{"12":[["    ",{}],["// Return the total value of all items current",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,51         Top ",{}]]},"cursor":{"x":50}}],[0.072188,{"lines":{"12":[["    ",{}],["// Return the total value of all items currentl",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,52         Top ",{}]]},"cursor":{"x":51}}],[0.111848,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,53         Top ",{}]]},"cursor":{"x":52}}],[0.120281,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently ",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,54         Top ",{}]]},"cursor":{"x":53}}],[0.175969,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently i",{"fg":4}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,55         Top ",{}]]},"cursor":{"x":54}}],[0.079817,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently in",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,56         Top ",{}]]},"cursor":{"x":55}}],[0.152063,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently in ",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,57         Top ",{}]]},"cursor":{"x":56}}],[0.199986,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently in t",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,58         Top ",{}]]},"cursor":{"x":57}}],[0.079916,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently in th",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,59         Top ",{}]]},"cursor":{"x":58}}],[0.144172,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently in the",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,60         Top ",{}]]},"cursor":{"x":59}}],[0.119943,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently in the ",{"fg":4}],["                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,61         Top ",{}]]},"cursor":{"x":60}}],[0.376058,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently in the q",{"fg":4}],["                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,62         Top ",{}]]},"cursor":{"x":61}}],[0.11994,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently in the qu",{"fg":4}],["                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,63         Top ",{}]]},"cursor":{"x":62}}],[0.063955,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently in the que",{"fg":4}],["                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,64         Top ",{}]]},"cursor":{"x":63}}],[0.128064,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently in the queu",{"fg":4}],["                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,65         Top ",{}]]},"cursor":{"x":64}}],[0.055877,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently in the queue",{"fg":4}],["                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,66         Top ",{}]]},"cursor":{"x":65}}],[0.800003,{"lines":{"12":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,67         Top ",{}]]},"cursor":{"x":66}}],[0.08849899999999999,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":65}}],[0.447228,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.071645,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.112403,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.5615250000000001,{"lines":{"37":[["\"ch15_3.cpp\" 55L, 1561C written                                                  13,66         Top ",{}]]},"cursor":{"x":65,"y":12,"visible":true}}],[0.966341,{"lines":{"37":[["\"ch15_3.cpp\" 55L, 1561C written                                                  14,19         Top ",{}]]},"cursor":{"x":18,"y":13}}],[0.144323,{"lines":{"37":[["\"ch15_3.cpp\" 55L, 1561C written                                                  15,2          Top ",{}]]},"cursor":{"x":1,"y":14}}],[0.159716,{"lines":{"37":[["\"ch15_3.cpp\" 55L, 1561C written                                                  16,0-1        Top ",{}]]},"cursor":{"x":0,"y":15}}],[0.160037,{"lines":{"37":[["\"ch15_3.cpp\" 55L, 1561C written                                                  17,59         Top ",{}]]},"cursor":{"x":58,"y":16}}],[0.165141,{"lines":{"17":[["class",{"fg":2}],[" TrailingBucketCounter ",{}],["{",{"bg":6}],["                                                                      ",{}]],"26":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["\"ch15_3.cpp\" 55L, 1561C written                                                  18,29         Top ",{}]]},"cursor":{"x":28,"y":17}}],[1.478734,{"lines":{"17":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"18":[["                                                                                                   ",{}]],"19":[["public",{"fg":3}],[":                                                                                            ",{}]],"20":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"21":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"26":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"27":[["};                                                                                                 ",{}]],"29":[["                                                                                                   ",{}]],"30":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"31":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"32":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"33":[["                                                                                                   ",{}]],"34":[["public",{"fg":3}],[":                                                                                            ",{}]],"35":[["    MinuteHourCounter() :                                                                          ",{}]],"36":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,1          Top ",{}]]},"cursor":{"x":0,"y":18}}],[0.228284,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     19,5          Top ",{}]]},"cursor":{"x":4}}],[0.359974,{"lines":{"18":[["    C                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,6          Top ",{}]]},"cursor":{"x":5}}],[0.192087,{"lines":{"18":[["    Co                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,7          Top ",{}]]},"cursor":{"x":6}}],[0.095891,{"lines":{"18":[["    Con                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,8          Top ",{}]]},"cursor":{"x":7}}],[0.176117,{"lines":{"18":[["    Conv                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,9          Top ",{}]]},"cursor":{"x":8}}],[0.167937,{"lines":{"18":[["    Conve                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,10         Top ",{}]]},"cursor":{"x":9}}],[0.327966,{"lines":{"18":[["    Convey                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,11         Top ",{}]]},"cursor":{"x":10}}],[0.159987,{"lines":{"18":[["    Conveyo                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,12         Top ",{}]]},"cursor":{"x":11}}],[0.08807,{"lines":{"18":[["    Conveyou                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,13         Top ",{}]]},"cursor":{"x":12}}],[0.527987,{"lines":{"18":[["    Conveyo                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,12         Top ",{}]]},"cursor":{"x":11}}],[0.104002,{"lines":{"18":[["    Conveyor                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,13         Top ",{}]]},"cursor":{"x":12}}],[0.384185,{"lines":{"18":[["    ConveyorQ                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,14         Top ",{}]]},"cursor":{"x":13}}],[0.119766,{"lines":{"18":[["    ConveyorQu                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,15         Top ",{}]]},"cursor":{"x":14}}],[0.095945,{"lines":{"18":[["    ConveyorQue                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,16         Top ",{}]]},"cursor":{"x":15}}],[0.103985,{"lines":{"18":[["    ConveyorQueu                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,17         Top ",{}]]},"cursor":{"x":16}}],[0.096096,{"lines":{"18":[["    ConveyorQueue                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,18         Top ",{}]]},"cursor":{"x":17}}],[0.391928,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     19,19         Top ",{}]]},"cursor":{"x":18}}],[0.432237,{"lines":{"18":[["    ConveyorQueue b                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,20         Top ",{}]]},"cursor":{"x":19}}],[0.111932,{"lines":{"18":[["    ConveyorQueue bu                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,21         Top ",{}]]},"cursor":{"x":20}}],[0.1519,{"lines":{"18":[["    ConveyorQueue buc                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,22         Top ",{}]]},"cursor":{"x":21}}],[0.15201,{"lines":{"18":[["    ConveyorQueue buck                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,23         Top ",{}]]},"cursor":{"x":22}}],[0.215933,{"lines":{"18":[["    ConveyorQueue bucke                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,24         Top ",{}]]},"cursor":{"x":23}}],[0.152047,{"lines":{"18":[["    ConveyorQueue bucket                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,25         Top ",{}]]},"cursor":{"x":24}}],[0.175955,{"lines":{"18":[["    ConveyorQueue buckets                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,26         Top ",{}]]},"cursor":{"x":25}}],[0.480118,{"lines":{"18":[["    ConveyorQueue buckets;                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,27         Top ",{}]]},"cursor":{"x":26}}],[0.280101,{"lines":{"19":[["                                                                                                   ",{}]],"20":[["public",{"fg":3}],[":                                                                                            ",{}]],"21":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"22":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"27":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"28":[["};                                                                                                 ",{}]],"30":[["                                                                                                   ",{}]],"31":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"32":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"33":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"34":[["                                                                                                   ",{}]],"35":[["public",{"fg":3}],[":                                                                                            ",{}]],"36":[["    MinuteHourCounter() :                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,5          Top ",{}]]},"cursor":{"x":4,"y":19}}],[0.296065,{"lines":{"19":[["    c                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,6          Top ",{}]]},"cursor":{"x":5}}],[0.09568699999999999,{"lines":{"19":[["    co                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,7          Top ",{}]]},"cursor":{"x":6}}],[0.064163,{"lines":{"19":[["    con                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,8          Top ",{}]]},"cursor":{"x":7}}],[0.055898,{"lines":{"19":[["    cons                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,9          Top ",{}]]},"cursor":{"x":8}}],[0.096028,{"lines":{"19":[["    ",{}],["const",{"fg":2}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,10         Top ",{}]]},"cursor":{"x":9}}],[0.072036,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     20,11         Top ",{}]]},"cursor":{"x":10}}],[0.199997,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" i                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,12         Top ",{}]]},"cursor":{"x":11}}],[0.056078,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" in                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,13         Top ",{}]]},"cursor":{"x":12}}],[0.079829,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,14         Top ",{}]]},"cursor":{"x":13}}],[0.063206,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     20,15         Top ",{}]]},"cursor":{"x":14}}],[0.256869,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" s                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,16         Top ",{}]]},"cursor":{"x":15}}],[0.079998,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" se                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,17         Top ",{}]]},"cursor":{"x":16}}],[0.216228,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" sec                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,18         Top ",{}]]},"cursor":{"x":17}}],[0.184013,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,19         Top ",{}]]},"cursor":{"x":18}}],[0.255721,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,20         Top ",{}]]},"cursor":{"x":19}}],[0.223989,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_p                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,21         Top ",{}]]},"cursor":{"x":20}}],[0.071919,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_pe                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,22         Top ",{}]]},"cursor":{"x":21}}],[0.06402099999999999,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,23         Top ",{}]]},"cursor":{"x":22}}],[0.376041,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,24         Top ",{}]]},"cursor":{"x":23}}],[0.120083,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_b                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,25         Top ",{}]]},"cursor":{"x":24}}],[0.080012,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bu                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,26         Top ",{}]]},"cursor":{"x":25}}],[0.119911,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_buc                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,27         Top ",{}]]},"cursor":{"x":26}}],[0.096025,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_buck                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,28         Top ",{}]]},"cursor":{"x":27}}],[0.104251,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucke                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,29         Top ",{}]]},"cursor":{"x":28}}],[0.055758,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,30         Top ",{}]]},"cursor":{"x":29}}],[0.576113,{"lines":{"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     20,31         Top ",{}]]},"cursor":{"x":30}}],[0.59202,{"lines":{"20":[["                                                                                                   ",{}]],"21":[["public",{"fg":3}],[":                                                                                            ",{}]],"22":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"23":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"28":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"29":[["};                                                                                                 ",{}]],"31":[["                                                                                                   ",{}]],"32":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"33":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"34":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"35":[["                                                                                                   ",{}]],"36":[["public",{"fg":3}],[":                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,5          Top ",{}]]},"cursor":{"x":4,"y":20}}],[0.359893,{"lines":{"20":[["    t                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,6          Top ",{}]]},"cursor":{"x":5}}],[0.087996,{"lines":{"20":[["    ti                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,7          Top ",{}]]},"cursor":{"x":6}}],[0.144123,{"lines":{"20":[["    tim                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,8          Top ",{}]]},"cursor":{"x":7}}],[0.07184400000000001,{"lines":{"20":[["    time                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,9          Top ",{}]]},"cursor":{"x":8}}],[0.280015,{"lines":{"20":[["    time_                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,10         Top ",{}]]},"cursor":{"x":9}}],[0.128048,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,11         Top ",{}]]},"cursor":{"x":10}}],[0.095968,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     21,12         Top ",{}]]},"cursor":{"x":11}}],[0.223984,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" l                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,13         Top ",{}]]},"cursor":{"x":12}}],[0.072188,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" la                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,14         Top ",{}]]},"cursor":{"x":13}}],[0.095736,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" las                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,15         Top ",{}]]},"cursor":{"x":14}}],[0.087946,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,16         Top ",{}]]},"cursor":{"x":15}}],[0.216184,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,17         Top ",{}]]},"cursor":{"x":16}}],[0.263989,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_u                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,18         Top ",{}]]},"cursor":{"x":17}}],[0.087931,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_up                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,19         Top ",{}]]},"cursor":{"x":18}}],[0.08010200000000001,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_upd                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,20         Top ",{}]]},"cursor":{"x":19}}],[0.063066,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_upda                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,21         Top ",{}]]},"cursor":{"x":20}}],[0.08114399999999999,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_updat                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,22         Top ",{}]]},"cursor":{"x":21}}],[0.055635,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,23         Top ",{}]]},"cursor":{"x":22}}],[0.304292,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,24         Top ",{}]]},"cursor":{"x":23}}],[0.50378,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_t                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,25         Top ",{}]]},"cursor":{"x":24}}],[0.07204199999999999,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_ti                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,26         Top ",{}]]},"cursor":{"x":25}}],[0.183997,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_tim                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,27         Top ",{}]]},"cursor":{"x":26}}],[0.127932,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,28         Top ",{}]]},"cursor":{"x":27}}],[0.432119,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time;                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,29         Top ",{}]]},"cursor":{"x":28}}],[0.128319,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     21,30         Top ",{}]]},"cursor":{"x":29}}],[0.503536,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; /                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,31         Top ",{}]]},"cursor":{"x":30}}],[0.152169,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["//",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,32         Top ",{}]]},"cursor":{"x":31}}],[0.296054,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// ",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,33         Top ",{}]]},"cursor":{"x":32}}],[0.199826,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// t",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,34         Top ",{}]]},"cursor":{"x":33}}],[0.08019800000000001,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// th",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,35         Top ",{}]]},"cursor":{"x":34}}],[0.10378,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,36         Top ",{}]]},"cursor":{"x":35}}],[0.064092,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the ",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,37         Top ",{}]]},"cursor":{"x":36}}],[0.159997,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the l",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,38         Top ",{}]]},"cursor":{"x":37}}],[0.072185,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the la",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,39         Top ",{}]]},"cursor":{"x":38}}],[0.095983,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the las",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,40         Top ",{}]]},"cursor":{"x":39}}],[0.199992,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,41         Top ",{}]]},"cursor":{"x":40}}],[0.103986,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last ",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,42         Top ",{}]]},"cursor":{"x":41}}],[0.208099,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last t",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,43         Top ",{}]]},"cursor":{"x":42}}],[0.071782,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last ti",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,44         Top ",{}]]},"cursor":{"x":43}}],[0.152087,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last tim",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,45         Top ",{}]]},"cursor":{"x":44}}],[0.119976,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,46         Top ",{}]]},"cursor":{"x":45}}],[0.056022,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time ",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,47         Top ",{}]]},"cursor":{"x":46}}],[2.103866,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time U",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,48         Top ",{}]]},"cursor":{"x":47}}],[0.160012,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Up",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,49         Top ",{}]]},"cursor":{"x":48}}],[0.06397,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Upd",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,50         Top ",{}]]},"cursor":{"x":49}}],[0.071862,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Upda",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,51         Top ",{}]]},"cursor":{"x":50}}],[0.07224800000000001,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Updat",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,52         Top ",{}]]},"cursor":{"x":51}}],[0.04826,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,53         Top ",{}]]},"cursor":{"x":52}}],[0.240706,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update(",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,54         Top ",{}]]},"cursor":{"x":53}}],[0.059408,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update",{"fg":4}],["()",{"fg":4,"bg":6}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,55         Top ",{}]]},"cursor":{"x":54}}],[0.135061,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() ",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,56         Top ",{}]]},"cursor":{"x":55}}],[0.308645,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() w",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,57         Top ",{}]]},"cursor":{"x":56}}],[0.135884,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() wa",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,58         Top ",{}]]},"cursor":{"x":57}}],[0.103918,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,59         Top ",{}]]},"cursor":{"x":58}}],[0.232327,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was ",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,60         Top ",{}]]},"cursor":{"x":59}}],[0.135657,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was c",{"fg":4}],["                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,61         Top ",{}]]},"cursor":{"x":60}}],[0.120041,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was ca",{"fg":4}],["                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,62         Top ",{}]]},"cursor":{"x":61}}],[0.111991,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was cal",{"fg":4}],["                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,63         Top ",{}]]},"cursor":{"x":62}}],[0.144499,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was call",{"fg":4}],["                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,64         Top ",{}]]},"cursor":{"x":63}}],[0.135704,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was calle",{"fg":4}],["                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,65         Top ",{}]]},"cursor":{"x":64}}],[0.167952,{"lines":{"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,66         Top ",{}]]},"cursor":{"x":65}}],[1.327986,{"lines":{"21":[["                                                                                                   ",{}]],"22":[["public",{"fg":3}],[":                                                                                            ",{}]],"23":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"24":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"29":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"30":[["};                                                                                                 ",{}]],"32":[["                                                                                                   ",{}]],"33":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"34":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"35":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,5          Top ",{}]]},"cursor":{"x":4,"y":21}}],[0.287926,{"lines":{"22":[["                                                                                                   ",{}]],"23":[["public",{"fg":3}],[":                                                                                            ",{}]],"24":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"25":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"30":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"31":[["};                                                                                                 ",{}]],"33":[["                                                                                                   ",{}]],"34":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"35":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"36":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,5          Top ",{}]]},"cursor":{"y":22}}],[1.183945,{"lines":{"22":[["    v                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,6          Top ",{}]]},"cursor":{"x":5}}],[0.079905,{"lines":{"22":[["    vo                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,7          Top ",{}]]},"cursor":{"x":6}}],[0.08791599999999999,{"lines":{"22":[["    voi                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,8          Top ",{}]]},"cursor":{"x":7}}],[0.023999,{"lines":{"22":[["    ",{}],["void",{"fg":2}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,9          Top ",{}]]},"cursor":{"x":8}}],[0.104168,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     23,10         Top ",{}]]},"cursor":{"x":9}}],[0.415963,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" U                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,11         Top ",{}]]},"cursor":{"x":10}}],[0.136017,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Up                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,12         Top ",{}]]},"cursor":{"x":11}}],[0.147666,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Upd                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,13         Top ",{}]]},"cursor":{"x":12}}],[0.020177,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Upda                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,14         Top ",{}]]},"cursor":{"x":13}}],[0.112152,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Updat                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,15         Top ",{}]]},"cursor":{"x":14}}],[0.06469,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,16         Top ",{}]]},"cursor":{"x":15}}],[0.658479,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,17         Top ",{}]]},"cursor":{"x":16}}],[0.700906,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(t                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,18         Top ",{}]]},"cursor":{"x":17}}],[0.071927,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(ti                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,19         Top ",{}]]},"cursor":{"x":18}}],[0.160328,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(tim                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,20         Top ",{}]]},"cursor":{"x":19}}],[0.08780399999999999,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(time                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,21         Top ",{}]]},"cursor":{"x":20}}],[0.295972,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(time_                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,22         Top ",{}]]},"cursor":{"x":21}}],[0.135852,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,23         Top ",{}]]},"cursor":{"x":22}}],[0.09618,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     23,24         Top ",{}]]},"cursor":{"x":23}}],[0.192038,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" n                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,25         Top ",{}]]},"cursor":{"x":24}}],[0.071925,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" no                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,26         Top ",{}]]},"cursor":{"x":25}}],[0.08787300000000001,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,27         Top ",{}]]},"cursor":{"x":26}}],[0.389615,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update",{}],["(",{"bg":6}],["time_t",{"fg":2}],[" now",{}],[")",{"bg":6}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,28         Top ",{}]]},"cursor":{"x":27}}],[0.140394,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now)                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,29         Top ",{}]]},"cursor":{"x":28}}],[0.316123,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                                      ",{}]],"31":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,30         Top ",{}]]},"cursor":{"x":29}}],[0.165534,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"23":[["                                                                                                   ",{}]],"24":[["public",{"fg":3}],[":                                                                                            ",{}]],"25":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"26":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"31":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"32":[["};                                                                                                 ",{}]],"34":[["                                                                                                   ",{}]],"35":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"36":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,5          Top ",{}]]},"cursor":{"x":4,"y":23}}],[0.31411,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                                      ",{}]],"23":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,6          Top ",{}]]},"cursor":{"x":5}}],[1.290412,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":4}}],[0.212326,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"23":[["    }                                                                                              ",{}]],"37":[["                                                                                 23,5          Top ",{}]]},"cursor":{"y":22}}],[0.149118,{"lines":{"37":[["                                                                                 22,0-1        Top ",{}]]},"cursor":{"x":0,"y":21}}],[0.262165,{"lines":{"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["public",{"fg":3}],[":                                                                                            ",{}]],"26":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"27":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"32":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"33":[["};                                                                                                 ",{}]],"35":[["                                                                                                   ",{}]],"36":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,1          Top ",{}]]},"cursor":{"y":22}}],[0.127739,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     23,5          Top ",{}]]},"cursor":{"x":4}}],[0.288145,{"lines":{"22":[["    /                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,6          Top ",{}]]},"cursor":{"x":5}}],[0.151583,{"lines":{"22":[["    ",{}],["//",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,7          Top ",{}]]},"cursor":{"x":6}}],[3.768928,{"lines":{"22":[["    ",{}],["// ",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,8          Top ",{}]]},"cursor":{"x":7}}],[0.66405,{"lines":{"22":[["    ",{}],["// C",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,9          Top ",{}]]},"cursor":{"x":8}}],[0.18394,{"lines":{"22":[["    ",{}],["// Ca",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,10         Top ",{}]]},"cursor":{"x":9}}],[0.247972,{"lines":{"22":[["    ",{}],["// Cal",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,11         Top ",{}]]},"cursor":{"x":10}}],[0.93598,{"lines":{"22":[["    ",{}],["// Calc",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,12         Top ",{}]]},"cursor":{"x":11}}],[0.096566,{"lines":{"22":[["    ",{}],["// Calcu",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,13         Top ",{}]]},"cursor":{"x":12}}],[0.231545,{"lines":{"22":[["    ",{}],["// Calcul",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,14         Top ",{}]]},"cursor":{"x":13}}],[0.119949,{"lines":{"22":[["    ",{}],["// Calcula",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,15         Top ",{}]]},"cursor":{"x":14}}],[0.119979,{"lines":{"22":[["    ",{}],["// Calculat",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,16         Top ",{}]]},"cursor":{"x":15}}],[0.08820600000000001,{"lines":{"22":[["    ",{}],["// Calculate",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,17         Top ",{}]]},"cursor":{"x":16}}],[0.455824,{"lines":{"22":[["    ",{}],["// Calculate ",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,18         Top ",{}]]},"cursor":{"x":17}}],[0.487949,{"lines":{"22":[["    ",{}],["// Calculate h",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,19         Top ",{}]]},"cursor":{"x":18}}],[0.056075,{"lines":{"22":[["    ",{}],["// Calculate ho",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,20         Top ",{}]]},"cursor":{"x":19}}],[0.08011500000000001,{"lines":{"22":[["    ",{}],["// Calculate how",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,21         Top ",{}]]},"cursor":{"x":20}}],[0.079968,{"lines":{"22":[["    ",{}],["// Calculate how ",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,22         Top ",{}]]},"cursor":{"x":21}}],[0.175973,{"lines":{"22":[["    ",{}],["// Calculate how m",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,23         Top ",{}]]},"cursor":{"x":22}}],[0.07184599999999999,{"lines":{"22":[["    ",{}],["// Calculate how ma",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,24         Top ",{}]]},"cursor":{"x":23}}],[0.120093,{"lines":{"22":[["    ",{}],["// Calculate how man",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,25         Top ",{}]]},"cursor":{"x":24}}],[0.151983,{"lines":{"22":[["    ",{}],["// Calculate how many",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,26         Top ",{}]]},"cursor":{"x":25}}],[0.144019,{"lines":{"22":[["    ",{}],["// Calculate how many ",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,27         Top ",{}]]},"cursor":{"x":26}}],[0.15209,{"lines":{"22":[["    ",{}],["// Calculate how many b",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,28         Top ",{}]]},"cursor":{"x":27}}],[0.055924,{"lines":{"22":[["    ",{}],["// Calculate how many bu",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,29         Top ",{}]]},"cursor":{"x":28}}],[0.151999,{"lines":{"22":[["    ",{}],["// Calculate how many buc",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,30         Top ",{}]]},"cursor":{"x":29}}],[0.07196900000000001,{"lines":{"22":[["    ",{}],["// Calculate how many buck",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,31         Top ",{}]]},"cursor":{"x":30}}],[0.128012,{"lines":{"22":[["    ",{}],["// Calculate how many bucke",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,32         Top ",{}]]},"cursor":{"x":31}}],[0.056381,{"lines":{"22":[["    ",{}],["// Calculate how many bucket",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,33         Top ",{}]]},"cursor":{"x":32}}],[0.167582,{"lines":{"22":[["    ",{}],["// Calculate how many buckets",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,34         Top ",{}]]},"cursor":{"x":33}}],[0.104173,{"lines":{"22":[["    ",{}],["// Calculate how many buckets ",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,35         Top ",{}]]},"cursor":{"x":34}}],[0.183895,{"lines":{"22":[["    ",{}],["// Calculate how many buckets o",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,36         Top ",{}]]},"cursor":{"x":35}}],[0.064114,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,37         Top ",{}]]},"cursor":{"x":36}}],[0.112073,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of ",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,38         Top ",{}]]},"cursor":{"x":37}}],[0.183791,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of t",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,39         Top ",{}]]},"cursor":{"x":38}}],[0.09599299999999999,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of ti",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,40         Top ",{}]]},"cursor":{"x":39}}],[0.200043,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of tim",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,41         Top ",{}]]},"cursor":{"x":40}}],[0.135925,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,42         Top ",{}]]},"cursor":{"x":41}}],[0.072156,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time ",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,43         Top ",{}]]},"cursor":{"x":42}}],[0.175893,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time h",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,44         Top ",{}]]},"cursor":{"x":43}}],[0.039909,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time ha",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,45         Top ",{}]]},"cursor":{"x":44}}],[0.143266,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time hav",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,46         Top ",{}]]},"cursor":{"x":45}}],[0.152749,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,47         Top ",{}]]},"cursor":{"x":46}}],[0.1201,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have ",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,48         Top ",{}]]},"cursor":{"x":47}}],[0.200345,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have p",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,49         Top ",{}]]},"cursor":{"x":48}}],[0.087671,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have pa",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,50         Top ",{}]]},"cursor":{"x":49}}],[0.120172,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have pas",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,51         Top ",{}]]},"cursor":{"x":50}}],[0.167805,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have pass",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,52         Top ",{}]]},"cursor":{"x":51}}],[0.151961,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passe",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,53         Top ",{}]]},"cursor":{"x":52}}],[0.152108,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,54         Top ",{}]]},"cursor":{"x":53}}],[0.09594900000000001,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed ",{"fg":4}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,55         Top ",{}]]},"cursor":{"x":54}}],[0.143952,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed a",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,56         Top ",{}]]},"cursor":{"x":55}}],[0.10401,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed an",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,57         Top ",{}]]},"cursor":{"x":56}}],[0.088144,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,58         Top ",{}]]},"cursor":{"x":57}}],[0.087894,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and ",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,59         Top ",{}]]},"cursor":{"x":58}}],[0.183952,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and S",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,60         Top ",{}]]},"cursor":{"x":59}}],[0.151942,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Sh",{"fg":4}],["                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,61         Top ",{}]]},"cursor":{"x":60}}],[0.056126,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shi",{"fg":4}],["                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,62         Top ",{}]]},"cursor":{"x":61}}],[0.103911,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shif",{"fg":4}],["                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,63         Top ",{}]]},"cursor":{"x":62}}],[0.151451,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift",{"fg":4}],["                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,64         Top ",{}]]},"cursor":{"x":63}}],[0.225561,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift(",{"fg":4}],["                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,65         Top ",{}]]},"cursor":{"x":64}}],[0.051502,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift",{"fg":4}],["()",{"fg":4,"bg":6}],["                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,66         Top ",{}]]},"cursor":{"x":65}}],[0.143166,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() ",{"fg":4}],["                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,67         Top ",{}]]},"cursor":{"x":66}}],[0.124485,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() a",{"fg":4}],["                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,68         Top ",{}]]},"cursor":{"x":67}}],[0.159907,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() ac",{"fg":4}],["                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,69         Top ",{}]]},"cursor":{"x":68}}],[0.168063,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() acc",{"fg":4}],["                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,70         Top ",{}]]},"cursor":{"x":69}}],[0.143862,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() acco",{"fg":4}],["                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,71         Top ",{}]]},"cursor":{"x":70}}],[0.128075,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accor",{"fg":4}],["                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,72         Top ",{}]]},"cursor":{"x":71}}],[0.224056,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accord",{"fg":4}],["                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,73         Top ",{}]]},"cursor":{"x":72}}],[0.095985,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordi",{"fg":4}],["                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,74         Top ",{}]]},"cursor":{"x":73}}],[0.136024,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordin",{"fg":4}],["                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,75         Top ",{}]]},"cursor":{"x":74}}],[0.143911,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() according",{"fg":4}],["                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,76         Top ",{}]]},"cursor":{"x":75}}],[0.096055,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingl",{"fg":4}],["                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,77         Top ",{}]]},"cursor":{"x":76}}],[0.135855,{"lines":{"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,78         Top ",{}]]},"cursor":{"x":77}}],[0.472879,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":76}}],[0.543265,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.096183,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.09547799999999999,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.108236,{"lines":{"37":[["\"ch15_3.cpp\" 62L, 1800C written                                                  23,77         Top ",{}]]},"cursor":{"x":76,"y":22,"visible":true}}],[1.280209,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                                      ",{}]],"24":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 62L, 1800C written                                                  24,29         Top ",{}]]},"cursor":{"x":28,"y":23}}],[0.167888,{"lines":{"37":[["\"ch15_3.cpp\" 62L, 1800C written                                                  25,5          Top ",{}]]},"cursor":{"x":4,"y":24}}],[0.167157,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"24":[["    }                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 62L, 1800C written                                                  26,7          Top ",{}]]},"cursor":{"x":6,"y":25}}],[0.425102,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                                      ",{}]],"24":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 62L, 1800C written                                                  25,5          Top ",{}]]},"cursor":{"x":4,"y":24}}],[0.15915,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["public",{"fg":3}],[":                                                                                            ",{}]],"27":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"28":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"33":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"34":[["};                                                                                                 ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,5          Top ",{}]]},"cursor":{"y":25}}],[0.221166,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":0}}],[0.127249,{"lines":{"37":[["                                                                                 27,5          Top ",{}]]},"cursor":{"x":4,"y":26}}],[0.191838,{"lines":{"37":[["                                                                                 28,5          Top ",{}]]},"cursor":{"y":27}}],[2.327859,{"lines":{"37":[["                                                                                 27,5          Top ",{}]]},"cursor":{"y":26}}],[0.392387,{"lines":{"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"29":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"35":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,1          Top ",{}]]},"cursor":{"x":0,"y":27}}],[0.616534,{"lines":{"37":[["                                                                                                   ",{}]]}}],[0.33494,{"lines":{"37":[["                                                                                 28,0-1        Top ",{}]]}}],[0.152634,{"lines":{"27":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"28":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket);                                   ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"33":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"34":[["};                                                                                                 ",{}]],"35":[["                                                                                                   ",{}]],"37":[["                                                                                 28,5          Top ",{}]]},"cursor":{"x":4}}],[0.207527,{"lines":{"37":[["                                                                                 29,5          Top ",{}]]},"cursor":{"y":28}}],[0.656277,{"lines":{"37":[["                                                                                 29,64         Top ",{}]]},"cursor":{"x":63}}],[0.308525,{"lines":{"28":[["    TrailingBucketCounter",{}],["(",{"bg":6}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket",{}],[")",{"bg":6}],["                                    ",{}]],"37":[["                                                                                 29,63         Top ",{}]]},"cursor":{"x":62}}],[0.200049,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     29,64         Top ",{}]]},"cursor":{"x":63}}],[0.167026,{"lines":{"28":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket)                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,65         Top ",{}]]},"cursor":{"x":64}}],[0.217943,{"lines":{"28":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) ",{}],["{",{"bg":6}],["                                  ",{}]],"34":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,66         Top ",{}]]},"cursor":{"x":65}}],[0.150303,{"lines":{"28":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) {                                  ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"35":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,5          Top ",{}]]},"cursor":{"x":4,"y":29}}],[0.249167,{"lines":{"28":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) ",{}],["{",{"bg":6}],["                                  ",{}]],"29":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,6          Top ",{}]]},"cursor":{"x":5}}],[0.235881,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":4}}],[0.451566,{"lines":{"37":[["                                                                                 30,5          Top ",{}]]}}],[1.000691,{}],[1.150214,{"lines":{"28":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) {                                  ",{}]],"29":[["    }                                                                                              ",{}]],"37":[["                                                                                 29,5          Top ",{}]]},"cursor":{"y":28}}],[1.041068,{"lines":{"28":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) ",{}],["{",{"bg":6}],["                                  ",{}]],"29":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 29,65         Top ",{}]]},"cursor":{"x":64}}],[0.531215,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     29,65         Top ",{}]]}}],[0.540475,{"lines":{"28":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :",{}],["{",{"bg":6}],["                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,66         Top ",{}]]},"cursor":{"x":65}}],[1.296427,{"lines":{"28":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"29":[["    ",{}],["{",{"bg":6}],["                                                                                              ",{}]],"30":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"35":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,5          Top ",{}]]},"cursor":{"x":4,"y":29}}],[0.9440190000000001,{"lines":{"29":[["        ",{}],["{",{"bg":6}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,9          Top ",{}]]},"cursor":{"x":8}}],[0.415864,{"lines":{"29":[["        b",{}],["{",{"bg":6}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,10         Top ",{}]]},"cursor":{"x":9}}],[0.096064,{"lines":{"29":[["        bu",{}],["{",{"bg":6}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,11         Top ",{}]]},"cursor":{"x":10}}],[0.143796,{"lines":{"29":[["        buc",{}],["{",{"bg":6}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,12         Top ",{}]]},"cursor":{"x":11}}],[0.096348,{"lines":{"29":[["        buck",{}],["{",{"bg":6}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,13         Top ",{}]]},"cursor":{"x":12}}],[0.119753,{"lines":{"29":[["        bucke",{}],["{",{"bg":6}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,14         Top ",{}]]},"cursor":{"x":13}}],[0.095953,{"lines":{"29":[["        bucket",{}],["{",{"bg":6}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,15         Top ",{}]]},"cursor":{"x":14}}],[0.232374,{"lines":{"29":[["        buckets",{}],["{",{"bg":6}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,16         Top ",{}]]},"cursor":{"x":15}}],[0.856799,{"lines":{"29":[["        buckets(",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                                  ",{}]],"30":[["    ",{}],["}",{"fg":7,"bg":6,"bold":true}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,17         Top ",{}]]},"cursor":{"x":16}}],[0.399346,{"lines":{"29":[["        buckets(n",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,18         Top ",{}]]},"cursor":{"x":17}}],[0.168013,{"lines":{"29":[["        buckets(nu",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,19         Top ",{}]]},"cursor":{"x":18}}],[0.159984,{"lines":{"29":[["        buckets(num",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,20         Top ",{}]]},"cursor":{"x":19}}],[0.215953,{"lines":{"29":[["        buckets(num_",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,21         Top ",{}]]},"cursor":{"x":20}}],[0.536122,{"lines":{"29":[["        buckets(num_b",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,22         Top ",{}]]},"cursor":{"x":21}}],[0.096146,{"lines":{"29":[["        buckets(num_bu",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,23         Top ",{}]]},"cursor":{"x":22}}],[0.119505,{"lines":{"29":[["        buckets(num_buc",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,24         Top ",{}]]},"cursor":{"x":23}}],[0.112272,{"lines":{"29":[["        buckets(num_buck",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,25         Top ",{}]]},"cursor":{"x":24}}],[0.104108,{"lines":{"29":[["        buckets(num_bucke",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,26         Top ",{}]]},"cursor":{"x":25}}],[0.09590700000000001,{"lines":{"29":[["        buckets(num_bucket",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,27         Top ",{}]]},"cursor":{"x":26}}],[0.176007,{"lines":{"29":[["        buckets(num_buckets",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,28         Top ",{}]]},"cursor":{"x":27}}],[0.502119,{"lines":{"29":[["        buckets(num_buckets)",{}],["{",{"bg":6}],["                                                                      ",{}]],"30":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,29         Top ",{}]]},"cursor":{"x":28}}],[0.905673,{"lines":{"29":[["        buckets(num_buckets),",{}],["{",{"bg":6}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,30         Top ",{}]]},"cursor":{"x":29}}],[0.263996,{"lines":{"29":[["        buckets(num_buckets),                                                                      ",{}]],"30":[["        ",{}],["{",{"bg":6}],["                                                                                          ",{}]],"31":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now);                                                               ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"36":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,9          Top ",{}]]},"cursor":{"x":8,"y":30}}],[0.687955,{"lines":{"30":[["        s",{}],["{",{"bg":6}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,10         Top ",{}]]},"cursor":{"x":9}}],[0.079822,{"lines":{"30":[["        se",{}],["{",{"bg":6}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,11         Top ",{}]]},"cursor":{"x":10}}],[0.432115,{"lines":{"30":[["        sec",{}],["{",{"bg":6}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,12         Top ",{}]]},"cursor":{"x":11}}],[0.327853,{"lines":{"30":[["        secs",{}],["{",{"bg":6}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,13         Top ",{}]]},"cursor":{"x":12}}],[0.336143,{"lines":{"30":[["        secs_",{}],["{",{"bg":6}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,14         Top ",{}]]},"cursor":{"x":13}}],[0.775953,{"lines":{"30":[["        secs_p",{}],["{",{"bg":6}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,15         Top ",{}]]},"cursor":{"x":14}}],[0.07195799999999999,{"lines":{"30":[["        secs_pe",{}],["{",{"bg":6}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,16         Top ",{}]]},"cursor":{"x":15}}],[0.08017299999999999,{"lines":{"30":[["        secs_per",{}],["{",{"bg":6}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,17         Top ",{}]]},"cursor":{"x":16}}],[0.263962,{"lines":{"30":[["        secs_per_",{}],["{",{"bg":6}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,18         Top ",{}]]},"cursor":{"x":17}}],[0.168929,{"lines":{"30":[["        secs_per_b",{}],["{",{"bg":6}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,19         Top ",{}]]},"cursor":{"x":18}}],[0.070968,{"lines":{"30":[["        secs_per_bu",{}],["{",{"bg":6}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,20         Top ",{}]]},"cursor":{"x":19}}],[0.144331,{"lines":{"30":[["        secs_per_buc",{}],["{",{"bg":6}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,21         Top ",{}]]},"cursor":{"x":20}}],[0.111778,{"lines":{"30":[["        secs_per_buck",{}],["{",{"bg":6}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,22         Top ",{}]]},"cursor":{"x":21}}],[0.112014,{"lines":{"30":[["        secs_per_bucke",{}],["{",{"bg":6}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,23         Top ",{}]]},"cursor":{"x":22}}],[0.09596,{"lines":{"30":[["        secs_per_bucket",{}],["{",{"bg":6}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,24         Top ",{}]]},"cursor":{"x":23}}],[0.215985,{"lines":{"30":[["        secs_per_buckets",{}],["{",{"bg":6}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,25         Top ",{}]]},"cursor":{"x":24}}],[0.423991,{"lines":{"30":[["        secs_per_bucket",{}],["{",{"bg":6}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,24         Top ",{}]]},"cursor":{"x":23}}],[1.225286,{"lines":{"30":[["        secs_per_bucket(",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                          ",{}]],"31":[["    ",{}],["}",{"fg":7,"bg":6,"bold":true}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,25         Top ",{}]]},"cursor":{"x":24}}],[0.359519,{"lines":{"30":[["        secs_per_bucket(s",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,26         Top ",{}]]},"cursor":{"x":25}}],[0.079024,{"lines":{"30":[["        secs_per_bucket(se",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,27         Top ",{}]]},"cursor":{"x":26}}],[0.224809,{"lines":{"30":[["        secs_per_bucket(sec",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,28         Top ",{}]]},"cursor":{"x":27}}],[0.175829,{"lines":{"30":[["        secs_per_bucket(secs",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,29         Top ",{}]]},"cursor":{"x":28}}],[0.383945,{"lines":{"30":[["        secs_per_bucket(secs_",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,30         Top ",{}]]},"cursor":{"x":29}}],[0.344138,{"lines":{"30":[["        secs_per_bucket(secs_p",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,31         Top ",{}]]},"cursor":{"x":30}}],[0.064025,{"lines":{"30":[["        secs_per_bucket(secs_pe",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,32         Top ",{}]]},"cursor":{"x":31}}],[0.06396399999999999,{"lines":{"30":[["        secs_per_bucket(secs_per",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,33         Top ",{}]]},"cursor":{"x":32}}],[0.896087,{"lines":{"30":[["        secs_per_bucket(secs_per_",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,34         Top ",{}]]},"cursor":{"x":33}}],[0.471948,{"lines":{"30":[["        secs_per_bucket(secs_per_b",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,35         Top ",{}]]},"cursor":{"x":34}}],[0.07198599999999999,{"lines":{"30":[["        secs_per_bucket(secs_per_bu",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,36         Top ",{}]]},"cursor":{"x":35}}],[0.119855,{"lines":{"30":[["        secs_per_bucket(secs_per_buc",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,37         Top ",{}]]},"cursor":{"x":36}}],[0.101708,{"lines":{"30":[["        secs_per_bucket(secs_per_buck",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,38         Top ",{}]]},"cursor":{"x":37}}],[0.186306,{"lines":{"30":[["        secs_per_bucket(secs_per_bucke",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,39         Top ",{}]]},"cursor":{"x":38}}],[0.120164,{"lines":{"30":[["        secs_per_bucket(secs_per_bucket",{}],["{",{"fg":7,"bg":6,"bold":true}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,40         Top ",{}]]},"cursor":{"x":39}}],[0.544129,{"lines":{"30":[["        secs_per_bucket(secs_per_bucket)",{}],["{",{"bg":6}],["                                                          ",{}]],"31":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,41         Top ",{}]]},"cursor":{"x":40}}],[1.78364,{"lines":{"30":[["        secs_per_bucket(secs_per_bucket) ",{}],["{",{"bg":6}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,42         Top ",{}]]},"cursor":{"x":41}}],[0.628036,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":40}}],[0.458701,{"lines":{"30":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"31":[["    }                                                                                              ",{}]],"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.171864,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.12037,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.113921,{"lines":{"37":[["\"ch15_3.cpp\" 66L, 1881C written                                                  31,41         Top ",{}]]},"cursor":{"x":40,"y":30,"visible":true}}],[1.346674,{"lines":{"30":[["        secs_per_bucket(secs_per_bucket) ",{}],["{",{"bg":6}],["                                                         ",{}]],"31":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 66L, 1881C written                                                  32,5          Top ",{}]]},"cursor":{"x":4,"y":31}}],[0.191015,{"lines":{"30":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"31":[["    }                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 66L, 1881C written                                                  33,0-1        Top ",{}]]},"cursor":{"x":0,"y":32}}],[0.148165,{"lines":{"37":[["\"ch15_3.cpp\" 66L, 1881C written                                                  34,36         Top ",{}]]},"cursor":{"x":35,"y":33}}],[0.629471,{"lines":{"33":[["    ",{}],["void",{"fg":2}],[" Add",{}],["(",{"bg":6}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now",{}],[")",{"bg":6}],["                                                                ",{}]],"37":[["\"ch15_3.cpp\" 66L, 1881C written                                                  34,35         Top ",{}]]},"cursor":{"x":34}}],[0.922071,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     34,36         Top ",{}]]},"cursor":{"x":35}}],[0.940744,{"lines":{"33":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now)                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     34,37         Top ",{}]]},"cursor":{"x":36}}],[0.245021,{"lines":{"33":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     34,38         Top ",{}]]},"cursor":{"x":37}}],[0.175232,{"lines":{"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,5          Top ",{}]]},"cursor":{"x":4,"y":34}}],[0.252518,{"lines":{"33":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                              ",{}]],"34":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,6          Top ",{}]]},"cursor":{"x":5}}],[0.155937,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":4}}],[0.387817,{"lines":{"33":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"34":[["    }                                                                                              ",{}]],"37":[["                                                                                 34,5          Top ",{}]]},"cursor":{"y":33}}],[0.195091,{"lines":{"34":[["                                                                                                   ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,5          Top ",{}]]},"cursor":{"y":34}}],[0.200146,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     35,9          Top ",{}]]},"cursor":{"x":8}}],[0.552176,{"lines":{"34":[["        U                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,10         Top ",{}]]},"cursor":{"x":9}}],[0.152027,{"lines":{"34":[["        Up                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,11         Top ",{}]]},"cursor":{"x":10}}],[0.088065,{"lines":{"34":[["        Upd                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,12         Top ",{}]]},"cursor":{"x":11}}],[0.080183,{"lines":{"34":[["        Upda                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,13         Top ",{}]]},"cursor":{"x":12}}],[0.07971,{"lines":{"34":[["        Updat                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,14         Top ",{}]]},"cursor":{"x":13}}],[0.048058,{"lines":{"34":[["        Update                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,15         Top ",{}]]},"cursor":{"x":14}}],[0.224449,{"lines":{"34":[["        Update(                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,16         Top ",{}]]},"cursor":{"x":15}}],[0.183874,{"lines":{"34":[["        Update(n                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,17         Top ",{}]]},"cursor":{"x":16}}],[0.063787,{"lines":{"34":[["        Update(no                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,18         Top ",{}]]},"cursor":{"x":17}}],[0.079928,{"lines":{"34":[["        Update(now                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,19         Top ",{}]]},"cursor":{"x":18}}],[0.324928,{"lines":{"34":[["        Update",{}],["(",{"bg":6}],["now",{}],[")",{"bg":6}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,20         Top ",{}]]},"cursor":{"x":19}}],[1.070795,{"lines":{"34":[["        Update(now);                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,21         Top ",{}]]},"cursor":{"x":20}}],[0.204309,{"lines":{"35":[["                                                                                                   ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,9          Top ",{}]]},"cursor":{"x":8,"y":35}}],[0.367877,{"lines":{"35":[["        b                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,10         Top ",{}]]},"cursor":{"x":9}}],[0.120037,{"lines":{"35":[["        bu                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,11         Top ",{}]]},"cursor":{"x":10}}],[0.096165,{"lines":{"35":[["        buc                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,12         Top ",{}]]},"cursor":{"x":11}}],[0.103898,{"lines":{"35":[["        buck                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,13         Top ",{}]]},"cursor":{"x":12}}],[0.07989300000000001,{"lines":{"35":[["        bucke                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,14         Top ",{}]]},"cursor":{"x":13}}],[0.080057,{"lines":{"35":[["        bucket                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,15         Top ",{}]]},"cursor":{"x":14}}],[0.160008,{"lines":{"35":[["        buckets                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,16         Top ",{}]]},"cursor":{"x":15}}],[0.128233,{"lines":{"35":[["        buckets.                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,17         Top ",{}]]},"cursor":{"x":16}}],[0.344825,{"lines":{"35":[["        buckets.A                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,18         Top ",{}]]},"cursor":{"x":17}}],[0.158605,{"lines":{"35":[["        buckets.Ad                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,19         Top ",{}]]},"cursor":{"x":18}}],[0.144285,{"lines":{"35":[["        buckets.Add                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,20         Top ",{}]]},"cursor":{"x":19}}],[0.263982,{"lines":{"35":[["        buckets.AddT                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,21         Top ",{}]]},"cursor":{"x":20}}],[0.128193,{"lines":{"35":[["        buckets.AddTo                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,22         Top ",{}]]},"cursor":{"x":21}}],[0.168014,{"lines":{"35":[["        buckets.AddToB                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,23         Top ",{}]]},"cursor":{"x":22}}],[0.136044,{"lines":{"35":[["        buckets.AddToBa                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,24         Top ",{}]]},"cursor":{"x":23}}],[0.199747,{"lines":{"35":[["        buckets.AddToBac                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,25         Top ",{}]]},"cursor":{"x":24}}],[0.136297,{"lines":{"35":[["        buckets.AddToBack                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,26         Top ",{}]]},"cursor":{"x":25}}],[0.296246,{"lines":{"35":[["        buckets.AddToBack(                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,27         Top ",{}]]},"cursor":{"x":26}}],[0.175505,{"lines":{"35":[["        buckets.AddToBack(c                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,28         Top ",{}]]},"cursor":{"x":27}}],[0.088175,{"lines":{"35":[["        buckets.AddToBack(co                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,29         Top ",{}]]},"cursor":{"x":28}}],[0.07187300000000001,{"lines":{"35":[["        buckets.AddToBack(cou                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,30         Top ",{}]]},"cursor":{"x":29}}],[0.161192,{"lines":{"35":[["        buckets.AddToBack(coun                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,31         Top ",{}]]},"cursor":{"x":30}}],[0.094781,{"lines":{"35":[["        buckets.AddToBack(count                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,32         Top ",{}]]},"cursor":{"x":31}}],[0.268866,{"lines":{"35":[["        buckets.AddToBack",{}],["(",{"bg":6}],["count",{}],[")",{"bg":6}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,33         Top ",{}]]},"cursor":{"x":32}}],[0.455,{"lines":{"35":[["        buckets.AddToBack(count);                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,34         Top ",{}]]},"cursor":{"x":33}}],[0.172818,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":32}}],[0.199103,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.11184,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.072299,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.099227,{"lines":{"37":[["\"ch15_3.cpp\" 69L, 1943C written                                                  36,33         Top ",{}]]},"cursor":{"x":32,"y":35,"visible":true}}],[0.105593,{"lines":{"33":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                              ",{}]],"36":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 69L, 1943C written                                                  37,5          Top ",{}]]},"cursor":{"x":4,"y":36}}],[0.150906,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"1":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items);                                                                  ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"7":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"8":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"9":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"12":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"13":[["};                                                                                                 ",{}]],"14":[["                                                                                                   ",{}]],"15":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"16":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"17":[["    ConveyorQueue buckets;                                                                         ",{}]],"18":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"19":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"20":[["                                                                                                   ",{}]],"21":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"22":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["public",{"fg":3}],[":                                                                                            ",{}]],"26":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"27":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"28":[["        buckets(num_buckets),                                                                      ",{}]],"29":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"33":[["        Update(now);                                                                               ",{}]],"34":[["        buckets.AddToBack(count);                                                                  ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 38,0-1         3% ",{}]]},"cursor":{"x":0}}],[0.140354,{"lines":{"0":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items);                                                                  ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"3":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"6":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"7":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"8":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"11":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"12":[["};                                                                                                 ",{}]],"13":[["                                                                                                   ",{}]],"14":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"15":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"16":[["    ConveyorQueue buckets;                                                                         ",{}]],"17":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"18":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"19":[["                                                                                                   ",{}]],"20":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"21":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["                                                                                                   ",{}]],"24":[["public",{"fg":3}],[":                                                                                            ",{}]],"25":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"26":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"27":[["        buckets(num_buckets),                                                                      ",{}]],"28":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"32":[["        Update(now);                                                                               ",{}]],"33":[["        buckets.AddToBack(count);                                                                  ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"37":[["                                                                                 39,33          6% ",{}]]},"cursor":{"x":32}}],[0.156747,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"2":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"5":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"6":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"7":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"10":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"11":[["};                                                                                                 ",{}]],"12":[["                                                                                                   ",{}]],"13":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"14":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"15":[["    ConveyorQueue buckets;                                                                         ",{}]],"16":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"17":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"18":[["                                                                                                   ",{}]],"19":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"20":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"21":[["    }                                                                                              ",{}]],"22":[["                                                                                                   ",{}]],"23":[["public",{"fg":3}],[":                                                                                            ",{}]],"24":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"25":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"26":[["        buckets(num_buckets),                                                                      ",{}]],"27":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"31":[["        Update(now);                                                                               ",{}]],"32":[["        buckets.AddToBack(count);                                                                  ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"36":[["    ",{}],["int",{"fg":2}],[" TrailingCount",{}],["(",{"bg":6}],["time_t",{"fg":2}],[" now",{}],[")",{"bg":6}],[";                                                                 ",{}]],"37":[["                                                                                 40,33          9% ",{}]]}}],[0.150895,{"lines":{"0":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"1":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"4":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"5":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"9":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"10":[["};                                                                                                 ",{}]],"11":[["                                                                                                   ",{}]],"12":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"13":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"14":[["    ConveyorQueue buckets;                                                                         ",{}]],"15":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"16":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["public",{"fg":3}],[":                                                                                            ",{}]],"23":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"24":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"25":[["        buckets(num_buckets),                                                                      ",{}]],"26":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"30":[["        Update(now);                                                                               ",{}]],"31":[["        buckets.AddToBack(count);                                                                  ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"35":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["                                                                                 41,2          12% ",{}]]},"cursor":{"x":1}}],[0.22029,{"lines":{"0":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"3":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"4":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"5":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"8":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"9":[["};                                                                                                 ",{}]],"10":[["                                                                                                   ",{}]],"11":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"12":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"13":[["    ConveyorQueue buckets;                                                                         ",{}]],"14":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"15":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"18":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"19":[["    }                                                                                              ",{}]],"20":[["                                                                                                   ",{}]],"21":[["public",{"fg":3}],[":                                                                                            ",{}]],"22":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"23":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"24":[["        buckets(num_buckets),                                                                      ",{}]],"25":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"29":[["        Update(now);                                                                               ",{}]],"30":[["        buckets.AddToBack(count);                                                                  ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"35":[["};                                                                                                 ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 42,0-1        15% ",{}]]},"cursor":{"x":0}}],[0.19199,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"2":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"3":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"4":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"7":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"8":[["};                                                                                                 ",{}]],"9":[["                                                                                                   ",{}]],"10":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"11":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"12":[["    ConveyorQueue buckets;                                                                         ",{}]],"13":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"14":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"17":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"18":[["    }                                                                                              ",{}]],"19":[["                                                                                                   ",{}]],"20":[["public",{"fg":3}],[":                                                                                            ",{}]],"21":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"22":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"23":[["        buckets(num_buckets),                                                                      ",{}]],"24":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"28":[["        Update(now);                                                                               ",{}]],"29":[["        buckets.AddToBack(count);                                                                  ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"33":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"34":[["};                                                                                                 ",{}]],"35":[["                                                                                                   ",{}]],"37":[["                                                                                 43,0-1        18% ",{}]]}}],[0.223909,{"lines":{"37":[["                                                                                 42,0-1        18% ",{}]]},"cursor":{"y":35}}],[0.168454,{"lines":{"37":[["                                                                                 41,2          18% ",{}]]},"cursor":{"x":1,"y":34}}],[0.164046,{"lines":{"33":[["    ",{}],["int",{"fg":2}],[" TrailingCount",{}],["(",{"bg":6}],["time_t",{"fg":2}],[" now",{}],[")",{"bg":6}],[";                                                                 ",{}]],"37":[["                                                                                 40,33         18% ",{}]]},"cursor":{"x":32,"y":33}}],[0.5510389999999999,{"lines":{"33":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now);                                                                 ",{}]],"37":[["                                                                                 40,34         18% ",{}]]},"cursor":{"x":33}}],[1.544977,{"lines":{"33":[["    ",{}],["int",{"fg":2}],[" TrailingCount",{}],["(",{"bg":6}],["time_t",{"fg":2}],[" now",{}],[")",{"bg":6}],["                                                                  ",{}]],"37":[["                                                                                 40,33         18% ",{}]]},"cursor":{"x":32}}],[0.887983,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     40,34         18% ",{}]]},"cursor":{"x":33}}],[0.167142,{"lines":{"33":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now)                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     40,35         18% ",{}]]},"cursor":{"x":34}}],[0.256997,{"lines":{"33":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                                ",{}]],"34":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     40,36         18% ",{}]]},"cursor":{"x":35}}],[0.207363,{"lines":{"33":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"34":[["                                                                                                   ",{}]],"35":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,5          18% ",{}]]},"cursor":{"x":4,"y":34}}],[0.296663,{"lines":{"33":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                                ",{}]],"34":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,6          18% ",{}]]},"cursor":{"x":5}}],[0.8604000000000001,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":4}}],[0.149982,{"cursor":{"visible":false}}],[0.001724,{"lines":{"33":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"34":[["    }                                                                                              ",{}]],"37":[["                                                                                 40,5          18% ",{}]]},"cursor":{"y":33,"visible":true}}],[0.151434,{"lines":{"34":[["                                                                                                   ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,5          17% ",{}]]},"cursor":{"y":34}}],[0.312043,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     41,9          17% ",{}]]},"cursor":{"x":8}}],[1.087178,{"lines":{"34":[["        U                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,10         17% ",{}]]},"cursor":{"x":9}}],[0.152733,{"lines":{"34":[["        Up                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,11         17% ",{}]]},"cursor":{"x":10}}],[0.07195799999999999,{"lines":{"34":[["        Upd                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,12         17% ",{}]]},"cursor":{"x":11}}],[0.079939,{"lines":{"34":[["        Upda                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,13         17% ",{}]]},"cursor":{"x":12}}],[0.11213,{"lines":{"34":[["        Updat                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,14         17% ",{}]]},"cursor":{"x":13}}],[0.016091,{"lines":{"34":[["        Update                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,15         17% ",{}]]},"cursor":{"x":14}}],[0.288493,{"lines":{"34":[["        Update(                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,16         17% ",{}]]},"cursor":{"x":15}}],[0.011914,{"lines":{"34":[["        Update",{}],["()",{"bg":6}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,17         17% ",{}]]},"cursor":{"x":16}}],[0.583519,{"lines":{"34":[["        Update(                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,16         17% ",{}]]},"cursor":{"x":15}}],[0.276908,{"lines":{"34":[["        Update(n                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,17         17% ",{}]]},"cursor":{"x":16}}],[0.047118,{"lines":{"34":[["        Update(no                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,18         17% ",{}]]},"cursor":{"x":17}}],[0.111936,{"lines":{"34":[["        Update(now                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,19         17% ",{}]]},"cursor":{"x":18}}],[0.300557,{"lines":{"34":[["        Update",{}],["(",{"bg":6}],["now",{}],[")",{"bg":6}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,20         17% ",{}]]},"cursor":{"x":19}}],[0.718843,{"lines":{"34":[["        Update(now);                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     41,21         17% ",{}]]},"cursor":{"x":20}}],[0.260654,{"lines":{"35":[["                                                                                                   ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,9          17% ",{}]]},"cursor":{"x":8,"y":35}}],[0.215854,{"lines":{"35":[["        r                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,10         17% ",{}]]},"cursor":{"x":9}}],[0.040273,{"lines":{"35":[["        re                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,11         17% ",{}]]},"cursor":{"x":10}}],[0.1437,{"lines":{"35":[["        ret                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,12         17% ",{}]]},"cursor":{"x":11}}],[0.056627,{"lines":{"35":[["        retu                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,13         17% ",{}]]},"cursor":{"x":12}}],[0.111488,{"lines":{"35":[["        retur                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,14         17% ",{}]]},"cursor":{"x":13}}],[0.056035,{"lines":{"35":[["        ",{}],["return",{"fg":3}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,15         17% ",{}]]},"cursor":{"x":14}}],[0.10393,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     42,16         17% ",{}]]},"cursor":{"x":15}}],[0.151997,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" b                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,17         17% ",{}]]},"cursor":{"x":16}}],[0.08848300000000001,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" bu                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,18         17% ",{}]]},"cursor":{"x":17}}],[0.167562,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buc                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,19         17% ",{}]]},"cursor":{"x":18}}],[0.09597799999999999,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buck                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,20         17% ",{}]]},"cursor":{"x":19}}],[0.104046,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" bucke                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,21         17% ",{}]]},"cursor":{"x":20}}],[0.08003200000000001,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" bucket                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,22         17% ",{}]]},"cursor":{"x":21}}],[0.167953,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,23         17% ",{}]]},"cursor":{"x":22}}],[0.112015,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets.                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,24         17% ",{}]]},"cursor":{"x":23}}],[0.311988,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets.T                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,25         17% ",{}]]},"cursor":{"x":24}}],[0.112071,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets.To                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,26         17% ",{}]]},"cursor":{"x":25}}],[0.096057,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets.Tot                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,27         17% ",{}]]},"cursor":{"x":26}}],[0.184061,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets.Tota                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,28         17% ",{}]]},"cursor":{"x":27}}],[0.183871,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets.Total                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,29         17% ",{}]]},"cursor":{"x":28}}],[0.207976,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets.TotalS                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,30         17% ",{}]]},"cursor":{"x":29}}],[0.119979,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSu                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,31         17% ",{}]]},"cursor":{"x":30}}],[0.192126,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,32         17% ",{}]]},"cursor":{"x":31}}],[0.015845,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSumn                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,33         17% ",{}]]},"cursor":{"x":32}}],[0.78324,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,32         17% ",{}]]},"cursor":{"x":31}}],[0.777267,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum(                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,33         17% ",{}]]},"cursor":{"x":32}}],[0.036967,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum",{}],["()",{"bg":6}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,34         17% ",{}]]},"cursor":{"x":33}}],[0.478589,{"lines":{"35":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     42,35         17% ",{}]]},"cursor":{"x":34}}],[0.116649,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":33}}],[0.159881,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.110992,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.120334,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.095198,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  42,34         17% ",{}]]},"cursor":{"x":33,"y":35,"visible":true}}],[1.40864,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  41,20         17% ",{}]]},"cursor":{"x":19,"y":34}}],[0.160041,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  40,34         17% ",{}]]},"cursor":{"x":33,"y":33}}],[0.15998,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  39,34         17% ",{}]]},"cursor":{"y":32}}],[0.144047,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  38,0-1        17% ",{}]]},"cursor":{"x":0,"y":31}}],[0.172758,{"lines":{"27":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                              ",{}]],"30":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  37,5          17% ",{}]]},"cursor":{"x":4,"y":30}}],[0.150968,{"lines":{"27":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"30":[["    }                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  36,33         17% ",{}]]},"cursor":{"x":32,"y":29}}],[0.156278,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  35,20         17% ",{}]]},"cursor":{"x":19,"y":28}}],[0.152239,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  34,34         17% ",{}]]},"cursor":{"x":33,"y":27}}],[0.15973,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  33,0-1        17% ",{}]]},"cursor":{"x":0,"y":26}}],[0.172994,{"lines":{"24":[["        secs_per_bucket(secs_per_bucket) ",{}],["{",{"bg":6}],["                                                         ",{}]],"25":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  32,5          17% ",{}]]},"cursor":{"x":4,"y":25}}],[0.158809,{"lines":{"24":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"25":[["    }                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  31,34         17% ",{}]]},"cursor":{"x":33,"y":24}}],[0.164276,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  30,29         17% ",{}]]},"cursor":{"x":28,"y":23}}],[0.160001,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  29,34         17% ",{}]]},"cursor":{"x":33,"y":22}}],[0.152075,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  28,34         17% ",{}]]},"cursor":{"y":21}}],[0.167904,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  27,7          17% ",{}]]},"cursor":{"x":6,"y":20}}],[0.151988,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  26,0-1        17% ",{}]]},"cursor":{"x":0,"y":19}}],[0.172728,{"lines":{"17":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                                      ",{}]],"18":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  25,5          17% ",{}]]},"cursor":{"x":4,"y":18}}],[0.18408,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  24,29         17% ",{}]]},"cursor":{"x":28,"y":17}}],[0.311928,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  25,5          17% ",{}]]},"cursor":{"x":4,"y":18}}],[0.343858,{"lines":{"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  24,29         17% ",{}]]},"cursor":{"x":28,"y":17}}],[0.246978,{"lines":{"17":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"18":[["    }                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  23,34         17% ",{}]]},"cursor":{"x":33,"y":16}}],[0.353114,{"lines":{"17":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                                      ",{}]],"18":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 72L, 2006C written                                                  24,29         17% ",{}]]},"cursor":{"x":28,"y":17}}],[1.655556,{"lines":{"17":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"18":[["                                                                                                   ",{}]],"19":[["    }                                                                                              ",{}]],"20":[["                                                                                                   ",{}]],"21":[["public",{"fg":3}],[":                                                                                            ",{}]],"22":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"23":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"24":[["        buckets(num_buckets),                                                                      ",{}]],"25":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"29":[["        Update(now);                                                                               ",{}]],"30":[["        buckets.AddToBack(count);                                                                  ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"35":[["        Update(now);                                                                               ",{}]],"36":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,5          16% ",{}]]},"cursor":{"x":4,"y":18}}],[0.275315,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     25,9          16% ",{}]]},"cursor":{"x":8}}],[0.312738,{"lines":{"18":[["        i                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,10         16% ",{}]]},"cursor":{"x":9}}],[0.072147,{"lines":{"18":[["        in                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,11         16% ",{}]]},"cursor":{"x":10}}],[0.079649,{"lines":{"18":[["        ",{}],["int",{"fg":2}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,12         16% ",{}]]},"cursor":{"x":11}}],[0.112101,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     25,13         16% ",{}]]},"cursor":{"x":12}}],[0.26396,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" c                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,14         16% ",{}]]},"cursor":{"x":13}}],[0.104137,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" cu                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,15         16% ",{}]]},"cursor":{"x":14}}],[0.143884,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" cur                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,16         16% ",{}]]},"cursor":{"x":15}}],[0.144009,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" curr                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,17         16% ",{}]]},"cursor":{"x":16}}],[0.400021,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" curre                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,18         16% ",{}]]},"cursor":{"x":17}}],[0.12006,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" curren                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,19         16% ",{}]]},"cursor":{"x":18}}],[0.087925,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,20         16% ",{}]]},"cursor":{"x":19}}],[0.29595,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,21         16% ",{}]]},"cursor":{"x":20}}],[0.168123,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_b                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,22         16% ",{}]]},"cursor":{"x":21}}],[0.095904,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bu                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,23         16% ",{}]]},"cursor":{"x":22}}],[0.135938,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_buc                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,24         16% ",{}]]},"cursor":{"x":23}}],[0.104096,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_buck                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,25         16% ",{}]]},"cursor":{"x":24}}],[0.096028,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucke                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,26         16% ",{}]]},"cursor":{"x":25}}],[0.06396,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,27         16% ",{}]]},"cursor":{"x":26}}],[0.09600400000000001,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     25,28         16% ",{}]]},"cursor":{"x":27}}],[0.18402,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket =                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,29         16% ",{}]]},"cursor":{"x":28}}],[0.06408,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     25,30         16% ",{}]]},"cursor":{"x":29}}],[0.192065,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = n                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,31         16% ",{}]]},"cursor":{"x":30}}],[0.088315,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = no                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,32         16% ",{}]]},"cursor":{"x":31}}],[0.071422,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,33         16% ",{}]]},"cursor":{"x":32}}],[1.328209,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     25,34         16% ",{}]]},"cursor":{"x":33}}],[0.175838,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now /                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,35         16% ",{}]]},"cursor":{"x":34}}],[0.071973,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     25,36         16% ",{}]]},"cursor":{"x":35}}],[0.176,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / s                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,37         16% ",{}]]},"cursor":{"x":36}}],[0.096021,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / se                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,38         16% ",{}]]},"cursor":{"x":37}}],[0.224083,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / sec                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,39         16% ",{}]]},"cursor":{"x":38}}],[0.159884,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,40         16% ",{}]]},"cursor":{"x":39}}],[0.248011,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,41         16% ",{}]]},"cursor":{"x":40}}],[0.23234,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_p                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,42         16% ",{}]]},"cursor":{"x":41}}],[0.07174,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_pe                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,43         16% ",{}]]},"cursor":{"x":42}}],[0.072002,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,44         16% ",{}]]},"cursor":{"x":43}}],[0.424395,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,45         16% ",{}]]},"cursor":{"x":44}}],[0.183655,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_b                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,46         16% ",{}]]},"cursor":{"x":45}}],[0.104088,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bu                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,47         16% ",{}]]},"cursor":{"x":46}}],[0.111831,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_buc                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,48         16% ",{}]]},"cursor":{"x":47}}],[0.103987,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_buck                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,49         16% ",{}]]},"cursor":{"x":48}}],[0.087975,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucke                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,50         16% ",{}]]},"cursor":{"x":49}}],[0.072308,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,51         16% ",{}]]},"cursor":{"x":50}}],[0.319814,{"lines":{"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,52         16% ",{}]]},"cursor":{"x":51}}],[0.192126,{"lines":{"19":[["                                                                                                   ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["public",{"fg":3}],[":                                                                                            ",{}]],"23":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"24":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"25":[["        buckets(num_buckets),                                                                      ",{}]],"26":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"30":[["        Update(now);                                                                               ",{}]],"31":[["        buckets.AddToBack(count);                                                                  ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"35":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"36":[["        Update(now);                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,9          16% ",{}]]},"cursor":{"x":8,"y":19}}],[0.519763,{"lines":{"19":[["        i                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,10         16% ",{}]]},"cursor":{"x":9}}],[0.072088,{"lines":{"19":[["        in                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,11         16% ",{}]]},"cursor":{"x":10}}],[0.087813,{"lines":{"19":[["        ",{}],["int",{"fg":2}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,12         16% ",{}]]},"cursor":{"x":11}}],[0.07220500000000001,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     26,13         16% ",{}]]},"cursor":{"x":12}}],[0.432284,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" l                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,14         16% ",{}]]},"cursor":{"x":13}}],[0.079639,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" la                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,15         16% ",{}]]},"cursor":{"x":14}}],[0.087917,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" las                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,16         16% ",{}]]},"cursor":{"x":15}}],[0.08808100000000001,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,17         16% ",{}]]},"cursor":{"x":16}}],[0.294826,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,18         16% ",{}]]},"cursor":{"x":17}}],[0.177499,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_u                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,19         16% ",{}]]},"cursor":{"x":18}}],[0.079773,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_up                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,20         16% ",{}]]},"cursor":{"x":19}}],[0.047814,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_upd                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,21         16% ",{}]]},"cursor":{"x":20}}],[0.080192,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_upda                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,22         16% ",{}]]},"cursor":{"x":21}}],[0.07985299999999999,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_updat                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,23         16% ",{}]]},"cursor":{"x":22}}],[0.048047,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,24         16% ",{}]]},"cursor":{"x":23}}],[0.344003,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,25         16% ",{}]]},"cursor":{"x":24}}],[0.440051,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_b                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,26         16% ",{}]]},"cursor":{"x":25}}],[0.159941,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bu                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,27         16% ",{}]]},"cursor":{"x":26}}],[0.096056,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_buc                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,28         16% ",{}]]},"cursor":{"x":27}}],[0.119723,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_buck                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,29         16% ",{}]]},"cursor":{"x":28}}],[0.072292,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucke                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,30         16% ",{}]]},"cursor":{"x":29}}],[0.07198400000000001,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,31         16% ",{}]]},"cursor":{"x":30}}],[0.104184,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     26,32         16% ",{}]]},"cursor":{"x":31}}],[0.224084,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket =                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,33         16% ",{}]]},"cursor":{"x":32}}],[0.103824,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     26,34         16% ",{}]]},"cursor":{"x":33}}],[0.247899,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = l                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,35         16% ",{}]]},"cursor":{"x":34}}],[0.088036,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = la                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,36         16% ",{}]]},"cursor":{"x":35}}],[0.056114,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = las                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,37         16% ",{}]]},"cursor":{"x":36}}],[0.143767,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,38         16% ",{}]]},"cursor":{"x":37}}],[0.5440120000000001,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,39         16% ",{}]]},"cursor":{"x":38}}],[0.768,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_u                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,40         16% ",{}]]},"cursor":{"x":39}}],[0.07199,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_up                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,41         16% ",{}]]},"cursor":{"x":40}}],[0.047968,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_upd                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,42         16% ",{}]]},"cursor":{"x":41}}],[0.08808199999999999,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_upda                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,43         16% ",{}]]},"cursor":{"x":42}}],[0.079925,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_updat                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,44         16% ",{}]]},"cursor":{"x":43}}],[0.056179,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,45         16% ",{}]]},"cursor":{"x":44}}],[0.431885,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,46         16% ",{}]]},"cursor":{"x":45}}],[0.192144,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_t                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,47         16% ",{}]]},"cursor":{"x":46}}],[0.047814,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_ti                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,48         16% ",{}]]},"cursor":{"x":47}}],[0.208285,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_tim                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,49         16% ",{}]]},"cursor":{"x":48}}],[0.127823,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,50         16% ",{}]]},"cursor":{"x":49}}],[0.167976,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     26,51         16% ",{}]]},"cursor":{"x":50}}],[0.424386,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time /                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,52         16% ",{}]]},"cursor":{"x":51}}],[0.087741,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     26,53         16% ",{}]]},"cursor":{"x":52}}],[0.175932,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / s                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,54         16% ",{}]]},"cursor":{"x":53}}],[0.079957,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / se                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,55         16% ",{}]]},"cursor":{"x":54}}],[0.232019,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / sec                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,56         16% ",{}]]},"cursor":{"x":55}}],[0.208041,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,57         16% ",{}]]},"cursor":{"x":56}}],[0.392064,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,58         16% ",{}]]},"cursor":{"x":57}}],[0.527941,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_p                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,59         16% ",{}]]},"cursor":{"x":58}}],[0.06390800000000001,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_pe                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,60         16% ",{}]]},"cursor":{"x":59}}],[0.079999,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,61         16% ",{}]]},"cursor":{"x":60}}],[0.320171,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,62         16% ",{}]]},"cursor":{"x":61}}],[0.22392,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_b                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,63         16% ",{}]]},"cursor":{"x":62}}],[0.08799999999999999,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bu                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,64         16% ",{}]]},"cursor":{"x":63}}],[0.111901,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_buc                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,65         16% ",{}]]},"cursor":{"x":64}}],[0.135991,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_buck                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,66         16% ",{}]]},"cursor":{"x":65}}],[0.13605,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucke                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,67         16% ",{}]]},"cursor":{"x":66}}],[0.08807,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,68         16% ",{}]]},"cursor":{"x":67}}],[0.407961,{"lines":{"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,69         16% ",{}]]},"cursor":{"x":68}}],[0.216037,{"lines":{"20":[["                                                                                                   ",{}]],"21":[["    }                                                                                              ",{}]],"22":[["                                                                                                   ",{}]],"23":[["public",{"fg":3}],[":                                                                                            ",{}]],"24":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"25":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"26":[["        buckets(num_buckets),                                                                      ",{}]],"27":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"31":[["        Update(now);                                                                               ",{}]],"32":[["        buckets.AddToBack(count);                                                                  ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"36":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     27,9          15% ",{}]]},"cursor":{"x":8,"y":20}}],[0.168066,{"lines":{"21":[["                                                                                                   ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["                                                                                                   ",{}]],"24":[["public",{"fg":3}],[":                                                                                            ",{}]],"25":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"26":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"27":[["        buckets(num_buckets),                                                                      ",{}]],"28":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"32":[["        Update(now);                                                                               ",{}]],"33":[["        buckets.AddToBack(count);                                                                  ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,9          15% ",{}]]},"cursor":{"y":21}}],[0.287818,{"lines":{"21":[["        b                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,10         15% ",{}]]},"cursor":{"x":9}}],[0.120172,{"lines":{"21":[["        bu                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,11         15% ",{}]]},"cursor":{"x":10}}],[0.088115,{"lines":{"21":[["        buc                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,12         15% ",{}]]},"cursor":{"x":11}}],[0.143677,{"lines":{"21":[["        buck                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,13         15% ",{}]]},"cursor":{"x":12}}],[0.120055,{"lines":{"21":[["        bucke                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,14         15% ",{}]]},"cursor":{"x":13}}],[0.03984,{"lines":{"21":[["        bucket                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,15         15% ",{}]]},"cursor":{"x":14}}],[0.24007,{"lines":{"21":[["        bucket.                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,16         15% ",{}]]},"cursor":{"x":15}}],[0.8800750000000001,{"lines":{"21":[["        bucket.S                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,17         15% ",{}]]},"cursor":{"x":16}}],[0.151967,{"lines":{"21":[["        bucket.Sh                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,18         15% ",{}]]},"cursor":{"x":17}}],[0.04015,{"lines":{"21":[["        bucket.Shi                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,19         15% ",{}]]},"cursor":{"x":18}}],[0.103831,{"lines":{"21":[["        bucket.Shif                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,20         15% ",{}]]},"cursor":{"x":19}}],[0.160089,{"lines":{"21":[["        bucket.Shift                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,21         15% ",{}]]},"cursor":{"x":20}}],[1.130346,{"lines":{"21":[["        bucket.Shift(                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,22         15% ",{}]]},"cursor":{"x":21}}],[0.341652,{"lines":{"21":[["        bucket.Shift(c                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,23         15% ",{}]]},"cursor":{"x":22}}],[0.103979,{"lines":{"21":[["        bucket.Shift(cu                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,24         15% ",{}]]},"cursor":{"x":23}}],[0.095984,{"lines":{"21":[["        bucket.Shift(cur                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,25         15% ",{}]]},"cursor":{"x":24}}],[0.160255,{"lines":{"21":[["        bucket.Shift(curr                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,26         15% ",{}]]},"cursor":{"x":25}}],[0.224023,{"lines":{"21":[["        bucket.Shift(curre                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,27         15% ",{}]]},"cursor":{"x":26}}],[1.071842,{"lines":{"21":[["        bucket.Shift(curren                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,28         15% ",{}]]},"cursor":{"x":27}}],[0.175993,{"lines":{"21":[["        bucket.Shift(current                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,29         15% ",{}]]},"cursor":{"x":28}}],[0.327956,{"lines":{"21":[["        bucket.Shift(current_                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,30         15% ",{}]]},"cursor":{"x":29}}],[0.135877,{"lines":{"21":[["        bucket.Shift(current_b                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,31         15% ",{}]]},"cursor":{"x":30}}],[0.09618699999999999,{"lines":{"21":[["        bucket.Shift(current_bu                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,32         15% ",{}]]},"cursor":{"x":31}}],[0.112217,{"lines":{"21":[["        bucket.Shift(current_buc                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,33         15% ",{}]]},"cursor":{"x":32}}],[0.127706,{"lines":{"21":[["        bucket.Shift(current_buck                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,34         15% ",{}]]},"cursor":{"x":33}}],[0.087978,{"lines":{"21":[["        bucket.Shift(current_bucke                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,35         15% ",{}]]},"cursor":{"x":34}}],[0.07986,{"lines":{"21":[["        bucket.Shift(current_bucket                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,36         15% ",{}]]},"cursor":{"x":35}}],[0.808333,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     28,37         15% ",{}]]},"cursor":{"x":36}}],[0.391468,{"lines":{"21":[["        bucket.Shift(current_bucket -                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,38         15% ",{}]]},"cursor":{"x":37}}],[0.016377,{"lines":{"21":[["        bucket.Shift(current_bucket -=                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,39         15% ",{}]]},"cursor":{"x":38}}],[0.071961,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     28,40         15% ",{}]]},"cursor":{"x":39}}],[0.576135,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     28,39         15% ",{}]]},"cursor":{"x":38}}],[0.623968,{"lines":{"21":[["        bucket.Shift(current_bucket -                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,38         15% ",{}]]},"cursor":{"x":37}}],[0.127943,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     28,39         15% ",{}]]},"cursor":{"x":38}}],[0.311961,{"lines":{"21":[["        bucket.Shift(current_bucket - l                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,40         15% ",{}]]},"cursor":{"x":39}}],[0.096454,{"lines":{"21":[["        bucket.Shift(current_bucket - la                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,41         15% ",{}]]},"cursor":{"x":40}}],[0.135602,{"lines":{"21":[["        bucket.Shift(current_bucket - las                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,42         15% ",{}]]},"cursor":{"x":41}}],[0.103974,{"lines":{"21":[["        bucket.Shift(current_bucket - last                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,43         15% ",{}]]},"cursor":{"x":42}}],[0.312126,{"lines":{"21":[["        bucket.Shift(current_bucket - last_                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,44         15% ",{}]]},"cursor":{"x":43}}],[0.441055,{"lines":{"21":[["        bucket.Shift(current_bucket - last_u                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,45         15% ",{}]]},"cursor":{"x":44}}],[0.103051,{"lines":{"21":[["        bucket.Shift(current_bucket - last_up                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,46         15% ",{}]]},"cursor":{"x":45}}],[0.095816,{"lines":{"21":[["        bucket.Shift(current_bucket - last_upd                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,47         15% ",{}]]},"cursor":{"x":46}}],[0.07986600000000001,{"lines":{"21":[["        bucket.Shift(current_bucket - last_upda                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,48         15% ",{}]]},"cursor":{"x":47}}],[0.096043,{"lines":{"21":[["        bucket.Shift(current_bucket - last_updat                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,49         15% ",{}]]},"cursor":{"x":48}}],[0.032499,{"lines":{"21":[["        bucket.Shift(current_bucket - last_update                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,50         15% ",{}]]},"cursor":{"x":49}}],[0.343656,{"lines":{"21":[["        bucket.Shift(current_bucket - last_update_                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,51         15% ",{}]]},"cursor":{"x":50}}],[0.600146,{"lines":{"21":[["        bucket.Shift(current_bucket - last_update_b                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,52         15% ",{}]]},"cursor":{"x":51}}],[0.095834,{"lines":{"21":[["        bucket.Shift(current_bucket - last_update_bu                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,53         15% ",{}]]},"cursor":{"x":52}}],[0.128047,{"lines":{"21":[["        bucket.Shift(current_bucket - last_update_buc                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,54         15% ",{}]]},"cursor":{"x":53}}],[0.143958,{"lines":{"21":[["        bucket.Shift(current_bucket - last_update_buck                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,55         15% ",{}]]},"cursor":{"x":54}}],[0.111963,{"lines":{"21":[["        bucket.Shift(current_bucket - last_update_bucke                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,56         15% ",{}]]},"cursor":{"x":55}}],[0.088056,{"lines":{"21":[["        bucket.Shift(current_bucket - last_update_bucket                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,57         15% ",{}]]},"cursor":{"x":56}}],[0.963996,{"lines":{"21":[["        bucket.Shift",{}],["(",{"bg":6}],["current_bucket - last_update_bucket",{}],[")",{"bg":6}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,58         15% ",{}]]},"cursor":{"x":57}}],[0.47938,{"lines":{"21":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,59         15% ",{}]]},"cursor":{"x":58}}],[0.284577,{"lines":{"22":[["                                                                                                   ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["public",{"fg":3}],[":                                                                                            ",{}]],"26":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"27":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"28":[["        buckets(num_buckets),                                                                      ",{}]],"29":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"33":[["        Update(now);                                                                               ",{}]],"34":[["        buckets.AddToBack(count);                                                                  ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,9          15% ",{}]]},"cursor":{"x":8,"y":22}}],[0.488057,{"lines":{"22":[["        l                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,10         15% ",{}]]},"cursor":{"x":9}}],[0.071753,{"lines":{"22":[["        la                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,11         15% ",{}]]},"cursor":{"x":10}}],[0.087981,{"lines":{"22":[["        las                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,12         15% ",{}]]},"cursor":{"x":11}}],[0.136096,{"lines":{"22":[["        last                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,13         15% ",{}]]},"cursor":{"x":12}}],[0.216185,{"lines":{"22":[["        last_                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,14         15% ",{}]]},"cursor":{"x":13}}],[0.823815,{"lines":{"22":[["        last_u                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,15         15% ",{}]]},"cursor":{"x":14}}],[0.072148,{"lines":{"22":[["        last_up                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,16         15% ",{}]]},"cursor":{"x":15}}],[0.047723,{"lines":{"22":[["        last_upd                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,17         15% ",{}]]},"cursor":{"x":16}}],[0.08803,{"lines":{"22":[["        last_upda                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,18         15% ",{}]]},"cursor":{"x":17}}],[0.0801,{"lines":{"22":[["        last_updat                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,19         15% ",{}]]},"cursor":{"x":18}}],[0.039916,{"lines":{"22":[["        last_update                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,20         15% ",{}]]},"cursor":{"x":19}}],[0.288106,{"lines":{"22":[["        last_update_                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,21         15% ",{}]]},"cursor":{"x":20}}],[0.143987,{"lines":{"22":[["        last_update_t                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,22         15% ",{}]]},"cursor":{"x":21}}],[0.072051,{"lines":{"22":[["        last_update_ti                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,23         15% ",{}]]},"cursor":{"x":22}}],[0.14385,{"lines":{"22":[["        last_update_tin                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,24         15% ",{}]]},"cursor":{"x":23}}],[0.08826199999999999,{"lines":{"22":[["        last_update_tine                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,25         15% ",{}]]},"cursor":{"x":24}}],[0.623742,{"lines":{"22":[["        last_update_tin                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,24         15% ",{}]]},"cursor":{"x":23}}],[0.160032,{"lines":{"22":[["        last_update_ti                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,23         15% ",{}]]},"cursor":{"x":22}}],[0.225083,{"lines":{"22":[["        last_update_tim                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,24         15% ",{}]]},"cursor":{"x":23}}],[0.070884,{"lines":{"22":[["        last_update_time                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,25         15% ",{}]]},"cursor":{"x":24}}],[0.208101,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     29,26         15% ",{}]]},"cursor":{"x":25}}],[0.663936,{"lines":{"22":[["        last_update_time =                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,27         15% ",{}]]},"cursor":{"x":26}}],[0.096007,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     29,28         15% ",{}]]},"cursor":{"x":27}}],[0.832067,{"lines":{"22":[["        last_update_time = n                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,29         15% ",{}]]},"cursor":{"x":28}}],[0.06389300000000001,{"lines":{"22":[["        last_update_time = no                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,30         15% ",{}]]},"cursor":{"x":29}}],[0.160081,{"lines":{"22":[["        last_update_time = now                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,31         15% ",{}]]},"cursor":{"x":30}}],[0.423976,{"lines":{"22":[["        last_update_time = now;                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,32         15% ",{}]]},"cursor":{"x":31}}],[0.19286,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":30}}],[0.175124,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.135757,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.128194,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.122178,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  29,31         15% ",{}]]},"cursor":{"x":30,"y":22,"visible":true}}],[4.109633,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  28,31         15% ",{}]]},"cursor":{"y":21}}],[0.500082,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  27,0-1        15% ",{}]]},"cursor":{"x":0,"y":20}}],[1.699985,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  26,31         15% ",{}]]},"cursor":{"x":30,"y":19}}],[0.500242,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  25,31         15% ",{}]]},"cursor":{"y":18}}],[0.036889,{"lines":{"17":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                                      ",{}]],"23":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  24,29         15% ",{}]]},"cursor":{"x":28,"y":17}}],[0.028874,{"lines":{"17":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"23":[["    }                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  23,31         15% ",{}]]},"cursor":{"x":30,"y":16}}],[0.02719,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  22,0-1        15% ",{}]]},"cursor":{"x":0,"y":15}}],[0.029978,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  21,31         15% ",{}]]},"cursor":{"x":30,"y":14}}],[0.031027,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  20,30         15% ",{}]]},"cursor":{"x":29,"y":13}}],[0.030167,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  19,26         15% ",{}]]},"cursor":{"x":25,"y":12}}],[0.032561,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  18,29         15% ",{}]]},"cursor":{"x":28,"y":11}}],[0.029071,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  17,31         15% ",{}]]},"cursor":{"x":30,"y":10}}],[0.029898,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  16,0-1        15% ",{}]]},"cursor":{"x":0,"y":9}}],[0.031456,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  15,2          15% ",{}]]},"cursor":{"x":1,"y":8}}],[0.030066,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  14,19         15% ",{}]]},"cursor":{"x":18,"y":7}}],[0.031223,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  13,31         15% ",{}]]},"cursor":{"x":30,"y":6}}],[0.030166,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  12,0-1        15% ",{}]]},"cursor":{"x":0,"y":5}}],[0.034797,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" Shift",{}],["(",{"bg":6}],["int",{"fg":2}],[" num_shifted",{}],[")",{"bg":6}],[";                                                                   ",{}]],"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  11,31         15% ",{}]]},"cursor":{"x":30,"y":4}}],[0.028792,{"lines":{"4":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  10,31         15% ",{}]]},"cursor":{"y":3}}],[0.026909,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  9,31          15% ",{}]]},"cursor":{"y":2}}],[0.030595,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  8,31          15% ",{}]]},"cursor":{"y":1}}],[0.031391,{"lines":{"37":[["\"ch15_3.cpp\" 77L, 2219C written                                                  7,0-1         15% ",{}]]},"cursor":{"x":0,"y":0}}],[0.028015,{"lines":{"0":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"3":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"4":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"5":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"8":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"9":[["};                                                                                                 ",{}]],"10":[["                                                                                                   ",{}]],"11":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"12":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"13":[["    ConveyorQueue buckets;                                                                         ",{}]],"14":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"15":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"18":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"19":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"20":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"21":[["                                                                                                   ",{}]],"22":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"23":[["        last_update_time = now;                                                                    ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["public",{"fg":3}],[":                                                                                            ",{}]],"27":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"28":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"29":[["        buckets(num_buckets),                                                                      ",{}]],"30":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"34":[["        Update(now);                                                                               ",{}]],"35":[["        buckets.AddToBack(count);                                                                  ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 6,30          12% ",{}]]},"cursor":{"x":29}}],[0.036396,{"lines":{"0":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"1":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"4":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"5":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"9":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"10":[["};                                                                                                 ",{}]],"11":[["                                                                                                   ",{}]],"12":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"13":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"14":[["    ConveyorQueue buckets;                                                                         ",{}]],"15":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"16":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"20":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"21":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"22":[["                                                                                                   ",{}]],"23":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"24":[["        last_update_time = now;                                                                    ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["public",{"fg":3}],[":                                                                                            ",{}]],"28":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"29":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"30":[["        buckets(num_buckets),                                                                      ",{}]],"31":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"35":[["        Update(now);                                                                               ",{}]],"36":[["        buckets.AddToBack(count);                                                                  ",{}]],"37":[["                                                                                 5,31          10% ",{}]]},"cursor":{"x":30}}],[0.028141,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"2":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"5":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"6":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"7":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"10":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"11":[["};                                                                                                 ",{}]],"12":[["                                                                                                   ",{}]],"13":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"14":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"15":[["    ConveyorQueue buckets;                                                                         ",{}]],"16":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"17":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"18":[["                                                                                                   ",{}]],"19":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"20":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"21":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"22":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"23":[["                                                                                                   ",{}]],"24":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"25":[["        last_update_time = now;                                                                    ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["public",{"fg":3}],[":                                                                                            ",{}]],"29":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"30":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"31":[["        buckets(num_buckets),                                                                      ",{}]],"32":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"36":[["        Update(now);                                                                               ",{}]],"37":[["                                                                                 4,0-1          7% ",{}]]},"cursor":{"x":0}}],[0.032067,{"lines":{"0":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items);                                                                  ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"3":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"6":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"7":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"8":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"11":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"12":[["};                                                                                                 ",{}]],"13":[["                                                                                                   ",{}]],"14":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"15":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"16":[["    ConveyorQueue buckets;                                                                         ",{}]],"17":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"18":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"19":[["                                                                                                   ",{}]],"20":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"21":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"22":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"23":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"24":[["                                                                                                   ",{}]],"25":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"26":[["        last_update_time = now;                                                                    ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["public",{"fg":3}],[":                                                                                            ",{}]],"30":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"31":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"32":[["        buckets(num_buckets),                                                                      ",{}]],"33":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"37":[["                                                                                 3,31           5% ",{}]]},"cursor":{"x":30}}],[0.032875,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQueue ",{}],["{",{"bg":6}],["                                                                              ",{}]],"1":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items);                                                                  ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"7":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"8":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"9":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"12":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"13":[["}",{"bg":6}],[";                                                                                                 ",{}]],"14":[["                                                                                                   ",{}]],"15":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"16":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"17":[["    ConveyorQueue buckets;                                                                         ",{}]],"18":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"19":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"20":[["                                                                                                   ",{}]],"21":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"22":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"23":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"24":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"25":[["                                                                                                   ",{}]],"26":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"27":[["        last_update_time = now;                                                                    ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["public",{"fg":3}],[":                                                                                            ",{}]],"31":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"32":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"33":[["        buckets(num_buckets),                                                                      ",{}]],"34":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 2,21           2% ",{}]]},"cursor":{"x":20}}],[0.033183,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off\" the end",{"fg":4}],["                      ",{}]],"1":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items);                                                                  ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"5":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"8":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"9":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"10":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"13":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"14":[["};                                                                                                 ",{}]],"15":[["                                                                                                   ",{}]],"16":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"17":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"18":[["    ConveyorQueue buckets;                                                                         ",{}]],"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"23":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"24":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"25":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"26":[["                                                                                                   ",{}]],"27":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"28":[["        last_update_time = now;                                                                    ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["public",{"fg":3}],[":                                                                                            ",{}]],"32":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"33":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"34":[["        buckets(num_buckets),                                                                      ",{}]],"35":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 1,31          Top ",{}]]},"cursor":{"x":30}}],[0.022102,{}],[0.028692,{}],[0.030163,{}],[0.030395,{}],[0.030535,{}],[0.031505,{}],[0.030504,{}],[0.030248,{}],[0.03034,{}],[3.538525,{"lines":{"1":[["class",{"fg":2}],[" ConveyorQueue ",{}],["{",{"bg":6}],["                                                                              ",{}]],"14":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["                                                                                 2,21          Top ",{}]]},"cursor":{"x":20,"y":1}}],[0.182884,{"lines":{"1":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"14":[["};                                                                                                 ",{}]],"37":[["                                                                                 3,31          Top ",{}]]},"cursor":{"x":30,"y":2}}],[0.164224,{"lines":{"37":[["                                                                                 4,0-1         Top ",{}]]},"cursor":{"x":0,"y":3}}],[0.168434,{"lines":{"37":[["                                                                                 5,31          Top ",{}]]},"cursor":{"x":30,"y":4}}],[0.215505,{"lines":{"37":[["                                                                                 6,30          Top ",{}]]},"cursor":{"x":29,"y":5}}],[0.232142,{"lines":{"37":[["                                                                                 5,31          Top ",{}]]},"cursor":{"x":30,"y":4}}],[0.175922,{"lines":{"37":[["                                                                                 4,0-1         Top ",{}]]},"cursor":{"x":0,"y":3}}],[0.175928,{"lines":{"37":[["                                                                                 3,31          Top ",{}]]},"cursor":{"x":30,"y":2}}],[0.17321,{"lines":{"1":[["class",{"fg":2}],[" ConveyorQueue ",{}],["{",{"bg":6}],["                                                                              ",{}]],"14":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["                                                                                 2,21          Top ",{}]]},"cursor":{"x":20,"y":1}}],[2.390793,{"lines":{"1":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"14":[["};                                                                                                 ",{}]],"37":[["                                                                                 3,31          Top ",{}]]},"cursor":{"x":30,"y":2}}],[0.233045,{"lines":{"1":[["class",{"fg":2}],[" ConveyorQueue ",{}],["{",{"bg":6}],["                                                                              ",{}]],"14":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["                                                                                 2,21          Top ",{}]]},"cursor":{"x":20,"y":1}}],[0.17571,{"lines":{"1":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"14":[["};                                                                                                 ",{}]],"37":[["                                                                                 1,31          Top ",{}]]},"cursor":{"x":30,"y":0}}],[0.35228,{"lines":{"1":[["class",{"fg":2}],[" ConveyorQueue ",{}],["{",{"bg":6}],["                                                                              ",{}]],"14":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["                                                                                 2,21          Top ",{}]]},"cursor":{"x":20,"y":1}}],[1.511639,{"lines":{"1":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items);                                                                  ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"6":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"9":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"10":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"11":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"14":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"15":[["};                                                                                                 ",{}]],"16":[["                                                                                                   ",{}]],"17":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"18":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"19":[["    ConveyorQueue buckets;                                                                         ",{}]],"20":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"21":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"24":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"25":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"26":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"27":[["                                                                                                   ",{}]],"28":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"29":[["        last_update_time = now;                                                                    ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["public",{"fg":3}],[":                                                                                            ",{}]],"33":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"34":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"35":[["        buckets(num_buckets),                                                                      ",{}]],"36":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,1           Top ",{}]]},"cursor":{"x":0,"y":2}}],[1.011654,{"lines":{"2":[["p                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,2           Top ",{}]]},"cursor":{"x":1}}],[0.183962,{"lines":{"2":[["pu                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,3           Top ",{}]]},"cursor":{"x":2}}],[0.015754,{"lines":{"2":[["pub                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,4           Top ",{}]]},"cursor":{"x":3}}],[0.648282,{"lines":{"2":[["pubc                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,5           Top ",{}]]},"cursor":{"x":4}}],[0.07999100000000001,{"lines":{"2":[["pubcl                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,6           Top ",{}]]},"cursor":{"x":5}}],[0.071891,{"lines":{"2":[["pubcli                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,7           Top ",{}]]},"cursor":{"x":6}}],[0.288331,{"lines":{"2":[["pubcli",{"fg":3}],[":                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,8           Top ",{}]]},"cursor":{"x":7}}],[0.783747,{"lines":{"2":[["pubcli                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,7           Top ",{}]]},"cursor":{"x":6}}],[0.159943,{"lines":{"2":[["pubcl                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,6           Top ",{}]]},"cursor":{"x":5}}],[0.160811,{"lines":{"2":[["pubc                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,5           Top ",{}]]},"cursor":{"x":4}}],[0.591162,{"lines":{"2":[["pub                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,4           Top ",{}]]},"cursor":{"x":3}}],[0.223255,{"lines":{"2":[["publ                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,5           Top ",{}]]},"cursor":{"x":4}}],[0.06469999999999999,{"lines":{"2":[["publi                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,6           Top ",{}]]},"cursor":{"x":5}}],[0.128083,{"lines":{"2":[["public",{"fg":3}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,7           Top ",{}]]},"cursor":{"x":6}}],[0.512153,{"lines":{"2":[["public",{"fg":3}],[":                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,8           Top ",{}]]},"cursor":{"x":7}}],[0.26405,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":6}}],[0.623929,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.11137,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.16841,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.114775,{"lines":{"37":[["\"ch15_3.cpp\" 78L, 2227C written                                                  3,7           Top ",{}]]},"cursor":{"x":6,"y":2,"visible":true}}],[0.253133,{"lines":{"37":[["\"ch15_3.cpp\" 78L, 2227C written                                                  2,7           Top ",{}]]},"cursor":{"y":1}}],[0.184171,{"lines":{"2":[["                                                                                                   ",{}]],"3":[["public",{"fg":3}],[":                                                                                            ",{}]],"4":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items);                                                                  ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"7":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"10":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"11":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"15":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"16":[["};                                                                                                 ",{}]],"17":[["                                                                                                   ",{}]],"18":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"19":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"20":[["    ConveyorQueue buckets;                                                                         ",{}]],"21":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"22":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"25":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"26":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"27":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"28":[["                                                                                                   ",{}]],"29":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"30":[["        last_update_time = now;                                                                    ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["public",{"fg":3}],[":                                                                                            ",{}]],"34":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"35":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"36":[["        buckets(num_buckets),                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,1           Top ",{}]]},"cursor":{"x":0,"y":2}}],[1.128111,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     3,5           Top ",{}]]},"cursor":{"x":4}}],[0.359924,{"lines":{"2":[["    q                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,6           Top ",{}]]},"cursor":{"x":5}}],[0.111278,{"lines":{"2":[["    qu                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,7           Top ",{}]]},"cursor":{"x":6}}],[0.07271900000000001,{"lines":{"2":[["    que                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,8           Top ",{}]]},"cursor":{"x":7}}],[0.127792,{"lines":{"2":[["    queu                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,9           Top ",{}]]},"cursor":{"x":8}}],[0.039968,{"lines":{"2":[["    queue                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,10          Top ",{}]]},"cursor":{"x":9}}],[1.85597,{"lines":{"2":[["    queue<                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,11          Top ",{}]]},"cursor":{"x":10}}],[0.407418,{"lines":{"2":[["    queue<i                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,12          Top ",{}]]},"cursor":{"x":11}}],[0.072688,{"lines":{"2":[["    queue<in                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,13          Top ",{}]]},"cursor":{"x":12}}],[0.09625400000000001,{"lines":{"2":[["    queue<",{}],["int",{"fg":2}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,14          Top ",{}]]},"cursor":{"x":13}}],[0.16765,{"lines":{"2":[["    queue<",{}],["int",{"fg":2}],[">                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,15          Top ",{}]]},"cursor":{"x":14}}],[0.744255,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     3,16          Top ",{}]]},"cursor":{"x":15}}],[0.175883,{"lines":{"2":[["    queue<",{}],["int",{"fg":2}],["> q                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,17          Top ",{}]]},"cursor":{"x":16}}],[0.208071,{"lines":{"2":[["    queue<",{}],["int",{"fg":2}],["> q;                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     3,18          Top ",{}]]},"cursor":{"x":17}}],[0.319928,{"lines":{"3":[["                                                                                                   ",{}]],"4":[["public",{"fg":3}],[":                                                                                            ",{}]],"5":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items);                                                                  ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"8":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"11":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"12":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"16":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"17":[["};                                                                                                 ",{}]],"18":[["                                                                                                   ",{}]],"19":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"20":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"21":[["    ConveyorQueue buckets;                                                                         ",{}]],"22":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"23":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"26":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"27":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"28":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"29":[["                                                                                                   ",{}]],"30":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"31":[["        last_update_time = now;                                                                    ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["public",{"fg":3}],[":                                                                                            ",{}]],"35":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"36":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,5           Top ",{}]]},"cursor":{"x":4,"y":3}}],[0.384079,{"lines":{"3":[["    i                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,6           Top ",{}]]},"cursor":{"x":5}}],[0.071951,{"lines":{"3":[["    in                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,7           Top ",{}]]},"cursor":{"x":6}}],[0.128022,{"lines":{"3":[["    ",{}],["int",{"fg":2}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,8           Top ",{}]]},"cursor":{"x":7}}],[0.183944,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     4,9           Top ",{}]]},"cursor":{"x":8}}],[0.159918,{"lines":{"3":[["    ",{}],["int",{"fg":2}],[" m                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,10          Top ",{}]]},"cursor":{"x":9}}],[0.096082,{"lines":{"3":[["    ",{}],["int",{"fg":2}],[" ma                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,11          Top ",{}]]},"cursor":{"x":10}}],[0.183968,{"lines":{"3":[["    ",{}],["int",{"fg":2}],[" max                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,12          Top ",{}]]},"cursor":{"x":11}}],[0.27214,{"lines":{"3":[["    ",{}],["int",{"fg":2}],[" max_                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,13          Top ",{}]]},"cursor":{"x":12}}],[0.647849,{"lines":{"3":[["    ",{}],["int",{"fg":2}],[" max_i                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,14          Top ",{}]]},"cursor":{"x":13}}],[0.439978,{"lines":{"3":[["    ",{}],["int",{"fg":2}],[" max_                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,13          Top ",{}]]},"cursor":{"x":12}}],[0.168023,{"lines":{"3":[["    ",{}],["int",{"fg":2}],[" max                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,12          Top ",{}]]},"cursor":{"x":11}}],[0.880166,{"lines":{"3":[["    ",{}],["int",{"fg":2}],[" max_                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,13          Top ",{}]]},"cursor":{"x":12}}],[0.263933,{"lines":{"3":[["    ",{}],["int",{"fg":2}],[" max_i                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,14          Top ",{}]]},"cursor":{"x":13}}],[0.119877,{"lines":{"3":[["    ",{}],["int",{"fg":2}],[" max_it                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,15          Top ",{}]]},"cursor":{"x":14}}],[0.088408,{"lines":{"3":[["    ",{}],["int",{"fg":2}],[" max_ite                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,16          Top ",{}]]},"cursor":{"x":15}}],[0.159705,{"lines":{"3":[["    ",{}],["int",{"fg":2}],[" max_item                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,17          Top ",{}]]},"cursor":{"x":16}}],[0.136026,{"lines":{"3":[["    ",{}],["int",{"fg":2}],[" max_items                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,18          Top ",{}]]},"cursor":{"x":17}}],[0.424291,{"lines":{"3":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     4,19          Top ",{}]]},"cursor":{"x":18}}],[0.215697,{"lines":{"4":[["                                                                                                   ",{}]],"5":[["public",{"fg":3}],[":                                                                                            ",{}]],"6":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items);                                                                  ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"9":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"12":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"13":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"17":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"18":[["};                                                                                                 ",{}]],"19":[["                                                                                                   ",{}]],"20":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"21":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"22":[["    ConveyorQueue buckets;                                                                         ",{}]],"23":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"24":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"27":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"28":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"29":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"30":[["                                                                                                   ",{}]],"31":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"32":[["        last_update_time = now;                                                                    ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["public",{"fg":3}],[":                                                                                            ",{}]],"36":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,5           Top ",{}]]},"cursor":{"x":4,"y":4}}],[0.495888,{"lines":{"4":[["    i                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,6           Top ",{}]]},"cursor":{"x":5}}],[0.08007499999999999,{"lines":{"4":[["    in                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,7           Top ",{}]]},"cursor":{"x":6}}],[0.06401999999999999,{"lines":{"4":[["    ",{}],["int",{"fg":2}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,8           Top ",{}]]},"cursor":{"x":7}}],[0.06372899999999999,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     5,9           Top ",{}]]},"cursor":{"x":8}}],[0.208177,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" t                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,10          Top ",{}]]},"cursor":{"x":9}}],[0.071297,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" to                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,11          Top ",{}]]},"cursor":{"x":10}}],[0.104805,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" tot                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,12          Top ",{}]]},"cursor":{"x":11}}],[0.13588,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" totl                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,13          Top ",{}]]},"cursor":{"x":12}}],[0.448176,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" tot                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,12          Top ",{}]]},"cursor":{"x":11}}],[0.19984,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" tota                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,13          Top ",{}]]},"cursor":{"x":12}}],[0.417459,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,14          Top ",{}]]},"cursor":{"x":13}}],[0.294548,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,15          Top ",{}]]},"cursor":{"x":14}}],[0.167956,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_s                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,16          Top ",{}]]},"cursor":{"x":15}}],[0.760162,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,17          Top ",{}]]},"cursor":{"x":16}}],[0.583936,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,18          Top ",{}]]},"cursor":{"x":17}}],[0.416058,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     5,21          Top ",{}]]},"cursor":{"x":20}}],[0.279955,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   /                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,22          Top ",{}]]},"cursor":{"x":21}}],[0.144062,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["//",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,23          Top ",{}]]},"cursor":{"x":22}}],[0.096132,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// ",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,24          Top ",{}]]},"cursor":{"x":23}}],[0.223767,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// s",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,25          Top ",{}]]},"cursor":{"x":24}}],[0.120204,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// su",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,26          Top ",{}]]},"cursor":{"x":25}}],[0.151848,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,27          Top ",{}]]},"cursor":{"x":26}}],[0.17607,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum ",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,28          Top ",{}]]},"cursor":{"x":27}}],[0.39996,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum o",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,29          Top ",{}]]},"cursor":{"x":28}}],[0.087382,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,30          Top ",{}]]},"cursor":{"x":29}}],[0.08856,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of ",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,31          Top ",{}]]},"cursor":{"x":30}}],[0.568094,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of a",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,32          Top ",{}]]},"cursor":{"x":31}}],[0.07197000000000001,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of al",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,33          Top ",{}]]},"cursor":{"x":32}}],[0.152038,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,34          Top ",{}]]},"cursor":{"x":33}}],[0.087968,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all ",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,35          Top ",{}]]},"cursor":{"x":34}}],[0.520008,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all i",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,36          Top ",{}]]},"cursor":{"x":35}}],[0.063932,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all it",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,37          Top ",{}]]},"cursor":{"x":36}}],[0.088119,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all ite",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,38          Top ",{}]]},"cursor":{"x":37}}],[0.111891,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all item",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,39          Top ",{}]]},"cursor":{"x":38}}],[0.152048,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,40          Top ",{}]]},"cursor":{"x":39}}],[0.095972,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items ",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,41          Top ",{}]]},"cursor":{"x":40}}],[0.119983,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items i",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,42          Top ",{}]]},"cursor":{"x":41}}],[0.056096,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,43          Top ",{}]]},"cursor":{"x":42}}],[0.10387,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in ",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,44          Top ",{}]]},"cursor":{"x":43}}],[0.07208199999999999,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     5,45          Top ",{}]]},"cursor":{"x":44}}],[0.944712,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":43}}],[0.103284,{"lines":{"37":[["                                                                                 6,7           Top ",{}]]},"cursor":{"x":6,"y":5}}],[0.407871,{"lines":{"37":[["                                                                                 5,44          Top ",{}]]},"cursor":{"x":43,"y":4}}],[0.160021,{"lines":{"5":[["                                                                                                   ",{}]],"6":[["public",{"fg":3}],[":                                                                                            ",{}]],"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items);                                                                  ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"10":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"13":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"14":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"15":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"18":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"19":[["};                                                                                                 ",{}]],"20":[["                                                                                                   ",{}]],"21":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"22":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"23":[["    ConveyorQueue buckets;                                                                         ",{}]],"24":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"25":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"28":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"29":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"30":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"31":[["                                                                                                   ",{}]],"32":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"33":[["        last_update_time = now;                                                                    ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["public",{"fg":3}],[":                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     6,5           Top ",{}]]},"cursor":{"x":4,"y":5}}],[0.088769,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":0}}],[0.207359,{"lines":{"37":[["                                                                                 7,5           Top ",{}]]},"cursor":{"x":4,"y":6}}],[0.223746,{"lines":{"37":[["                                                                                 8,5           Top ",{}]]},"cursor":{"y":7}}],[0.65699,{"lines":{"37":[["                                                                                 8,33          Top ",{}]]},"cursor":{"x":32}}],[0.467356,{"lines":{"7":[["    ConveyorQueue",{}],["(",{"bg":6}],["int",{"fg":2}],[" max_items",{}],[")",{"bg":6}],["                                                                   ",{}]],"37":[["                                                                                 8,32          Top ",{}]]},"cursor":{"x":31}}],[0.112178,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     8,33          Top ",{}]]},"cursor":{"x":32}}],[0.167188,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items)                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,34          Top ",{}]]},"cursor":{"x":33}}],[0.308517,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) :                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,35          Top ",{}]]},"cursor":{"x":34}}],[1.656118,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     8,36          Top ",{}]]},"cursor":{"x":35}}],[0.208162,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : m                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,37          Top ",{}]]},"cursor":{"x":36}}],[0.06370099999999999,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : ma                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,38          Top ",{}]]},"cursor":{"x":37}}],[0.176025,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,39          Top ",{}]]},"cursor":{"x":38}}],[0.296059,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,40          Top ",{}]]},"cursor":{"x":39}}],[0.248026,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_i                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,41          Top ",{}]]},"cursor":{"x":40}}],[0.120149,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_it                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,42          Top ",{}]]},"cursor":{"x":41}}],[0.055786,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_ite                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,43          Top ",{}]]},"cursor":{"x":42}}],[0.519994,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_item                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,44          Top ",{}]]},"cursor":{"x":43}}],[0.160238,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,45          Top ",{}]]},"cursor":{"x":44}}],[0.380209,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,46          Top ",{}]]},"cursor":{"x":45}}],[0.243736,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(m                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,47          Top ",{}]]},"cursor":{"x":46}}],[0.06392100000000001,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(ma                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,48          Top ",{}]]},"cursor":{"x":47}}],[0.176006,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,49          Top ",{}]]},"cursor":{"x":48}}],[0.9199929999999999,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,50          Top ",{}]]},"cursor":{"x":49}}],[0.744094,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_i                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,51          Top ",{}]]},"cursor":{"x":50}}],[0.047937,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_it                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,52          Top ",{}]]},"cursor":{"x":51}}],[0.071974,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_ite                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,53          Top ",{}]]},"cursor":{"x":52}}],[0.240015,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_item                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,54          Top ",{}]]},"cursor":{"x":53}}],[0.167974,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,55          Top ",{}]]},"cursor":{"x":54}}],[0.9900640000000001,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items",{}],["(",{"bg":6}],["max_items",{}],[")",{"bg":6}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,56          Top ",{}]]},"cursor":{"x":55}}],[0.381524,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items),                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,57          Top ",{}]]},"cursor":{"x":56}}],[0.060348,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     8,58          Top ",{}]]},"cursor":{"x":57}}],[0.168029,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), t                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,59          Top ",{}]]},"cursor":{"x":58}}],[0.079996,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), to                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,60          Top ",{}]]},"cursor":{"x":59}}],[0.120006,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), tot                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,61          Top ",{}]]},"cursor":{"x":60}}],[0.213194,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), tota                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,62          Top ",{}]]},"cursor":{"x":61}}],[0.075048,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,63          Top ",{}]]},"cursor":{"x":62}}],[0.20783,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,64          Top ",{}]]},"cursor":{"x":63}}],[0.920053,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_s                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,65          Top ",{}]]},"cursor":{"x":64}}],[0.127954,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_su                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,66          Top ",{}]]},"cursor":{"x":65}}],[0.192067,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,67          Top ",{}]]},"cursor":{"x":66}}],[0.284391,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,68          Top ",{}]]},"cursor":{"x":67}}],[0.723664,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],["                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,69          Top ",{}]]},"cursor":{"x":68}}],[0.454568,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum",{}],["(",{"bg":6}],["0",{"fg":1}],[")",{"bg":6}],["                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,70          Top ",{}]]},"cursor":{"x":69}}],[0.557269,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[")                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,71          Top ",{}]]},"cursor":{"x":70}}],[0.244357,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") ",{}],["{",{"bg":6}],["                            ",{}]],"19":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     8,72          Top ",{}]]},"cursor":{"x":71}}],[0.315741,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"11":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"14":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"15":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"16":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"19":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"20":[["};                                                                                                 ",{}]],"21":[["                                                                                                   ",{}]],"22":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"23":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"24":[["    ConveyorQueue buckets;                                                                         ",{}]],"25":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"26":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"29":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"30":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"31":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"32":[["                                                                                                   ",{}]],"33":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"34":[["        last_update_time = now;                                                                    ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,5           Top ",{}]]},"cursor":{"x":4,"y":8}}],[0.347149,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") ",{}],["{",{"bg":6}],["                            ",{}]],"8":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,6           Top ",{}]]},"cursor":{"x":5}}],[0.233531,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":4}}],[0.531926,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.106987,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.232318,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.123479,{"lines":{"37":[["\"ch15_3.cpp\" 83L, 2354C written                                                  9,5           Top ",{}]]},"cursor":{"x":4,"y":8,"visible":true}}],[1.536116,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"8":[["    }                                                                                              ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"15":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"16":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"17":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"18":[["                                                                                                   ",{}]],"19":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"20":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"21":[["};                                                                                                 ",{}]],"22":[["                                                                                                   ",{}]],"23":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"24":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"25":[["    ConveyorQueue buckets;                                                                         ",{}]],"26":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"27":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"30":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"31":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"32":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"33":[["                                                                                                   ",{}]],"34":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"35":[["        last_update_time = now;                                                                    ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,5          Top ",{}]]},"cursor":{"y":9}}],[0.212188,{"lines":{"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"16":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"17":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"18":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"19":[["                                                                                                   ",{}]],"20":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"21":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"22":[["};                                                                                                 ",{}]],"23":[["                                                                                                   ",{}]],"24":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"25":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"26":[["    ConveyorQueue buckets;                                                                         ",{}]],"27":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"28":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"31":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"32":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"33":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"34":[["                                                                                                   ",{}]],"35":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"36":[["        last_update_time = now;                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,5          Top ",{}]]},"cursor":{"y":10}}],[0.727982,{"lines":{"10":[["    i                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,6          Top ",{}]]},"cursor":{"x":5}}],[0.063973,{"lines":{"10":[["    in                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,7          Top ",{}]]},"cursor":{"x":6}}],[0.06402099999999999,{"lines":{"10":[["    ",{}],["int",{"fg":2}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,8          Top ",{}]]},"cursor":{"x":7}}],[0.088089,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     11,9          Top ",{}]]},"cursor":{"x":8}}],[1.807806,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" T                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,10         Top ",{}]]},"cursor":{"x":9}}],[0.224154,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" To                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,11         Top ",{}]]},"cursor":{"x":10}}],[0.175858,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" Tot                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,12         Top ",{}]]},"cursor":{"x":11}}],[0.152015,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" Tota                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,13         Top ",{}]]},"cursor":{"x":12}}],[0.128027,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" Total                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,14         Top ",{}]]},"cursor":{"x":13}}],[0.224249,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" TotalS                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,15         Top ",{}]]},"cursor":{"x":14}}],[0.135806,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" TotalSu                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,16         Top ",{}]]},"cursor":{"x":15}}],[0.192075,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" TotalSum                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,17         Top ",{}]]},"cursor":{"x":16}}],[0.276376,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" TotalSum(                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,18         Top ",{}]]},"cursor":{"x":17}}],[0.06558,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" TotalSum",{}],["()",{"bg":6}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,19         Top ",{}]]},"cursor":{"x":18}}],[0.205933,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" TotalSum()                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,20         Top ",{}]]},"cursor":{"x":19}}],[0.355838,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" TotalSum() ",{}],["{",{"bg":6}],["                                                                               ",{}]],"22":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,21         Top ",{}]]},"cursor":{"x":20}}],[0.164268,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"17":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"18":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"20":[["                                                                                                   ",{}]],"21":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"22":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"23":[["};                                                                                                 ",{}]],"24":[["                                                                                                   ",{}]],"25":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"26":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"27":[["    ConveyorQueue buckets;                                                                         ",{}]],"28":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"29":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"32":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"33":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"34":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"35":[["                                                                                                   ",{}]],"36":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,5          Top ",{}]]},"cursor":{"x":4,"y":11}}],[0.24355,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" TotalSum() ",{}],["{",{"bg":6}],["                                                                               ",{}]],"11":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,6          Top ",{}]]},"cursor":{"x":5}}],[0.137388,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":4}}],[0.213937,{"cursor":{"visible":false}}],[0.00149,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"11":[["    }                                                                                              ",{}]],"37":[["                                                                                 11,5          Top ",{}]]},"cursor":{"y":10,"visible":true}}],[0.14371,{"lines":{"11":[["                                                                                                   ",{}]],"12":[["    }                                                                                              ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"15":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"18":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"19":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"20":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted);                                                                   ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"23":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"24":[["};                                                                                                 ",{}]],"25":[["                                                                                                   ",{}]],"26":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"27":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"28":[["    ConveyorQueue buckets;                                                                         ",{}]],"29":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"30":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"33":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"34":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"35":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,5          Top ",{}]]},"cursor":{"y":11}}],[0.135936,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     12,9          Top ",{}]]},"cursor":{"x":8}}],[0.167935,{"lines":{"11":[["        r                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,10         Top ",{}]]},"cursor":{"x":9}}],[0.056092,{"lines":{"11":[["        re                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,11         Top ",{}]]},"cursor":{"x":10}}],[0.232102,{"lines":{"11":[["        ret                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,12         Top ",{}]]},"cursor":{"x":11}}],[0.168207,{"lines":{"11":[["        retu                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,13         Top ",{}]]},"cursor":{"x":12}}],[0.143999,{"lines":{"11":[["        retur                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,14         Top ",{}]]},"cursor":{"x":13}}],[0.08770799999999999,{"lines":{"11":[["        ",{}],["return",{"fg":3}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,15         Top ",{}]]},"cursor":{"x":14}}],[0.104116,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     12,16         Top ",{}]]},"cursor":{"x":15}}],[0.2559,{"lines":{"11":[["        ",{}],["return",{"fg":3}],[" t                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,17         Top ",{}]]},"cursor":{"x":16}}],[0.087974,{"lines":{"11":[["        ",{}],["return",{"fg":3}],[" to                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,18         Top ",{}]]},"cursor":{"x":17}}],[0.09601999999999999,{"lines":{"11":[["        ",{}],["return",{"fg":3}],[" tot                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,19         Top ",{}]]},"cursor":{"x":18}}],[0.13596,{"lines":{"11":[["        ",{}],["return",{"fg":3}],[" tota                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,20         Top ",{}]]},"cursor":{"x":19}}],[0.232239,{"lines":{"11":[["        ",{}],["return",{"fg":3}],[" total                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,21         Top ",{}]]},"cursor":{"x":20}}],[0.496168,{"lines":{"11":[["        ",{}],["return",{"fg":3}],[" total_                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,22         Top ",{}]]},"cursor":{"x":21}}],[0.143585,{"lines":{"11":[["        ",{}],["return",{"fg":3}],[" total_s                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,23         Top ",{}]]},"cursor":{"x":22}}],[0.119996,{"lines":{"11":[["        ",{}],["return",{"fg":3}],[" total_su                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,24         Top ",{}]]},"cursor":{"x":23}}],[0.168112,{"lines":{"11":[["        ",{}],["return",{"fg":3}],[" total_sum                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,25         Top ",{}]]},"cursor":{"x":24}}],[0.631905,{"lines":{"11":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     12,26         Top ",{}]]},"cursor":{"x":25}}],[0.328925,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":24}}],[0.843703,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" TotalSum() ",{}],["{",{"bg":6}],["                                                                               ",{}]],"12":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 13,5          Top ",{}]]},"cursor":{"x":4,"y":12}}],[0.151113,{"lines":{"10":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"12":[["    }                                                                                              ",{}]],"37":[["                                                                                 14,0-1        Top ",{}]]},"cursor":{"x":0,"y":13}}],[0.164076,{"lines":{"37":[["                                                                                 15,25         Top ",{}]]},"cursor":{"x":24,"y":14}}],[0.44042,{"lines":{"37":[["                                                                                 16,25         Top ",{}]]},"cursor":{"y":15}}],[0.159604,{"lines":{"37":[["                                                                                 17,0-1        Top ",{}]]},"cursor":{"x":0,"y":16}}],[0.168008,{"lines":{"37":[["                                                                                 18,25         Top ",{}]]},"cursor":{"x":24,"y":17}}],[0.175952,{"lines":{"37":[["                                                                                 19,25         Top ",{}]]},"cursor":{"y":18}}],[0.160079,{"lines":{"37":[["                                                                                 20,25         Top ",{}]]},"cursor":{"y":19}}],[0.167985,{"lines":{"37":[["                                                                                 21,25         Top ",{}]]},"cursor":{"y":20}}],[0.752234,{"lines":{"37":[["                                                                                 21,32         Top ",{}]]},"cursor":{"x":31}}],[0.980451,{"lines":{"20":[["    ",{}],["void",{"fg":2}],[" Shift",{}],["(",{"bg":6}],["int",{"fg":2}],[" num_shifted",{}],[")",{"bg":6}],["                                                                    ",{}]],"37":[["                                                                                 21,31         Top ",{}]]},"cursor":{"x":30}}],[0.151882,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     21,32         Top ",{}]]},"cursor":{"x":31}}],[0.247313,{"lines":{"20":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted)                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,33         Top ",{}]]},"cursor":{"x":32}}],[0.498503,{"lines":{"20":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) ",{}],["{",{"bg":6}],["                                                                  ",{}]],"24":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     21,34         Top ",{}]]},"cursor":{"x":33}}],[0.757762,{"lines":{"20":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"24":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"25":[["};                                                                                                 ",{}]],"26":[["                                                                                                   ",{}]],"27":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"28":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"29":[["    ConveyorQueue buckets;                                                                         ",{}]],"30":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"31":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"34":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"35":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"36":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,5          Top ",{}]]},"cursor":{"x":4,"y":21}}],[0.297904,{"lines":{"20":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) ",{}],["{",{"bg":6}],["                                                                  ",{}]],"21":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,6          Top ",{}]]},"cursor":{"x":5}}],[0.029639,{"lines":{"20":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"21":[["    }|                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,7          Top ",{}]]},"cursor":{"x":6}}],[0.204924,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":5}}],[0.591412,{"lines":{"37":[["                                                                                 22,6          Top ",{}]]}}],[0.140799,{"lines":{"20":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) ",{}],["{",{"bg":6}],["                                                                  ",{}]],"21":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 22,5          Top ",{}]]},"cursor":{"x":4}}],[1.01893,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.079917,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.09642100000000001,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.591834,{"lines":{"20":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"21":[["    }                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 88L, 2415C written                                                  21,5          Top ",{}]]},"cursor":{"x":4,"y":20,"visible":true}}],[1.440343,{"lines":{"21":[["                                                                                                   ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"25":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"26":[["};                                                                                                 ",{}]],"27":[["                                                                                                   ",{}]],"28":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"29":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"30":[["    ConveyorQueue buckets;                                                                         ",{}]],"31":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"32":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"35":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"36":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,5          Top ",{}]]},"cursor":{"y":21}}],[0.207155,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     22,9          Top ",{}]]},"cursor":{"x":8}}],[0.298224,{"lines":{"21":[["        /                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,10         Top ",{}]]},"cursor":{"x":9}}],[0.158513,{"lines":{"21":[["        ",{}],["//",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,11         Top ",{}]]},"cursor":{"x":10}}],[0.087959,{"lines":{"21":[["        ",{}],["// ",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,12         Top ",{}]]},"cursor":{"x":11}}],[0.479966,{"lines":{"21":[["        ",{}],["// i",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,13         Top ",{}]]},"cursor":{"x":12}}],[0.08006199999999999,{"lines":{"21":[["        ",{}],["// in",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,14         Top ",{}]]},"cursor":{"x":13}}],[0.09606099999999999,{"lines":{"21":[["        ",{}],["// in ",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,15         Top ",{}]]},"cursor":{"x":14}}],[0.15193,{"lines":{"21":[["        ",{}],["// in c",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,16         Top ",{}]]},"cursor":{"x":15}}],[0.063918,{"lines":{"21":[["        ",{}],["// in ca",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,17         Top ",{}]]},"cursor":{"x":16}}],[0.112176,{"lines":{"21":[["        ",{}],["// in cas",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,18         Top ",{}]]},"cursor":{"x":17}}],[0.104094,{"lines":{"21":[["        ",{}],["// in case",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,19         Top ",{}]]},"cursor":{"x":18}}],[0.112292,{"lines":{"21":[["        ",{}],["// in case ",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,20         Top ",{}]]},"cursor":{"x":19}}],[2.159615,{"lines":{"21":[["        ",{}],["// in case t",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,21         Top ",{}]]},"cursor":{"x":20}}],[0.12804,{"lines":{"21":[["        ",{}],["// in case to",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,22         Top ",{}]]},"cursor":{"x":21}}],[0.159868,{"lines":{"21":[["        ",{}],["// in case too",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,23         Top ",{}]]},"cursor":{"x":22}}],[0.120545,{"lines":{"21":[["        ",{}],["// in case too ",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,24         Top ",{}]]},"cursor":{"x":23}}],[0.199545,{"lines":{"21":[["        ",{}],["// in case too m",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,25         Top ",{}]]},"cursor":{"x":24}}],[0.119269,{"lines":{"21":[["        ",{}],["// in case too ma",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,26         Top ",{}]]},"cursor":{"x":25}}],[0.088712,{"lines":{"21":[["        ",{}],["// in case too man",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,27         Top ",{}]]},"cursor":{"x":26}}],[0.168018,{"lines":{"21":[["        ",{}],["// in case too many",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,28         Top ",{}]]},"cursor":{"x":27}}],[0.119904,{"lines":{"21":[["        ",{}],["// in case too many ",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,29         Top ",{}]]},"cursor":{"x":28}}],[0.152012,{"lines":{"21":[["        ",{}],["// in case too many i",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,30         Top ",{}]]},"cursor":{"x":29}}],[0.080072,{"lines":{"21":[["        ",{}],["// in case too many it",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,31         Top ",{}]]},"cursor":{"x":30}}],[0.06410100000000001,{"lines":{"21":[["        ",{}],["// in case too many ite",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,32         Top ",{}]]},"cursor":{"x":31}}],[0.136051,{"lines":{"21":[["        ",{}],["// in case too many item",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,33         Top ",{}]]},"cursor":{"x":32}}],[0.127694,{"lines":{"21":[["        ",{}],["// in case too many items",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,34         Top ",{}]]},"cursor":{"x":33}}],[0.120117,{"lines":{"21":[["        ",{}],["// in case too many items ",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,35         Top ",{}]]},"cursor":{"x":34}}],[0.216053,{"lines":{"21":[["        ",{}],["// in case too many items h",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,36         Top ",{}]]},"cursor":{"x":35}}],[0.039817,{"lines":{"21":[["        ",{}],["// in case too many items hi",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,37         Top ",{}]]},"cursor":{"x":36}}],[0.06407499999999999,{"lines":{"21":[["        ",{}],["// in case too many items his",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,38         Top ",{}]]},"cursor":{"x":37}}],[0.112116,{"lines":{"21":[["        ",{}],["// in case too many items hisf",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,39         Top ",{}]]},"cursor":{"x":38}}],[0.16796,{"lines":{"21":[["        ",{}],["// in case too many items hisft",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,40         Top ",{}]]},"cursor":{"x":39}}],[0.088064,{"lines":{"21":[["        ",{}],["// in case too many items hisfte",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,41         Top ",{}]]},"cursor":{"x":40}}],[0.18386,{"lines":{"21":[["        ",{}],["// in case too many items hisfted",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,42         Top ",{}]]},"cursor":{"x":41}}],[0.144066,{"lines":{"21":[["        ",{}],["// in case too many items hisfted,",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,43         Top ",{}]]},"cursor":{"x":42}}],[0.079986,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, ",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,44         Top ",{}]]},"cursor":{"x":43}}],[0.168153,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, j",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,45         Top ",{}]]},"cursor":{"x":44}}],[0.167873,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, ju",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,46         Top ",{}]]},"cursor":{"x":45}}],[0.120032,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, jus",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,47         Top ",{}]]},"cursor":{"x":46}}],[0.07198400000000001,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,48         Top ",{}]]},"cursor":{"x":47}}],[0.071899,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just ",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,49         Top ",{}]]},"cursor":{"x":48}}],[0.176062,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just c",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,50         Top ",{}]]},"cursor":{"x":49}}],[0.08012,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just cl",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,51         Top ",{}]]},"cursor":{"x":50}}],[0.079863,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just cle",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,52         Top ",{}]]},"cursor":{"x":51}}],[0.080304,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just clea",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,53         Top ",{}]]},"cursor":{"x":52}}],[0.09580900000000001,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just clear",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,54         Top ",{}]]},"cursor":{"x":53}}],[0.079898,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just clear ",{"fg":4}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,55         Top ",{}]]},"cursor":{"x":54}}],[0.320081,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just clear t",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,56         Top ",{}]]},"cursor":{"x":55}}],[0.151926,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just clear th",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,57         Top ",{}]]},"cursor":{"x":56}}],[0.087987,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just clear the",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,58         Top ",{}]]},"cursor":{"x":57}}],[0.104092,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just clear the ",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,59         Top ",{}]]},"cursor":{"x":58}}],[0.16798,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just clear the q",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,60         Top ",{}]]},"cursor":{"x":59}}],[0.12001,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just clear the qu",{"fg":4}],["                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,61         Top ",{}]]},"cursor":{"x":60}}],[0.040045,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just clear the que",{"fg":4}],["                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,62         Top ",{}]]},"cursor":{"x":61}}],[0.176312,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just clear the queu",{"fg":4}],["                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,63         Top ",{}]]},"cursor":{"x":62}}],[0.055566,{"lines":{"21":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     22,64         Top ",{}]]},"cursor":{"x":63}}],[0.415283,{"lines":{"22":[["                                                                                                   ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"26":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"27":[["};                                                                                                 ",{}]],"28":[["                                                                                                   ",{}]],"29":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"30":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"31":[["    ConveyorQueue buckets;                                                                         ",{}]],"32":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"33":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"36":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,9          Top ",{}]]},"cursor":{"x":8,"y":22}}],[0.528702,{"lines":{"22":[["        i                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,10         Top ",{}]]},"cursor":{"x":9}}],[0.09588099999999999,{"lines":{"22":[["        ",{}],["if",{"fg":3}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,11         Top ",{}]]},"cursor":{"x":10}}],[0.089297,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     23,12         Top ",{}]]},"cursor":{"x":11}}],[0.304475,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,13         Top ",{}]]},"cursor":{"x":12}}],[0.278423,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (n                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,14         Top ",{}]]},"cursor":{"x":13}}],[0.176026,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (nu                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,15         Top ",{}]]},"cursor":{"x":14}}],[0.175977,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,16         Top ",{}]]},"cursor":{"x":15}}],[0.272002,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,17         Top ",{}]]},"cursor":{"x":16}}],[0.191977,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_s                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,18         Top ",{}]]},"cursor":{"x":17}}],[0.063261,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_sh                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,19         Top ",{}]]},"cursor":{"x":18}}],[0.07272099999999999,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shi                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,20         Top ",{}]]},"cursor":{"x":19}}],[0.120022,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shif                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,21         Top ",{}]]},"cursor":{"x":20}}],[0.168013,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shift                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,22         Top ",{}]]},"cursor":{"x":21}}],[0.087949,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifte                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,23         Top ",{}]]},"cursor":{"x":22}}],[0.248065,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,24         Top ",{}]]},"cursor":{"x":23}}],[0.631386,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     23,25         Top ",{}]]},"cursor":{"x":24}}],[0.712635,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,26         Top ",{}]]},"cursor":{"x":25}}],[0.279994,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >=                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,27         Top ",{}]]},"cursor":{"x":26}}],[0.111924,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     23,28         Top ",{}]]},"cursor":{"x":27}}],[0.600451,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= m                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,29         Top ",{}]]},"cursor":{"x":28}}],[0.143543,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= ma                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,30         Top ",{}]]},"cursor":{"x":29}}],[0.17612,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,31         Top ",{}]]},"cursor":{"x":30}}],[0.407941,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,32         Top ",{}]]},"cursor":{"x":31}}],[0.248737,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_i                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,33         Top ",{}]]},"cursor":{"x":32}}],[0.111265,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_it                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,34         Top ",{}]]},"cursor":{"x":33}}],[0.07190199999999999,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_ite                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,35         Top ",{}]]},"cursor":{"x":34}}],[0.248137,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_item                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,36         Top ",{}]]},"cursor":{"x":35}}],[0.175986,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,37         Top ",{}]]},"cursor":{"x":36}}],[0.81266,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" ",{}],["(",{"bg":6}],["num_shifted >= max_items",{}],[")",{"bg":6}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,38         Top ",{}]]},"cursor":{"x":37}}],[0.231109,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items)                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,39         Top ",{}]]},"cursor":{"x":38}}],[0.266059,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) ",{}],["{",{"bg":6}],["                                                            ",{}]],"23":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     23,40         Top ",{}]]},"cursor":{"x":39}}],[0.181805,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"27":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"28":[["};                                                                                                 ",{}]],"29":[["                                                                                                   ",{}]],"30":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"31":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"32":[["    ConveyorQueue buckets;                                                                         ",{}]],"33":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"34":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,9          Top ",{}]]},"cursor":{"x":8,"y":23}}],[0.266061,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) ",{}],["{",{"bg":6}],["                                                            ",{}]],"23":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,10         Top ",{}]]},"cursor":{"x":9}}],[0.178888,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":8}}],[0.5101020000000001,{"cursor":{"visible":false}}],[0.001575,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"23":[["        }                                                                                          ",{}]],"37":[["                                                                                 23,9          Top ",{}]]},"cursor":{"y":22,"visible":true}}],[0.199834,{"lines":{"23":[["                                                                                                   ",{}]],"24":[["        }                                                                                          ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"28":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"29":[["};                                                                                                 ",{}]],"30":[["                                                                                                   ",{}]],"31":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"32":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"33":[["    ConveyorQueue buckets;                                                                         ",{}]],"34":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"35":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,9          Top ",{}]]},"cursor":{"y":23}}],[0.184172,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     24,13         Top ",{}]]},"cursor":{"x":12}}],[0.351684,{"lines":{"23":[["            q                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,14         Top ",{}]]},"cursor":{"x":13}}],[0.296003,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     24,15         Top ",{}]]},"cursor":{"x":14}}],[0.119677,{"lines":{"23":[["            q =                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,16         Top ",{}]]},"cursor":{"x":15}}],[0.104202,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     24,17         Top ",{}]]},"cursor":{"x":16}}],[0.208031,{"lines":{"23":[["            q = q                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,18         Top ",{}]]},"cursor":{"x":17}}],[0.120994,{"lines":{"23":[["            q = qu                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,19         Top ",{}]]},"cursor":{"x":18}}],[0.063012,{"lines":{"23":[["            q = que                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,20         Top ",{}]]},"cursor":{"x":19}}],[0.183984,{"lines":{"23":[["            q = quee                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,21         Top ",{}]]},"cursor":{"x":20}}],[0.416444,{"lines":{"23":[["            q = que                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,20         Top ",{}]]},"cursor":{"x":19}}],[0.167548,{"lines":{"23":[["            q = qu                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,19         Top ",{}]]},"cursor":{"x":18}}],[0.184156,{"lines":{"23":[["            q = q                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,18         Top ",{}]]},"cursor":{"x":17}}],[0.159816,{"lines":{"23":[["            q =                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,17         Top ",{}]]},"cursor":{"x":16}}],[0.243564,{"lines":{"23":[["            q = q                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,18         Top ",{}]]},"cursor":{"x":17}}],[0.204425,{"lines":{"23":[["            q = qu                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,19         Top ",{}]]},"cursor":{"x":18}}],[0.17604,{"lines":{"23":[["            q = que                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,20         Top ",{}]]},"cursor":{"x":19}}],[0.143978,{"lines":{"23":[["            q = queu                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,21         Top ",{}]]},"cursor":{"x":20}}],[0.159971,{"lines":{"23":[["            q = queue                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,22         Top ",{}]]},"cursor":{"x":21}}],[0.431838,{"lines":{"23":[["            q = queue<                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,23         Top ",{}]]},"cursor":{"x":22}}],[0.336291,{"lines":{"23":[["            q = queue<i                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,24         Top ",{}]]},"cursor":{"x":23}}],[0.063927,{"lines":{"23":[["            q = queue<in                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,25         Top ",{}]]},"cursor":{"x":24}}],[0.128059,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,26         Top ",{}]]},"cursor":{"x":25}}],[0.176072,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,27         Top ",{}]]},"cursor":{"x":26}}],[1.368978,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,28         Top ",{}]]},"cursor":{"x":27}}],[0.058838,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">",{}],["()",{"bg":6}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,29         Top ",{}]]},"cursor":{"x":28}}],[0.536738,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">();                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,30         Top ",{}]]},"cursor":{"x":29}}],[0.1474,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     24,31         Top ",{}]]},"cursor":{"x":30}}],[0.216096,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); /                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,32         Top ",{}]]},"cursor":{"x":31}}],[0.15192,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["//",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,33         Top ",{}]]},"cursor":{"x":32}}],[0.080126,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// ",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,34         Top ",{}]]},"cursor":{"x":33}}],[0.144046,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// c",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,35         Top ",{}]]},"cursor":{"x":34}}],[0.111883,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// cl",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,36         Top ",{}]]},"cursor":{"x":35}}],[0.079989,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// cle",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,37         Top ",{}]]},"cursor":{"x":36}}],[0.06407499999999999,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clea",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,38         Top ",{}]]},"cursor":{"x":37}}],[0.136016,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,39         Top ",{}]]},"cursor":{"x":38}}],[0.096035,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear ",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,40         Top ",{}]]},"cursor":{"x":39}}],[0.359932,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear q",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,41         Top ",{}]]},"cursor":{"x":40}}],[0.09532400000000001,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear qu",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,42         Top ",{}]]},"cursor":{"x":41}}],[0.08054699999999999,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear que",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,43         Top ",{}]]},"cursor":{"x":42}}],[0.104075,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queu",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,44         Top ",{}]]},"cursor":{"x":43}}],[0.064067,{"lines":{"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     24,45         Top ",{}]]},"cursor":{"x":44}}],[1.024262,{"lines":{"24":[["                                                                                                   ",{}]],"25":[["        }                                                                                          ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"29":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"30":[["};                                                                                                 ",{}]],"31":[["                                                                                                   ",{}]],"32":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"33":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"34":[["    ConveyorQueue buckets;                                                                         ",{}]],"35":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"36":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,13         Top ",{}]]},"cursor":{"x":12,"y":24}}],[0.391487,{"lines":{"24":[["            t                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,14         Top ",{}]]},"cursor":{"x":13}}],[0.080025,{"lines":{"24":[["            to                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,15         Top ",{}]]},"cursor":{"x":14}}],[0.08806899999999999,{"lines":{"24":[["            tot                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,16         Top ",{}]]},"cursor":{"x":15}}],[0.151992,{"lines":{"24":[["            totl                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,17         Top ",{}]]},"cursor":{"x":16}}],[0.456032,{"lines":{"24":[["            tot                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,16         Top ",{}]]},"cursor":{"x":15}}],[0.19196,{"lines":{"24":[["            tota                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,17         Top ",{}]]},"cursor":{"x":16}}],[0.120013,{"lines":{"24":[["            total                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,18         Top ",{}]]},"cursor":{"x":17}}],[0.239998,{"lines":{"24":[["            total_                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,19         Top ",{}]]},"cursor":{"x":18}}],[0.200028,{"lines":{"24":[["            total_s                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,20         Top ",{}]]},"cursor":{"x":19}}],[0.07997700000000001,{"lines":{"24":[["            total_su                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,21         Top ",{}]]},"cursor":{"x":20}}],[0.175917,{"lines":{"24":[["            total_sum                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,22         Top ",{}]]},"cursor":{"x":21}}],[0.184001,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     25,23         Top ",{}]]},"cursor":{"x":22}}],[0.231974,{"lines":{"24":[["            total_sum =                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,24         Top ",{}]]},"cursor":{"x":23}}],[0.120248,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     25,25         Top ",{}]]},"cursor":{"x":24}}],[0.111868,{"lines":{"24":[["            total_sum = ",{}],["0",{"fg":1}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,26         Top ",{}]]},"cursor":{"x":25}}],[1.001175,{"lines":{"24":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     25,27         Top ",{}]]},"cursor":{"x":26}}],[0.198981,{"lines":{"25":[["                                                                                                   ",{}]],"26":[["        }                                                                                          ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"30":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"31":[["};                                                                                                 ",{}]],"32":[["                                                                                                   ",{}]],"33":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"34":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"35":[["    ConveyorQueue buckets;                                                                         ",{}]],"36":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,13         Top ",{}]]},"cursor":{"x":12,"y":25}}],[0.247932,{"lines":{"25":[["            r                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,14         Top ",{}]]},"cursor":{"x":13}}],[0.047853,{"lines":{"25":[["            re                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,15         Top ",{}]]},"cursor":{"x":14}}],[0.144077,{"lines":{"25":[["            ret                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,16         Top ",{}]]},"cursor":{"x":15}}],[0.056102,{"lines":{"25":[["            retu                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,17         Top ",{}]]},"cursor":{"x":16}}],[0.1121,{"lines":{"25":[["            retur                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,18         Top ",{}]]},"cursor":{"x":17}}],[0.07180599999999999,{"lines":{"25":[["            ",{}],["return",{"fg":3}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,19         Top ",{}]]},"cursor":{"x":18}}],[0.215976,{"lines":{"25":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     26,20         Top ",{}]]},"cursor":{"x":19}}],[0.160622,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":18}}],[0.65998,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) ",{}],["{",{"bg":6}],["                                                            ",{}]],"26":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["                                                                                 27,9          Top ",{}]]},"cursor":{"x":8,"y":26}}],[0.495,{"lines":{"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"26":[["        }                                                                                          ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"31":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"32":[["};                                                                                                 ",{}]],"33":[["                                                                                                   ",{}]],"34":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"35":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"36":[["    ConveyorQueue buckets;                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     28,9          Top ",{}]]},"cursor":{"y":27}}],[0.236411,{"lines":{"28":[["                                                                                                   ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"32":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"33":[["};                                                                                                 ",{}]],"34":[["                                                                                                   ",{}]],"35":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"36":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,9          Top ",{}]]},"cursor":{"y":28}}],[1.287228,{"lines":{"28":[["        w                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,10         Top ",{}]]},"cursor":{"x":9}}],[0.080708,{"lines":{"28":[["        wh                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,11         Top ",{}]]},"cursor":{"x":10}}],[0.06389,{"lines":{"28":[["        whi                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,12         Top ",{}]]},"cursor":{"x":11}}],[0.048247,{"lines":{"28":[["        whil                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,13         Top ",{}]]},"cursor":{"x":12}}],[0.879993,{"lines":{"28":[["        whi                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,12         Top ",{}]]},"cursor":{"x":11}}],[0.143858,{"lines":{"28":[["        wh                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,11         Top ",{}]]},"cursor":{"x":10}}],[0.168015,{"lines":{"28":[["        w                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,10         Top ",{}]]},"cursor":{"x":9}}],[0.143986,{"lines":{"28":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,9          Top ",{}]]},"cursor":{"x":8}}],[0.376039,{"lines":{"28":[["        /                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,10         Top ",{}]]},"cursor":{"x":9}}],[0.152008,{"lines":{"28":[["        ",{}],["//",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,11         Top ",{}]]},"cursor":{"x":10}}],[0.11192,{"lines":{"28":[["        ",{}],["// ",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,12         Top ",{}]]},"cursor":{"x":11}}],[0.27957,{"lines":{"28":[["        ",{}],["// P",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,13         Top ",{}]]},"cursor":{"x":12}}],[0.208572,{"lines":{"28":[["        ",{}],["// Pu",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,14         Top ",{}]]},"cursor":{"x":13}}],[0.376069,{"lines":{"28":[["        ",{}],["// Pus",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,15         Top ",{}]]},"cursor":{"x":14}}],[0.095887,{"lines":{"28":[["        ",{}],["// Push",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,16         Top ",{}]]},"cursor":{"x":15}}],[0.111726,{"lines":{"28":[["        ",{}],["// Push ",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,17         Top ",{}]]},"cursor":{"x":16}}],[0.13624,{"lines":{"28":[["        ",{}],["// Push a",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,18         Top ",{}]]},"cursor":{"x":17}}],[0.071451,{"lines":{"28":[["        ",{}],["// Push al",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,19         Top ",{}]]},"cursor":{"x":18}}],[0.160632,{"lines":{"28":[["        ",{}],["// Push all",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,20         Top ",{}]]},"cursor":{"x":19}}],[0.119961,{"lines":{"28":[["        ",{}],["// Push all ",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,21         Top ",{}]]},"cursor":{"x":20}}],[0.152036,{"lines":{"28":[["        ",{}],["// Push all t",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,22         Top ",{}]]},"cursor":{"x":21}}],[0.12797,{"lines":{"28":[["        ",{}],["// Push all th",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,23         Top ",{}]]},"cursor":{"x":22}}],[0.159941,{"lines":{"28":[["        ",{}],["// Push all the",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,24         Top ",{}]]},"cursor":{"x":23}}],[0.128011,{"lines":{"28":[["        ",{}],["// Push all the ",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,25         Top ",{}]]},"cursor":{"x":24}}],[0.25606,{"lines":{"28":[["        ",{}],["// Push all the n",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,26         Top ",{}]]},"cursor":{"x":25}}],[0.127979,{"lines":{"28":[["        ",{}],["// Push all the ne",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,27         Top ",{}]]},"cursor":{"x":26}}],[0.159961,{"lines":{"28":[["        ",{}],["// Push all the nee",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,28         Top ",{}]]},"cursor":{"x":27}}],[0.192172,{"lines":{"28":[["        ",{}],["// Push all the need",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,29         Top ",{}]]},"cursor":{"x":28}}],[0.151896,{"lines":{"28":[["        ",{}],["// Push all the neede",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,30         Top ",{}]]},"cursor":{"x":29}}],[0.144172,{"lines":{"28":[["        ",{}],["// Push all the needed",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,31         Top ",{}]]},"cursor":{"x":30}}],[0.087741,{"lines":{"28":[["        ",{}],["// Push all the needed ",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,32         Top ",{}]]},"cursor":{"x":31}}],[0.176402,{"lines":{"28":[["        ",{}],["// Push all the needed z",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,33         Top ",{}]]},"cursor":{"x":32}}],[0.167721,{"lines":{"28":[["        ",{}],["// Push all the needed ze",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,34         Top ",{}]]},"cursor":{"x":33}}],[0.143931,{"lines":{"28":[["        ",{}],["// Push all the needed zer",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,35         Top ",{}]]},"cursor":{"x":34}}],[0.128035,{"lines":{"28":[["        ",{}],["// Push all the needed zero",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,36         Top ",{}]]},"cursor":{"x":35}}],[0.104143,{"lines":{"28":[["        ",{}],["// Push all the needed zeros",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,37         Top ",{}]]},"cursor":{"x":36}}],[0.200174,{"lines":{"28":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     29,38         Top ",{}]]},"cursor":{"x":37}}],[0.583823,{"lines":{"29":[["                                                                                                   ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"33":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"34":[["};                                                                                                 ",{}]],"35":[["                                                                                                   ",{}]],"36":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,9          Top ",{}]]},"cursor":{"x":8,"y":29}}],[0.263778,{"lines":{"29":[["        w                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,10         Top ",{}]]},"cursor":{"x":9}}],[0.119943,{"lines":{"29":[["        wh                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,11         Top ",{}]]},"cursor":{"x":10}}],[0.072085,{"lines":{"29":[["        whi                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,12         Top ",{}]]},"cursor":{"x":11}}],[0.032142,{"lines":{"29":[["        whil                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,13         Top ",{}]]},"cursor":{"x":12}}],[0.08755599999999999,{"lines":{"29":[["        ",{}],["while",{"fg":3}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,14         Top ",{}]]},"cursor":{"x":13}}],[0.176266,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     30,15         Top ",{}]]},"cursor":{"x":14}}],[0.272826,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,16         Top ",{}]]},"cursor":{"x":15}}],[0.255258,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (n                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,17         Top ",{}]]},"cursor":{"x":16}}],[0.16019,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (nu                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,18         Top ",{}]]},"cursor":{"x":17}}],[0.175855,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,19         Top ",{}]]},"cursor":{"x":18}}],[0.311988,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,20         Top ",{}]]},"cursor":{"x":19}}],[0.216026,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_s                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,21         Top ",{}]]},"cursor":{"x":20}}],[0.07990999999999999,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_sh                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,22         Top ",{}]]},"cursor":{"x":21}}],[0.055975,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_shi                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,23         Top ",{}]]},"cursor":{"x":22}}],[0.087976,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_shif                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,24         Top ",{}]]},"cursor":{"x":23}}],[0.176307,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_shift                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,25         Top ",{}]]},"cursor":{"x":24}}],[0.087752,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_shifte                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,26         Top ",{}]]},"cursor":{"x":25}}],[0.184242,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_shifted                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,27         Top ",{}]]},"cursor":{"x":26}}],[0.111984,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     30,28         Top ",{}]]},"cursor":{"x":27}}],[0.399755,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_shifted >                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,29         Top ",{}]]},"cursor":{"x":28}}],[0.160069,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     30,30         Top ",{}]]},"cursor":{"x":29}}],[0.176021,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,31         Top ",{}]]},"cursor":{"x":30}}],[0.260788,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" ",{}],["(",{"bg":6}],["num_shifted > ",{}],["0",{"fg":1}],[")",{"bg":6}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,32         Top ",{}]]},"cursor":{"x":31}}],[0.574945,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[")                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,33         Top ",{}]]},"cursor":{"x":32}}],[0.241483,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") ",{}],["{",{"bg":6}],["                                                                  ",{}]],"30":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     30,34         Top ",{}]]},"cursor":{"x":33}}],[0.198677,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"35":[["};                                                                                                 ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,9          Top ",{}]]},"cursor":{"x":8,"y":30}}],[0.28884,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") ",{}],["{",{"bg":6}],["                                                                  ",{}]],"30":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,10         Top ",{}]]},"cursor":{"x":9}}],[0.23583,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":8}}],[0.238147,{"cursor":{"visible":false}}],[0.001394,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"30":[["        }                                                                                          ",{}]],"37":[["                                                                                 30,9          Top ",{}]]},"cursor":{"y":29,"visible":true}}],[0.143823,{"lines":{"30":[["                                                                                                   ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"35":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,9          Top ",{}]]},"cursor":{"y":30}}],[0.136107,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     31,13         Top ",{}]]},"cursor":{"x":12}}],[0.39984,{"lines":{"30":[["            q                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,14         Top ",{}]]},"cursor":{"x":13}}],[0.183883,{"lines":{"30":[["            q.                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,15         Top ",{}]]},"cursor":{"x":14}}],[0.328126,{"lines":{"30":[["            q.p                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,16         Top ",{}]]},"cursor":{"x":15}}],[0.08029600000000001,{"lines":{"30":[["            q.pu                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,17         Top ",{}]]},"cursor":{"x":16}}],[0.143619,{"lines":{"30":[["            q.pus                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,18         Top ",{}]]},"cursor":{"x":17}}],[0.064031,{"lines":{"30":[["            q.push                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,19         Top ",{}]]},"cursor":{"x":18}}],[0.353735,{"lines":{"30":[["            q.push(                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,20         Top ",{}]]},"cursor":{"x":19}}],[0.6780659999999999,{"lines":{"30":[["            q.push(",{}],["0",{"fg":1}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,21         Top ",{}]]},"cursor":{"x":20}}],[0.190745,{"lines":{"30":[["            q.push",{}],["(",{"bg":6}],["0",{"fg":1}],[")",{"bg":6}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,22         Top ",{}]]},"cursor":{"x":21}}],[0.541481,{"lines":{"30":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     31,23         Top ",{}]]},"cursor":{"x":22}}],[0.204161,{"lines":{"31":[["                                                                                                   ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"36":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,13         Top ",{}]]},"cursor":{"x":12,"y":31}}],[0.367454,{"lines":{"31":[["            n                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,14         Top ",{}]]},"cursor":{"x":13}}],[0.167915,{"lines":{"31":[["            nu                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,15         Top ",{}]]},"cursor":{"x":14}}],[0.176229,{"lines":{"31":[["            num                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,16         Top ",{}]]},"cursor":{"x":15}}],[0.200223,{"lines":{"31":[["            num_                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,17         Top ",{}]]},"cursor":{"x":16}}],[0.21615,{"lines":{"31":[["            num_s                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,18         Top ",{}]]},"cursor":{"x":17}}],[0.127923,{"lines":{"31":[["            num_sh                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,19         Top ",{}]]},"cursor":{"x":18}}],[0.015879,{"lines":{"31":[["            num_shi                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,20         Top ",{}]]},"cursor":{"x":19}}],[0.15212,{"lines":{"31":[["            num_shif                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,21         Top ",{}]]},"cursor":{"x":20}}],[0.183968,{"lines":{"31":[["            num_shift                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,22         Top ",{}]]},"cursor":{"x":21}}],[0.128067,{"lines":{"31":[["            num_shifte                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,23         Top ",{}]]},"cursor":{"x":22}}],[0.183927,{"lines":{"31":[["            num_shifted                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,24         Top ",{}]]},"cursor":{"x":23}}],[0.688148,{"lines":{"31":[["            num_shifted-                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,25         Top ",{}]]},"cursor":{"x":24}}],[0.167911,{"lines":{"31":[["            num_shifted--                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,26         Top ",{}]]},"cursor":{"x":25}}],[0.528008,{"lines":{"31":[["            num_shifted--;                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,27         Top ",{}]]},"cursor":{"x":26}}],[0.208563,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":25}}],[0.419448,{"cursor":{"visible":false}}],[0.000816,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") ",{}],["{",{"bg":6}],["                                                                  ",{}]],"32":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["                                                                                 33,9          Top ",{}]]},"cursor":{"x":8,"y":32,"visible":true}}],[0.294873,{"lines":{"29":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     34,9          Top ",{}]]},"cursor":{"y":33}}],[0.324511,{"lines":{"34":[["                                                                                                   ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,9          Top ",{}]]},"cursor":{"y":34}}],[0.151903,{"lines":{"35":[["                                                                                                   ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,9          Top ",{}]]},"cursor":{"y":35}}],[0.903795,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     36,5          Top ",{}]]},"cursor":{"x":4}}],[0.208048,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     36,1          Top ",{}]]},"cursor":{"x":0}}],[0.200035,{"lines":{"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,1          Top ",{}]]},"cursor":{"y":34}}],[0.40794,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     35,5          Top ",{}]]},"cursor":{"x":4}}],[0.207982,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     35,9          Top ",{}]]},"cursor":{"x":8}}],[0.320191,{"lines":{"34":[["        /                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,10         Top ",{}]]},"cursor":{"x":9}}],[0.135823,{"lines":{"34":[["        ",{}],["//",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,11         Top ",{}]]},"cursor":{"x":10}}],[0.09657200000000001,{"lines":{"34":[["        ",{}],["// ",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,12         Top ",{}]]},"cursor":{"x":11}}],[0.407542,{"lines":{"34":[["        ",{}],["// L",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,13         Top ",{}]]},"cursor":{"x":12}}],[0.127942,{"lines":{"34":[["        ",{}],["// Le",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,14         Top ",{}]]},"cursor":{"x":13}}],[0.096069,{"lines":{"34":[["        ",{}],["// Let",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,15         Top ",{}]]},"cursor":{"x":14}}],[0.376163,{"lines":{"34":[["        ",{}],["// Let ",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,16         Top ",{}]]},"cursor":{"x":15}}],[0.304966,{"lines":{"34":[["        ",{}],["// Let a",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,17         Top ",{}]]},"cursor":{"x":16}}],[0.142764,{"lines":{"34":[["        ",{}],["// Let al",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,18         Top ",{}]]},"cursor":{"x":17}}],[0.14409,{"lines":{"34":[["        ",{}],["// Let all",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,19         Top ",{}]]},"cursor":{"x":18}}],[0.079946,{"lines":{"34":[["        ",{}],["// Let all ",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,20         Top ",{}]]},"cursor":{"x":19}}],[0.135852,{"lines":{"34":[["        ",{}],["// Let all t",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,21         Top ",{}]]},"cursor":{"x":20}}],[0.10402,{"lines":{"34":[["        ",{}],["// Let all th",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,22         Top ",{}]]},"cursor":{"x":21}}],[0.104025,{"lines":{"34":[["        ",{}],["// Let all the",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,23         Top ",{}]]},"cursor":{"x":22}}],[0.120068,{"lines":{"34":[["        ",{}],["// Let all the ",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,24         Top ",{}]]},"cursor":{"x":23}}],[0.144143,{"lines":{"34":[["        ",{}],["// Let all the e",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,25         Top ",{}]]},"cursor":{"x":24}}],[0.231848,{"lines":{"34":[["        ",{}],["// Let all the ex",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,26         Top ",{}]]},"cursor":{"x":25}}],[0.280291,{"lines":{"34":[["        ",{}],["// Let all the exc",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,27         Top ",{}]]},"cursor":{"x":26}}],[0.191755,{"lines":{"34":[["        ",{}],["// Let all the exce",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,28         Top ",{}]]},"cursor":{"x":27}}],[0.176007,{"lines":{"34":[["        ",{}],["// Let all the exces",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,29         Top ",{}]]},"cursor":{"x":28}}],[0.136303,{"lines":{"34":[["        ",{}],["// Let all the excess",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,30         Top ",{}]]},"cursor":{"x":29}}],[0.111659,{"lines":{"34":[["        ",{}],["// Let all the excess ",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,31         Top ",{}]]},"cursor":{"x":30}}],[0.216041,{"lines":{"34":[["        ",{}],["// Let all the excess i",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,32         Top ",{}]]},"cursor":{"x":31}}],[0.158668,{"lines":{"34":[["        ",{}],["// Let all the excess it",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,33         Top ",{}]]},"cursor":{"x":32}}],[0.000675,{"lines":{"34":[["        ",{}],["// Let all the excess ite",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,34         Top ",{}]]},"cursor":{"x":33}}],[0.168878,{"lines":{"34":[["        ",{}],["// Let all the excess item",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,35         Top ",{}]]},"cursor":{"x":34}}],[0.151731,{"lines":{"34":[["        ",{}],["// Let all the excess items",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,36         Top ",{}]]},"cursor":{"x":35}}],[0.119915,{"lines":{"34":[["        ",{}],["// Let all the excess items ",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,37         Top ",{}]]},"cursor":{"x":36}}],[0.16817,{"lines":{"34":[["        ",{}],["// Let all the excess items f",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,38         Top ",{}]]},"cursor":{"x":37}}],[0.119961,{"lines":{"34":[["        ",{}],["// Let all the excess items fa",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,39         Top ",{}]]},"cursor":{"x":38}}],[0.096025,{"lines":{"34":[["        ",{}],["// Let all the excess items fal",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,40         Top ",{}]]},"cursor":{"x":39}}],[0.159992,{"lines":{"34":[["        ",{}],["// Let all the excess items fall",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,41         Top ",{}]]},"cursor":{"x":40}}],[0.111873,{"lines":{"34":[["        ",{}],["// Let all the excess items fall ",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,42         Top ",{}]]},"cursor":{"x":41}}],[0.24779,{"lines":{"34":[["        ",{}],["// Let all the excess items fall o",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,43         Top ",{}]]},"cursor":{"x":42}}],[0.11225,{"lines":{"34":[["        ",{}],["// Let all the excess items fall of",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,44         Top ",{}]]},"cursor":{"x":43}}],[0.168057,{"lines":{"34":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     35,45         Top ",{}]]},"cursor":{"x":44}}],[0.7283269999999999,{"lines":{"35":[["                                                                                                   ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,9          Top ",{}]]},"cursor":{"x":8,"y":35}}],[0.320558,{"lines":{"35":[["        w                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,10         Top ",{}]]},"cursor":{"x":9}}],[0.126995,{"lines":{"35":[["        wh                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,11         Top ",{}]]},"cursor":{"x":10}}],[0.048011,{"lines":{"35":[["        whi                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,12         Top ",{}]]},"cursor":{"x":11}}],[0.04813,{"lines":{"35":[["        whil                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,13         Top ",{}]]},"cursor":{"x":12}}],[0.055966,{"lines":{"35":[["        ",{}],["while",{"fg":3}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,14         Top ",{}]]},"cursor":{"x":13}}],[0.103883,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     36,15         Top ",{}]]},"cursor":{"x":14}}],[0.272563,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,16         Top ",{}]]},"cursor":{"x":15}}],[0.183556,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,17         Top ",{}]]},"cursor":{"x":16}}],[0.136043,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,18         Top ",{}]]},"cursor":{"x":17}}],[0.215933,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.s                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,19         Top ",{}]]},"cursor":{"x":18}}],[0.104127,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.si                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,20         Top ",{}]]},"cursor":{"x":19}}],[0.112144,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.siz                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,21         Top ",{}]]},"cursor":{"x":20}}],[0.095682,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,22         Top ",{}]]},"cursor":{"x":21}}],[0.336717,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size(                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,23         Top ",{}]]},"cursor":{"x":22}}],[0.052354,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size",{}],["()",{"bg":6}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,24         Top ",{}]]},"cursor":{"x":23}}],[0.678951,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size()                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,25         Top ",{}]]},"cursor":{"x":24}}],[0.476142,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,26         Top ",{}]]},"cursor":{"x":25}}],[0.416032,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >=                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,27         Top ",{}]]},"cursor":{"x":26}}],[0.144026,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     36,28         Top ",{}]]},"cursor":{"x":27}}],[0.23199,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= m                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,29         Top ",{}]]},"cursor":{"x":28}}],[0.07996499999999999,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= ma                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,30         Top ",{}]]},"cursor":{"x":29}}],[0.127939,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,31         Top ",{}]]},"cursor":{"x":30}}],[0.272129,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,32         Top ",{}]]},"cursor":{"x":31}}],[0.455996,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_i                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,33         Top ",{}]]},"cursor":{"x":32}}],[0.087988,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_it                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,34         Top ",{}]]},"cursor":{"x":33}}],[0.087932,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_ite                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,35         Top ",{}]]},"cursor":{"x":34}}],[0.159981,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_item                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,36         Top ",{}]]},"cursor":{"x":35}}],[0.128003,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,37         Top ",{}]]},"cursor":{"x":36}}],[0.829436,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" ",{}],["(",{"bg":6}],["q.size() >= max_items",{}],[")",{"bg":6}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,38         Top ",{}]]},"cursor":{"x":37}}],[0.214456,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items)                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,39         Top ",{}]]},"cursor":{"x":38}}],[0.240985,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) ",{}],["{",{"bg":6}],["                                                            ",{}]],"36":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     36,40         Top ",{}]]},"cursor":{"x":39}}],[0.199094,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,9          Top ",{}]]},"cursor":{"x":8,"y":36}}],[0.224708,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) ",{}],["{",{"bg":6}],["                                                            ",{}]],"36":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,10         Top ",{}]]},"cursor":{"x":9}}],[0.139855,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":8}}],[0.430182,{"cursor":{"visible":false}}],[0.001916,{"lines":{"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"36":[["        }                                                                                          ",{}]],"37":[["                                                                                 36,9          Top ",{}]]},"cursor":{"y":35,"visible":true}}],[0.151226,{"lines":{"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,9          Top ",{}]]},"cursor":{"y":36}}],[0.575952,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     37,13         Top ",{}]]},"cursor":{"x":12}}],[0.223975,{"lines":{"36":[["            t                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,14         Top ",{}]]},"cursor":{"x":13}}],[0.09599299999999999,{"lines":{"36":[["            to                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,15         Top ",{}]]},"cursor":{"x":14}}],[0.103983,{"lines":{"36":[["            tot                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,16         Top ",{}]]},"cursor":{"x":15}}],[0.151841,{"lines":{"36":[["            tota                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,17         Top ",{}]]},"cursor":{"x":16}}],[0.216166,{"lines":{"36":[["            total                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,18         Top ",{}]]},"cursor":{"x":17}}],[0.120157,{"lines":{"36":[["            totals                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,19         Top ",{}]]},"cursor":{"x":18}}],[1.032189,{"lines":{"36":[["            total                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,18         Top ",{}]]},"cursor":{"x":17}}],[0.359195,{"lines":{"36":[["            total_                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,19         Top ",{}]]},"cursor":{"x":18}}],[0.160461,{"lines":{"36":[["            total_s                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,20         Top ",{}]]},"cursor":{"x":19}}],[0.120122,{"lines":{"36":[["            total_su                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,21         Top ",{}]]},"cursor":{"x":20}}],[0.168018,{"lines":{"36":[["            total_sum                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,22         Top ",{}]]},"cursor":{"x":21}}],[0.368063,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     37,23         Top ",{}]]},"cursor":{"x":22}}],[0.968019,{"lines":{"36":[["            total_sum -                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,24         Top ",{}]]},"cursor":{"x":23}}],[0.032091,{"lines":{"36":[["            total_sum -=                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,25         Top ",{}]]},"cursor":{"x":24}}],[0.127797,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     37,26         Top ",{}]]},"cursor":{"x":25}}],[0.352048,{"lines":{"36":[["            total_sum -= q                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,27         Top ",{}]]},"cursor":{"x":26}}],[0.351977,{"lines":{"36":[["            total_sum -= q.                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,28         Top ",{}]]},"cursor":{"x":27}}],[0.167882,{"lines":{"36":[["            total_sum -= q.f                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,29         Top ",{}]]},"cursor":{"x":28}}],[0.160006,{"lines":{"36":[["            total_sum -= q.fr                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,30         Top ",{}]]},"cursor":{"x":29}}],[0.064107,{"lines":{"36":[["            total_sum -= q.fro                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,31         Top ",{}]]},"cursor":{"x":30}}],[0.079969,{"lines":{"36":[["            total_sum -= q.fron                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,32         Top ",{}]]},"cursor":{"x":31}}],[0.072008,{"lines":{"36":[["            total_sum -= q.front                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,33         Top ",{}]]},"cursor":{"x":32}}],[0.232507,{"lines":{"36":[["            total_sum -= q.front(                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,34         Top ",{}]]},"cursor":{"x":33}}],[0.060562,{"lines":{"36":[["            total_sum -= q.front",{}],["()",{"bg":6}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,35         Top ",{}]]},"cursor":{"x":34}}],[0.703207,{"lines":{"36":[["            total_sum -= q.front();                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,36         Top ",{}]]},"cursor":{"x":35}}],[0.731909,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"1":[["    queue<",{}],["int",{"fg":2}],["> q;                                                                                  ",{}]],"2":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"3":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"4":[["                                                                                                   ",{}]],"5":[["public",{"fg":3}],[":                                                                                            ",{}]],"6":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"7":[["    }                                                                                              ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"10":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"11":[["    }                                                                                              ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"17":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"18":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"20":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"21":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"22":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"23":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"24":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"25":[["        }                                                                                          ",{}]],"26":[["                                                                                                   ",{}]],"27":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"28":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"29":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"30":[["            num_shifted--;                                                                         ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["                                                                                                   ",{}]],"33":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"34":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"35":[["            total_sum -= q.front();                                                                ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     38,13          1% ",{}]]},"cursor":{"x":12}}],[0.767694,{"lines":{"36":[["            q                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     38,14          1% ",{}]]},"cursor":{"x":13}}],[0.128045,{"lines":{"36":[["            q.                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     38,15          1% ",{}]]},"cursor":{"x":14}}],[0.29569,{"lines":{"36":[["            q.p                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     38,16          1% ",{}]]},"cursor":{"x":15}}],[0.5523979999999999,{"lines":{"36":[["            q.po                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     38,17          1% ",{}]]},"cursor":{"x":16}}],[0.240033,{"lines":{"36":[["            q.pop                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     38,18          1% ",{}]]},"cursor":{"x":17}}],[0.592319,{"lines":{"36":[["            q.pop(                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     38,19          1% ",{}]]},"cursor":{"x":18}}],[0.028411,{"lines":{"36":[["            q.pop",{}],["()",{"bg":6}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     38,20          1% ",{}]]},"cursor":{"x":19}}],[0.727374,{"lines":{"36":[["            q.pop();                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     38,21          1% ",{}]]},"cursor":{"x":20}}],[0.492579,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":19}}],[0.837255,{"lines":{"0":[["    queue<",{}],["int",{"fg":2}],["> q;                                                                                  ",{}]],"1":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"2":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"3":[["                                                                                                   ",{}]],"4":[["public",{"fg":3}],[":                                                                                            ",{}]],"5":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"6":[["    }                                                                                              ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"9":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"10":[["    }                                                                                              ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"16":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"17":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"18":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"19":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"20":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"21":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"22":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"23":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"24":[["        }                                                                                          ",{}]],"25":[["                                                                                                   ",{}]],"26":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"27":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"28":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"29":[["            num_shifted--;                                                                         ",{}]],"30":[["        }                                                                                          ",{}]],"31":[["                                                                                                   ",{}]],"32":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"33":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) ",{}],["{",{"bg":6}],["                                                            ",{}]],"34":[["            total_sum -= q.front();                                                                ",{}]],"35":[["            q.pop();                                                                               ",{}]],"36":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["                                                                                 39,9           2% ",{}]]},"cursor":{"x":8}}],[0.168064,{"lines":{"0":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"1":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"2":[["                                                                                                   ",{}]],"3":[["public",{"fg":3}],[":                                                                                            ",{}]],"4":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"5":[["    }                                                                                              ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"8":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"15":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"16":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"17":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) ",{}],["{",{"bg":6}],["                                                                  ",{}]],"18":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"19":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"20":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"21":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"22":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"23":[["        }                                                                                          ",{}]],"24":[["                                                                                                   ",{}]],"25":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"26":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"27":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"28":[["            num_shifted--;                                                                         ",{}]],"29":[["        }                                                                                          ",{}]],"30":[["                                                                                                   ",{}]],"31":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"32":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"33":[["            total_sum -= q.front();                                                                ",{}]],"34":[["            q.pop();                                                                               ",{}]],"35":[["        }                                                                                          ",{}]],"36":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 40,5           4% ",{}]]},"cursor":{"x":4}}],[0.141787,{"lines":{"0":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"1":[["                                                                                                   ",{}]],"2":[["public",{"fg":3}],[":                                                                                            ",{}]],"3":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"4":[["    }                                                                                              ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"7":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"11":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"14":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"15":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"16":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"17":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"18":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"19":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"20":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"21":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"22":[["        }                                                                                          ",{}]],"23":[["                                                                                                   ",{}]],"24":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"25":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"26":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"27":[["            num_shifted--;                                                                         ",{}]],"28":[["        }                                                                                          ",{}]],"29":[["                                                                                                   ",{}]],"30":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"31":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"32":[["            total_sum -= q.front();                                                                ",{}]],"33":[["            q.pop();                                                                               ",{}]],"34":[["        }                                                                                          ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 41,0-1         5% ",{}]]},"cursor":{"x":0}}],[0.140157,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["public",{"fg":3}],[":                                                                                            ",{}]],"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"3":[["    }                                                                                              ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"6":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"7":[["    }                                                                                              ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"10":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"13":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"14":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"15":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"16":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"17":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"18":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"19":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"20":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"21":[["        }                                                                                          ",{}]],"22":[["                                                                                                   ",{}]],"23":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"24":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"25":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"26":[["            num_shifted--;                                                                         ",{}]],"27":[["        }                                                                                          ",{}]],"28":[["                                                                                                   ",{}]],"29":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"30":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"31":[["            total_sum -= q.front();                                                                ",{}]],"32":[["            q.pop();                                                                               ",{}]],"33":[["        }                                                                                          ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"37":[["                                                                                 42,20          7% ",{}]]},"cursor":{"x":19}}],[0.159942,{"lines":{"0":[["public",{"fg":3}],[":                                                                                            ",{}]],"1":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"2":[["    }                                                                                              ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"5":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"6":[["    }                                                                                              ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"9":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"12":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"13":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"15":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"16":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"17":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"18":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"19":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"20":[["        }                                                                                          ",{}]],"21":[["                                                                                                   ",{}]],"22":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"23":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"24":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"25":[["            num_shifted--;                                                                         ",{}]],"26":[["        }                                                                                          ",{}]],"27":[["                                                                                                   ",{}]],"28":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"29":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"30":[["            total_sum -= q.front();                                                                ",{}]],"31":[["            q.pop();                                                                               ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"36":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"37":[["                                                                                 43,19          8% ",{}]]},"cursor":{"x":18}}],[0.143942,{"lines":{"0":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"1":[["    }                                                                                              ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"4":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"5":[["    }                                                                                              ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"8":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"11":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"12":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"14":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"15":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"16":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"17":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"18":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"19":[["        }                                                                                          ",{}]],"20":[["                                                                                                   ",{}]],"21":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"22":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"23":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"24":[["            num_shifted--;                                                                         ",{}]],"25":[["        }                                                                                          ",{}]],"26":[["                                                                                                   ",{}]],"27":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"28":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"29":[["            total_sum -= q.front();                                                                ",{}]],"30":[["            q.pop();                                                                               ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"35":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["                                                                                 44,2          10% ",{}]]},"cursor":{"x":1}}],[0.143997,{"lines":{"0":[["    }                                                                                              ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"3":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"4":[["    }                                                                                              ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"7":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"10":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"11":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"13":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"14":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"15":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"16":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"17":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"18":[["        }                                                                                          ",{}]],"19":[["                                                                                                   ",{}]],"20":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"21":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"22":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"23":[["            num_shifted--;                                                                         ",{}]],"24":[["        }                                                                                          ",{}]],"25":[["                                                                                                   ",{}]],"26":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"27":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"28":[["            total_sum -= q.front();                                                                ",{}]],"29":[["            q.pop();                                                                               ",{}]],"30":[["        }                                                                                          ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"35":[["};                                                                                                 ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 45,0-1        11% ",{}]]},"cursor":{"x":0}}],[0.152128,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"2":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"3":[["    }                                                                                              ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"6":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"9":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"10":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"11":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"12":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"13":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"14":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"15":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"16":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"17":[["        }                                                                                          ",{}]],"18":[["                                                                                                   ",{}]],"19":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"20":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"21":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"22":[["            num_shifted--;                                                                         ",{}]],"23":[["        }                                                                                          ",{}]],"24":[["                                                                                                   ",{}]],"25":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"26":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"27":[["            total_sum -= q.front();                                                                ",{}]],"28":[["            q.pop();                                                                               ",{}]],"29":[["        }                                                                                          ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"33":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"34":[["};                                                                                                 ",{}]],"35":[["                                                                                                   ",{}]],"36":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"37":[["                                                                                 46,20         13% ",{}]]},"cursor":{"x":19}}],[0.160089,{"lines":{"0":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"1":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"2":[["    }                                                                                              ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"5":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"8":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"9":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"10":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"11":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"12":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"13":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"14":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"15":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"16":[["        }                                                                                          ",{}]],"17":[["                                                                                                   ",{}]],"18":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"19":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"20":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"21":[["            num_shifted--;                                                                         ",{}]],"22":[["        }                                                                                          ",{}]],"23":[["                                                                                                   ",{}]],"24":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"25":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"26":[["            total_sum -= q.front();                                                                ",{}]],"27":[["            q.pop();                                                                               ",{}]],"28":[["        }                                                                                          ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"32":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"33":[["};                                                                                                 ",{}]],"34":[["                                                                                                   ",{}]],"35":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"36":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"37":[["                                                                                 47,20         14% ",{}]]}}],[0.136056,{"lines":{"0":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"1":[["    }                                                                                              ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"7":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"8":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"9":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"10":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"11":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"12":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"13":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"14":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"15":[["        }                                                                                          ",{}]],"16":[["                                                                                                   ",{}]],"17":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"18":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"19":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"20":[["            num_shifted--;                                                                         ",{}]],"21":[["        }                                                                                          ",{}]],"22":[["                                                                                                   ",{}]],"23":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"24":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"25":[["            total_sum -= q.front();                                                                ",{}]],"26":[["            q.pop();                                                                               ",{}]],"27":[["        }                                                                                          ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"31":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"32":[["};                                                                                                 ",{}]],"33":[["                                                                                                   ",{}]],"34":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"35":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"36":[["    ConveyorQueue buckets;                                                                         ",{}]],"37":[["                                                                                 48,20         15% ",{}]]}}],[0.151873,{"lines":{"0":[["    }                                                                                              ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"3":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count);                                                                     ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"6":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"7":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"8":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"9":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"10":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"11":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"12":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"13":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"14":[["        }                                                                                          ",{}]],"15":[["                                                                                                   ",{}]],"16":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"17":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"18":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"19":[["            num_shifted--;                                                                         ",{}]],"20":[["        }                                                                                          ",{}]],"21":[["                                                                                                   ",{}]],"22":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"23":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"24":[["            total_sum -= q.front();                                                                ",{}]],"25":[["            q.pop();                                                                               ",{}]],"26":[["        }                                                                                          ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"30":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"31":[["};                                                                                                 ",{}]],"32":[["                                                                                                   ",{}]],"33":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"34":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"35":[["    ConveyorQueue buckets;                                                                         ",{}]],"36":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"37":[["                                                                                 49,20         17% ",{}]]}}],[0.927991,{"lines":{"37":[["                                                                                 48,20         17% ",{}]]},"cursor":{"y":35}}],[0.167898,{"lines":{"37":[["                                                                                 47,20         17% ",{}]]},"cursor":{"y":34}}],[0.159967,{"lines":{"37":[["                                                                                 46,20         17% ",{}]]},"cursor":{"y":33}}],[0.500084,{"lines":{"37":[["                                                                                 45,0-1        17% ",{}]]},"cursor":{"x":0,"y":32}}],[0.03121,{"lines":{"37":[["                                                                                 44,2          17% ",{}]]},"cursor":{"x":1,"y":31}}],[0.030699,{"lines":{"37":[["                                                                                 43,19         17% ",{}]]},"cursor":{"x":18,"y":30}}],[0.03145,{"lines":{"37":[["                                                                                 42,20         17% ",{}]]},"cursor":{"x":19,"y":29}}],[0.029668,{"lines":{"37":[["                                                                                 41,0-1        17% ",{}]]},"cursor":{"x":0,"y":28}}],[0.03684,{"lines":{"8":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) ",{}],["{",{"bg":6}],["                                                                  ",{}]],"27":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 40,5          17% ",{}]]},"cursor":{"x":4,"y":27}}],[0.029834,{"lines":{"8":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"23":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) ",{}],["{",{"bg":6}],["                                                            ",{}]],"26":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"27":[["    }                                                                                              ",{}]],"37":[["                                                                                 39,9          17% ",{}]]},"cursor":{"x":8,"y":26}}],[0.029715,{"lines":{"23":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"26":[["        }                                                                                          ",{}]],"37":[["                                                                                 38,20         17% ",{}]]},"cursor":{"x":19,"y":25}}],[0.026638,{"lines":{"37":[["                                                                                 37,20         17% ",{}]]},"cursor":{"y":24}}],[0.030932,{"lines":{"37":[["                                                                                 36,20         17% ",{}]]},"cursor":{"y":23}}],[0.030621,{"lines":{"37":[["                                                                                 35,20         17% ",{}]]},"cursor":{"y":22}}],[0.030413,{"lines":{"37":[["                                                                                 34,0-1        17% ",{}]]},"cursor":{"x":0,"y":21}}],[0.035491,{"lines":{"17":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") ",{}],["{",{"bg":6}],["                                                                  ",{}]],"20":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["                                                                                 33,9          17% ",{}]]},"cursor":{"x":8,"y":20}}],[0.029581,{"lines":{"17":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"20":[["        }                                                                                          ",{}]],"37":[["                                                                                 32,20         17% ",{}]]},"cursor":{"x":19,"y":19}}],[0.027338,{"lines":{"37":[["                                                                                 31,20         17% ",{}]]},"cursor":{"y":18}}],[0.028219,{"lines":{"37":[["                                                                                 30,20         17% ",{}]]},"cursor":{"y":17}}],[0.031174,{"lines":{"37":[["                                                                                 29,20         17% ",{}]]},"cursor":{"y":16}}],[0.030778,{"lines":{"37":[["                                                                                 28,0-1        17% ",{}]]},"cursor":{"x":0,"y":15}}],[0.035717,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) ",{}],["{",{"bg":6}],["                                                            ",{}]],"14":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["                                                                                 27,9          17% ",{}]]},"cursor":{"x":8,"y":14}}],[0.030518,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"14":[["        }                                                                                          ",{}]],"37":[["                                                                                 26,19         17% ",{}]]},"cursor":{"x":18,"y":13}}],[0.026309,{"lines":{"37":[["                                                                                 25,20         17% ",{}]]},"cursor":{"x":19,"y":12}}],[0.029326,{"lines":{"37":[["                                                                                 24,20         17% ",{}]]},"cursor":{"y":11}}],[0.030331,{"lines":{"37":[["                                                                                 23,20         17% ",{}]]},"cursor":{"y":10}}],[0.031141,{"lines":{"37":[["                                                                                 22,20         17% ",{}]]},"cursor":{"y":9}}],[0.03117,{"lines":{"37":[["                                                                                 21,20         17% ",{}]]},"cursor":{"y":8}}],[0.029837,{"lines":{"37":[["                                                                                 20,20         17% ",{}]]},"cursor":{"y":7}}],[0.028709,{"lines":{"37":[["                                                                                 19,20         17% ",{}]]},"cursor":{"y":6}}],[0.030197,{"lines":{"37":[["                                                                                 18,20         17% ",{}]]},"cursor":{"y":5}}],[0.029857,{"lines":{"37":[["                                                                                 17,0-1        17% ",{}]]},"cursor":{"x":0,"y":4}}],[0.35021,{"lines":{"37":[["                                                                                 16,20         17% ",{}]]},"cursor":{"x":19,"y":3}}],[0.615945,{"lines":{"37":[["                                                                                 16,30         17% ",{}]]},"cursor":{"x":29}}],[0.36469,{"lines":{"3":[["    ",{}],["void",{"fg":2}],[" AddToBack",{}],["(",{"bg":6}],["int",{"fg":2}],[" count",{}],[")",{"bg":6}],["                                                                      ",{}]],"37":[["                                                                                 16,29         17% ",{}]]},"cursor":{"x":28}}],[0.351989,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     16,30         17% ",{}]]},"cursor":{"x":29}}],[0.47145,{"lines":{"3":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count)                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     16,31         17% ",{}]]},"cursor":{"x":30}}],[0.253773,{"lines":{"3":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                    ",{}]],"31":[["}",{"bg":6}],[";                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     16,32         17% ",{}]]},"cursor":{"x":31}}],[0.15406,{"lines":{"3":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"7":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"8":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"9":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"10":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"11":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"12":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"13":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"14":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"15":[["        }                                                                                          ",{}]],"16":[["                                                                                                   ",{}]],"17":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"18":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"19":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"20":[["            num_shifted--;                                                                         ",{}]],"21":[["        }                                                                                          ",{}]],"22":[["                                                                                                   ",{}]],"23":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"24":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"25":[["            total_sum -= q.front();                                                                ",{}]],"26":[["            q.pop();                                                                               ",{}]],"27":[["        }                                                                                          ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"31":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"32":[["};                                                                                                 ",{}]],"33":[["                                                                                                   ",{}]],"34":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"35":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"36":[["    ConveyorQueue buckets;                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,5          17% ",{}]]},"cursor":{"x":4,"y":4}}],[0.257991,{"lines":{"3":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                    ",{}]],"4":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,6          17% ",{}]]},"cursor":{"x":5}}],[0.123161,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":4}}],[0.365913,{"cursor":{"visible":false}}],[0.000975,{"lines":{"3":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"4":[["    }                                                                                              ",{}]],"37":[["                                                                                 16,5          17% ",{}]]},"cursor":{"y":3,"visible":true}}],[0.168231,{"lines":{"4":[["                                                                                                   ",{}]],"5":[["    }                                                                                              ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"8":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"9":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"10":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"11":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"12":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"13":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"14":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"15":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"16":[["        }                                                                                          ",{}]],"17":[["                                                                                                   ",{}]],"18":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"19":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"20":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"21":[["            num_shifted--;                                                                         ",{}]],"22":[["        }                                                                                          ",{}]],"23":[["                                                                                                   ",{}]],"24":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"25":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"26":[["            total_sum -= q.front();                                                                ",{}]],"27":[["            q.pop();                                                                               ",{}]],"28":[["        }                                                                                          ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"32":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"33":[["};                                                                                                 ",{}]],"34":[["                                                                                                   ",{}]],"35":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"36":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,5          16% ",{}]]},"cursor":{"y":4}}],[1.152055,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     17,9          16% ",{}]]},"cursor":{"x":8}}],[0.239889,{"lines":{"4":[["        i                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,10         16% ",{}]]},"cursor":{"x":9}}],[0.080026,{"lines":{"4":[["        ",{}],["if",{"fg":3}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,11         16% ",{}]]},"cursor":{"x":10}}],[0.096096,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     17,12         16% ",{}]]},"cursor":{"x":11}}],[0.24306,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,13         16% ",{}]]},"cursor":{"x":12}}],[0.172986,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,14         16% ",{}]]},"cursor":{"x":13}}],[0.103925,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,15         16% ",{}]]},"cursor":{"x":14}}],[0.207997,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.e                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,16         16% ",{}]]},"cursor":{"x":15}}],[0.128963,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.em                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,17         16% ",{}]]},"cursor":{"x":16}}],[0.150994,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.emp                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,18         16% ",{}]]},"cursor":{"x":17}}],[0.18394,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empt                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,19         16% ",{}]]},"cursor":{"x":18}}],[0.09605900000000001,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,20         16% ",{}]]},"cursor":{"x":19}}],[1.835224,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty(                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,21         16% ",{}]]},"cursor":{"x":20}}],[0.049698,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty",{}],["()",{"bg":6}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,22         16% ",{}]]},"cursor":{"x":21}}],[0.248379,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" ",{}],["(",{"bg":6}],["q.empty()",{}],[")",{"bg":6}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,23         16% ",{}]]},"cursor":{"x":22}}],[0.318596,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty())                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,24         16% ",{}]]},"cursor":{"x":23}}],[0.812404,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) S                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,25         16% ",{}]]},"cursor":{"x":24}}],[0.175788,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Sh                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,26         16% ",{}]]},"cursor":{"x":25}}],[0.056172,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shi                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,27         16% ",{}]]},"cursor":{"x":26}}],[0.143976,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shif                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,28         16% ",{}]]},"cursor":{"x":27}}],[0.167857,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,29         16% ",{}]]},"cursor":{"x":28}}],[0.275416,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,30         16% ",{}]]},"cursor":{"x":29}}],[0.180768,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,31         16% ",{}]]},"cursor":{"x":30}}],[0.34221,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift",{}],["(",{"bg":6}],["1",{"fg":1}],[")",{"bg":6}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,32         16% ",{}]]},"cursor":{"x":31}}],[0.017201,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[")(                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,33         16% ",{}]]},"cursor":{"x":32}}],[1.141733,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift",{}],["(",{"bg":6}],["1",{"fg":1}],[")",{"bg":6}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,32         16% ",{}]]},"cursor":{"x":31}}],[0.359139,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,33         16% ",{}]]},"cursor":{"x":32}}],[0.12373,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     17,34         16% ",{}]]},"cursor":{"x":33}}],[0.44803,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     17,33         16% ",{}]]},"cursor":{"x":32}}],[0.856048,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     17,37         16% ",{}]]},"cursor":{"x":36}}],[0.423881,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    /                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,38         16% ",{}]]},"cursor":{"x":37}}],[0.14423,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["//",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,39         16% ",{}]]},"cursor":{"x":38}}],[0.26381,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// ",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,40         16% ",{}]]},"cursor":{"x":39}}],[0.687945,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// M",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,41         16% ",{}]]},"cursor":{"x":40}}],[0.184074,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Ma",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,42         16% ",{}]]},"cursor":{"x":41}}],[0.143924,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Mak",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,43         16% ",{}]]},"cursor":{"x":42}}],[0.088119,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,44         16% ",{}]]},"cursor":{"x":43}}],[0.07191500000000001,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make ",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,45         16% ",{}]]},"cursor":{"x":44}}],[0.176064,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make s",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,46         16% ",{}]]},"cursor":{"x":45}}],[0.079884,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make su",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,47         16% ",{}]]},"cursor":{"x":46}}],[0.072008,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sur",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,48         16% ",{}]]},"cursor":{"x":47}}],[0.064042,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,49         16% ",{}]]},"cursor":{"x":48}}],[0.080077,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure ",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,50         16% ",{}]]},"cursor":{"x":49}}],[0.224067,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,51         16% ",{}]]},"cursor":{"x":50}}],[0.399979,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q ",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,52         16% ",{}]]},"cursor":{"x":51}}],[0.519925,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q h",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,53         16% ",{}]]},"cursor":{"x":52}}],[0.152126,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q ha",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,54         16% ",{}]]},"cursor":{"x":53}}],[0.176126,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has",{"fg":4}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,55         16% ",{}]]},"cursor":{"x":54}}],[0.199787,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has ",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,56         16% ",{}]]},"cursor":{"x":55}}],[0.296238,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has a",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,57         16% ",{}]]},"cursor":{"x":56}}],[0.127865,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,58         16% ",{}]]},"cursor":{"x":57}}],[0.11993,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at ",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,59         16% ",{}]]},"cursor":{"x":58}}],[0.215945,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at l",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,60         16% ",{}]]},"cursor":{"x":59}}],[0.142035,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at le",{"fg":4}],["                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,61         16% ",{}]]},"cursor":{"x":60}}],[0.058558,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at lea",{"fg":4}],["                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,62         16% ",{}]]},"cursor":{"x":61}}],[0.087351,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at leas",{"fg":4}],["                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,63         16% ",{}]]},"cursor":{"x":62}}],[0.120148,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least",{"fg":4}],["                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,64         16% ",{}]]},"cursor":{"x":63}}],[0.07996499999999999,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least ",{"fg":4}],["                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,65         16% ",{}]]},"cursor":{"x":64}}],[0.143946,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1",{"fg":4}],["                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,66         16% ",{}]]},"cursor":{"x":65}}],[0.152207,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 ",{"fg":4}],["                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,67         16% ",{}]]},"cursor":{"x":66}}],[0.231835,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 i",{"fg":4}],["                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,68         16% ",{}]]},"cursor":{"x":67}}],[0.080026,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 it",{"fg":4}],["                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,69         16% ",{}]]},"cursor":{"x":68}}],[0.112056,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 ite",{"fg":4}],["                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,70         16% ",{}]]},"cursor":{"x":69}}],[0.143917,{"lines":{"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,71         16% ",{}]]},"cursor":{"x":70}}],[1.656064,{"lines":{"5":[["                                                                                                   ",{}]],"6":[["    }                                                                                              ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"9":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"10":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"11":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"12":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"13":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"14":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"15":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"16":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"17":[["        }                                                                                          ",{}]],"18":[["                                                                                                   ",{}]],"19":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"20":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"21":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"22":[["            num_shifted--;                                                                         ",{}]],"23":[["        }                                                                                          ",{}]],"24":[["                                                                                                   ",{}]],"25":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"26":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"27":[["            total_sum -= q.front();                                                                ",{}]],"28":[["            q.pop();                                                                               ",{}]],"29":[["        }                                                                                          ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"33":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"34":[["};                                                                                                 ",{}]],"35":[["                                                                                                   ",{}]],"36":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,9          16% ",{}]]},"cursor":{"x":8,"y":5}}],[0.303516,{"lines":{"5":[["        q                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,10         16% ",{}]]},"cursor":{"x":9}}],[0.144051,{"lines":{"5":[["        q.                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,11         16% ",{}]]},"cursor":{"x":10}}],[0.176026,{"lines":{"5":[["        q.b                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,12         16% ",{}]]},"cursor":{"x":11}}],[0.088168,{"lines":{"5":[["        q.ba                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,13         16% ",{}]]},"cursor":{"x":12}}],[0.303804,{"lines":{"5":[["        q.bac                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,14         16% ",{}]]},"cursor":{"x":13}}],[0.137044,{"lines":{"5":[["        q.back                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,15         16% ",{}]]},"cursor":{"x":14}}],[0.682127,{"lines":{"5":[["        q.back(                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,16         16% ",{}]]},"cursor":{"x":15}}],[0.018031,{"lines":{"5":[["        q.back",{}],["()",{"bg":6}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,17         16% ",{}]]},"cursor":{"x":16}}],[0.190934,{"lines":{"5":[["        q.back()                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,18         16% ",{}]]},"cursor":{"x":17}}],[0.491868,{"lines":{"5":[["        q.back() +                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,19         16% ",{}]]},"cursor":{"x":18}}],[0.264143,{"lines":{"5":[["        q.back() +=                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,20         16% ",{}]]},"cursor":{"x":19}}],[0.823889,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     18,21         16% ",{}]]},"cursor":{"x":20}}],[0.208063,{"lines":{"5":[["        q.back() += c                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,22         16% ",{}]]},"cursor":{"x":21}}],[0.063864,{"lines":{"5":[["        q.back() += co                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,23         16% ",{}]]},"cursor":{"x":22}}],[0.072102,{"lines":{"5":[["        q.back() += cou                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,24         16% ",{}]]},"cursor":{"x":23}}],[0.175944,{"lines":{"5":[["        q.back() += coun                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,25         16% ",{}]]},"cursor":{"x":24}}],[0.096776,{"lines":{"5":[["        q.back() += count                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,26         16% ",{}]]},"cursor":{"x":25}}],[0.311187,{"lines":{"5":[["        q.back() += count;                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,27         16% ",{}]]},"cursor":{"x":26}}],[0.168156,{"lines":{"6":[["                                                                                                   ",{}]],"7":[["    }                                                                                              ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"10":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"11":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"13":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"14":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"15":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"16":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"17":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"18":[["        }                                                                                          ",{}]],"19":[["                                                                                                   ",{}]],"20":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"21":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"22":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"23":[["            num_shifted--;                                                                         ",{}]],"24":[["        }                                                                                          ",{}]],"25":[["                                                                                                   ",{}]],"26":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"27":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"28":[["            total_sum -= q.front();                                                                ",{}]],"29":[["            q.pop();                                                                               ",{}]],"30":[["        }                                                                                          ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"35":[["};                                                                                                 ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,9          16% ",{}]]},"cursor":{"x":8,"y":6}}],[0.327741,{"lines":{"6":[["        t                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,10         16% ",{}]]},"cursor":{"x":9}}],[0.104013,{"lines":{"6":[["        to                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,11         16% ",{}]]},"cursor":{"x":10}}],[0.088031,{"lines":{"6":[["        tot                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,12         16% ",{}]]},"cursor":{"x":11}}],[0.143986,{"lines":{"6":[["        tota                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,13         16% ",{}]]},"cursor":{"x":12}}],[0.11222,{"lines":{"6":[["        total                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,14         16% ",{}]]},"cursor":{"x":13}}],[0.239764,{"lines":{"6":[["        total_                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,15         16% ",{}]]},"cursor":{"x":14}}],[0.192023,{"lines":{"6":[["        total_s                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,16         16% ",{}]]},"cursor":{"x":15}}],[0.280028,{"lines":{"6":[["        total_sm                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,17         16% ",{}]]},"cursor":{"x":16}}],[0.504118,{"lines":{"6":[["        total_s                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,16         16% ",{}]]},"cursor":{"x":15}}],[0.495943,{"lines":{"6":[["        total_su                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,17         16% ",{}]]},"cursor":{"x":16}}],[0.176192,{"lines":{"6":[["        total_sum                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,18         16% ",{}]]},"cursor":{"x":17}}],[0.167349,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     19,19         16% ",{}]]},"cursor":{"x":18}}],[0.512418,{"lines":{"6":[["        total_sum +                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,20         16% ",{}]]},"cursor":{"x":19}}],[0.176036,{"lines":{"6":[["        total_sum +=                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,21         16% ",{}]]},"cursor":{"x":20}}],[0.191973,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     19,22         16% ",{}]]},"cursor":{"x":21}}],[0.191961,{"lines":{"6":[["        total_sum += c                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,23         16% ",{}]]},"cursor":{"x":22}}],[0.10396,{"lines":{"6":[["        total_sum += co                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,24         16% ",{}]]},"cursor":{"x":23}}],[0.056162,{"lines":{"6":[["        total_sum += cou                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,25         16% ",{}]]},"cursor":{"x":24}}],[0.199863,{"lines":{"6":[["        total_sum += coun                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,26         16% ",{}]]},"cursor":{"x":25}}],[0.152185,{"lines":{"6":[["        total_sum += count                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,27         16% ",{}]]},"cursor":{"x":26}}],[1.023895,{"lines":{"6":[["        total_sum += count;                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     19,28         16% ",{}]]},"cursor":{"x":27}}],[0.160657,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":26}}],[0.207127,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.135746,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.5043029999999999,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.12275,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 19,27         16% ",{}]]},"cursor":{"x":26,"y":6,"visible":true}}],[1.255327,{"lines":{"3":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                    ",{}]],"7":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 20,5          16% ",{}]]},"cursor":{"x":4,"y":7}}],[0.501914,{"lines":{"3":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"7":[["    }                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 21,0-1        16% ",{}]]},"cursor":{"x":0,"y":8}}],[0.027336,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 22,27         16% ",{}]]},"cursor":{"x":26,"y":9}}],[0.029718,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 23,27         16% ",{}]]},"cursor":{"y":10}}],[0.032796,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 24,27         16% ",{}]]},"cursor":{"y":11}}],[0.031195,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 25,27         16% ",{}]]},"cursor":{"y":12}}],[0.030482,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 26,27         16% ",{}]]},"cursor":{"y":13}}],[0.03071,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 27,27         16% ",{}]]},"cursor":{"y":14}}],[0.035401,{"lines":{"15":[["            q = queue<",{}],["int",{"fg":2}],[">",{}],["()",{"bg":6}],["; ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 28,27         16% ",{}]]},"cursor":{"y":15}}],[0.029065,{"lines":{"15":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 29,26         16% ",{}]]},"cursor":{"x":25,"y":16}}],[0.026142,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 30,19         16% ",{}]]},"cursor":{"x":18,"y":17}}],[0.036431,{"lines":{"14":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) ",{}],["{",{"bg":6}],["                                                            ",{}]],"18":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 31,9          16% ",{}]]},"cursor":{"x":8,"y":18}}],[0.030518,{"lines":{"14":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"18":[["        }                                                                                          ",{}]],"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 32,0-1        16% ",{}]]},"cursor":{"x":0,"y":19}}],[0.024452,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 33,27         16% ",{}]]},"cursor":{"x":26,"y":20}}],[0.030171,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 34,27         16% ",{}]]},"cursor":{"y":21}}],[0.030755,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 35,22         16% ",{}]]},"cursor":{"x":21,"y":22}}],[0.031544,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 36,26         16% ",{}]]},"cursor":{"x":25,"y":23}}],[0.036198,{"lines":{"21":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") ",{}],["{",{"bg":6}],["                                                                  ",{}]],"24":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 37,9          16% ",{}]]},"cursor":{"x":8,"y":24}}],[0.028369,{"lines":{"21":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"24":[["        }                                                                                          ",{}]],"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 38,0-1        16% ",{}]]},"cursor":{"x":0,"y":25}}],[0.02829,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 39,27         16% ",{}]]},"cursor":{"x":26,"y":26}}],[0.030966,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 40,27         16% ",{}]]},"cursor":{"y":27}}],[0.03023,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 41,27         16% ",{}]]},"cursor":{"y":28}}],[0.030548,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 42,20         16% ",{}]]},"cursor":{"x":19,"y":29}}],[0.187924,{"lines":{"27":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) ",{}],["{",{"bg":6}],["                                                            ",{}]],"30":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 43,9          16% ",{}]]},"cursor":{"x":8,"y":30}}],[0.193063,{"lines":{"12":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) ",{}],["{",{"bg":6}],["                                                                  ",{}]],"27":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"30":[["        }                                                                                          ",{}]],"31":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 44,5          16% ",{}]]},"cursor":{"x":4,"y":31}}],[0.18145,{"lines":{"12":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"31":[["    }                                                                                              ",{}]],"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 45,0-1        16% ",{}]]},"cursor":{"x":0,"y":32}}],[0.356265,{"lines":{"37":[["\"ch15_3.cpp\" 110L, 3040C written                                                 46,27         16% ",{}]]},"cursor":{"x":26,"y":33}}],[0.968313,{"lines":{"33":[["    ",{}],["int",{"fg":2}],[" TotalSum();                                                                                ",{}]],"34":[["};                                                                                                 ",{}]],"35":[["                                                                                                   ",{}]],"36":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"37":[["                                                                                 46,5          16% ",{}]]},"cursor":{"x":4}}],[0.354506,{"lines":{"33":[["};                                                                                                 ",{}]],"34":[["                                                                                                   ",{}]],"35":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"36":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"37":[["                                                                                 46,1          16% ",{}]]},"cursor":{"x":0}}],[0.405529,{"lines":{"33":[["                                                                                                   ",{}]],"34":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"35":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"36":[["    ConveyorQueue buckets;                                                                         ",{}]],"37":[["                                                                                 46,0-1        17% ",{}]]}}],[0.578306,{"lines":{"33":[["};                                                                                                 ",{}]],"34":[["                                                                                                   ",{}]],"35":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"36":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"37":[["                                                                                 46,1          16% ",{}]]}}],[0.301336,{"lines":{"37":[["                                                                                 45,0-1        16% ",{}]]},"cursor":{"y":32}}],[0.322483,{"lines":{"32":[["};                                                                                                 ",{}]],"33":[["                                                                                                   ",{}]],"34":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"35":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"36":[["    ConveyorQueue buckets;                                                                         ",{}]],"37":[["                                                                                 45,1          17% ",{}]]}}],[0.08547200000000001,{"lines":{"37":[["                                                                                 44,1          17% ",{}]]},"cursor":{"y":31}}],[0.500499,{"lines":{"37":[["                                                                                 43,1          17% ",{}]]},"cursor":{"y":30}}],[0.032042,{"lines":{"37":[["                                                                                 42,1          17% ",{}]]},"cursor":{"y":29}}],[0.03021,{"lines":{"37":[["                                                                                 41,1          17% ",{}]]},"cursor":{"y":28}}],[0.030152,{"lines":{"37":[["                                                                                 40,1          17% ",{}]]},"cursor":{"y":27}}],[0.031239,{"lines":{"37":[["                                                                                 39,1          17% ",{}]]},"cursor":{"y":26}}],[0.02998,{"lines":{"37":[["                                                                                 38,0-1        17% ",{}]]},"cursor":{"y":25}}],[0.030218,{"lines":{"37":[["                                                                                 37,1          17% ",{}]]},"cursor":{"y":24}}],[0.031012,{"lines":{"37":[["                                                                                 36,1          17% ",{}]]},"cursor":{"y":23}}],[0.030903,{"lines":{"37":[["                                                                                 35,1          17% ",{}]]},"cursor":{"y":22}}],[0.031013,{"lines":{"37":[["                                                                                 34,1          17% ",{}]]},"cursor":{"y":21}}],[0.030036,{"lines":{"37":[["                                                                                 33,1          17% ",{}]]},"cursor":{"y":20}}],[0.03066,{"lines":{"37":[["                                                                                 32,0-1        17% ",{}]]},"cursor":{"y":19}}],[0.03135,{"lines":{"37":[["                                                                                 31,1          17% ",{}]]},"cursor":{"y":18}}],[0.030853,{"lines":{"37":[["                                                                                 30,1          17% ",{}]]},"cursor":{"y":17}}],[0.03163,{"lines":{"37":[["                                                                                 29,1          17% ",{}]]},"cursor":{"y":16}}],[0.030488,{"lines":{"37":[["                                                                                 28,1          17% ",{}]]},"cursor":{"y":15}}],[0.031578,{"lines":{"37":[["                                                                                 27,1          17% ",{}]]},"cursor":{"y":14}}],[0.030085,{"lines":{"37":[["                                                                                 26,1          17% ",{}]]},"cursor":{"y":13}}],[0.030307,{"lines":{"37":[["                                                                                 25,1          17% ",{}]]},"cursor":{"y":12}}],[0.030895,{"lines":{"37":[["                                                                                 24,1          17% ",{}]]},"cursor":{"y":11}}],[0.03126,{"lines":{"37":[["                                                                                 23,1          17% ",{}]]},"cursor":{"y":10}}],[0.030012,{"lines":{"37":[["                                                                                 22,1          17% ",{}]]},"cursor":{"y":9}}],[0.030585,{"lines":{"37":[["                                                                                 21,0-1        17% ",{}]]},"cursor":{"y":8}}],[0.031098,{"lines":{"37":[["                                                                                 20,1          17% ",{}]]},"cursor":{"y":7}}],[0.029788,{"lines":{"37":[["                                                                                 19,1          17% ",{}]]},"cursor":{"y":6}}],[0.030142,{"lines":{"37":[["                                                                                 18,1          17% ",{}]]},"cursor":{"y":5}}],[0.030279,{"lines":{"37":[["                                                                                 17,1          17% ",{}]]},"cursor":{"y":4}}],[0.030171,{"lines":{"37":[["                                                                                 16,1          17% ",{}]]},"cursor":{"y":3}}],[0.030213,{"lines":{"37":[["                                                                                 15,1          17% ",{}]]},"cursor":{"y":2}}],[0.029862,{"lines":{"37":[["                                                                                 14,0-1        17% ",{}]]},"cursor":{"y":1}}],[0.03011,{"lines":{"37":[["                                                                                 13,1          17% ",{}]]},"cursor":{"y":0}}],[0.030974,{"lines":{"0":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"1":[["    }                                                                                              ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"5":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"6":[["        q.back() += count;                                                                         ",{}]],"7":[["        total_sum += count;                                                                        ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"11":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"12":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"14":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"15":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"16":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"17":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"18":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"19":[["        }                                                                                          ",{}]],"20":[["                                                                                                   ",{}]],"21":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"22":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"23":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"24":[["            num_shifted--;                                                                         ",{}]],"25":[["        }                                                                                          ",{}]],"26":[["                                                                                                   ",{}]],"27":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"28":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"29":[["            total_sum -= q.front();                                                                ",{}]],"30":[["            q.pop();                                                                               ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["};                                                                                                 ",{}]],"34":[["                                                                                                   ",{}]],"35":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"36":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"37":[["                                                                                 12,1          15% ",{}]]}}],[0.033116,{"lines":{"0":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"1":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"2":[["    }                                                                                              ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"5":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"6":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"7":[["        q.back() += count;                                                                         ",{}]],"8":[["        total_sum += count;                                                                        ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"12":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"13":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"15":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"16":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"17":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"18":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"19":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"20":[["        }                                                                                          ",{}]],"21":[["                                                                                                   ",{}]],"22":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"23":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"24":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"25":[["            num_shifted--;                                                                         ",{}]],"26":[["        }                                                                                          ",{}]],"27":[["                                                                                                   ",{}]],"28":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"29":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"30":[["            total_sum -= q.front();                                                                ",{}]],"31":[["            q.pop();                                                                               ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["};                                                                                                 ",{}]],"35":[["                                                                                                   ",{}]],"36":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"37":[["                                                                                 11,1          14% ",{}]]}}],[0.031614,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"2":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"3":[["    }                                                                                              ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"6":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"7":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"8":[["        q.back() += count;                                                                         ",{}]],"9":[["        total_sum += count;                                                                        ",{}]],"10":[["    }                                                                                              ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"13":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"14":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"15":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"16":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"17":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"18":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"19":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"20":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"21":[["        }                                                                                          ",{}]],"22":[["                                                                                                   ",{}]],"23":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"24":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"25":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"26":[["            num_shifted--;                                                                         ",{}]],"27":[["        }                                                                                          ",{}]],"28":[["                                                                                                   ",{}]],"29":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"30":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"31":[["            total_sum -= q.front();                                                                ",{}]],"32":[["            q.pop();                                                                               ",{}]],"33":[["        }                                                                                          ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["};                                                                                                 ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 10,0-1        12% ",{}]]}}],[0.030398,{"lines":{"0":[["    }                                                                                              ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"3":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"4":[["    }                                                                                              ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"7":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"8":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"9":[["        q.back() += count;                                                                         ",{}]],"10":[["        total_sum += count;                                                                        ",{}]],"11":[["    }                                                                                              ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"14":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"15":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"16":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"17":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"18":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"19":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"20":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"21":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"22":[["        }                                                                                          ",{}]],"23":[["                                                                                                   ",{}]],"24":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"25":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"26":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"27":[["            num_shifted--;                                                                         ",{}]],"28":[["        }                                                                                          ",{}]],"29":[["                                                                                                   ",{}]],"30":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"31":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"32":[["            total_sum -= q.front();                                                                ",{}]],"33":[["            q.pop();                                                                               ",{}]],"34":[["        }                                                                                          ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["                                                                                 9,1           11% ",{}]]}}],[0.030265,{"lines":{"0":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"1":[["    }                                                                                              ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"4":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"5":[["    }                                                                                              ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"8":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"9":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"10":[["        q.back() += count;                                                                         ",{}]],"11":[["        total_sum += count;                                                                        ",{}]],"12":[["    }                                                                                              ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"15":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"16":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"17":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"18":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"19":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"20":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"21":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"22":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"23":[["        }                                                                                          ",{}]],"24":[["                                                                                                   ",{}]],"25":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"26":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"27":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"28":[["            num_shifted--;                                                                         ",{}]],"29":[["        }                                                                                          ",{}]],"30":[["                                                                                                   ",{}]],"31":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"32":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"33":[["            total_sum -= q.front();                                                                ",{}]],"34":[["            q.pop();                                                                               ",{}]],"35":[["        }                                                                                          ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 8,1           10% ",{}]]}}],[0.029667,{"lines":{"0":[["public",{"fg":3}],[":                                                                                            ",{}]],"1":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"2":[["    }                                                                                              ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"5":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"6":[["    }                                                                                              ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"9":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"10":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"11":[["        q.back() += count;                                                                         ",{}]],"12":[["        total_sum += count;                                                                        ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"16":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"17":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"18":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"19":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"20":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"21":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"22":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"23":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"24":[["        }                                                                                          ",{}]],"25":[["                                                                                                   ",{}]],"26":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"27":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"28":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"29":[["            num_shifted--;                                                                         ",{}]],"30":[["        }                                                                                          ",{}]],"31":[["                                                                                                   ",{}]],"32":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"33":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"34":[["            total_sum -= q.front();                                                                ",{}]],"35":[["            q.pop();                                                                               ",{}]],"36":[["        }                                                                                          ",{}]],"37":[["                                                                                 7,1            8% ",{}]]}}],[0.03195,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["public",{"fg":3}],[":                                                                                            ",{}]],"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"3":[["    }                                                                                              ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"6":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"7":[["    }                                                                                              ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"10":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"11":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"12":[["        q.back() += count;                                                                         ",{}]],"13":[["        total_sum += count;                                                                        ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"17":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"18":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"20":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"21":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"22":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"23":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"24":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"25":[["        }                                                                                          ",{}]],"26":[["                                                                                                   ",{}]],"27":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"28":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"29":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"30":[["            num_shifted--;                                                                         ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["                                                                                                   ",{}]],"33":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"34":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"35":[["            total_sum -= q.front();                                                                ",{}]],"36":[["            q.pop();                                                                               ",{}]],"37":[["                                                                                 6,0-1          7% ",{}]]}}],[0.031651,{"lines":{"0":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"1":[["                                                                                                   ",{}]],"2":[["public",{"fg":3}],[":                                                                                            ",{}]],"3":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"4":[["    }                                                                                              ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"7":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"11":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"12":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"13":[["        q.back() += count;                                                                         ",{}]],"14":[["        total_sum += count;                                                                        ",{}]],"15":[["    }                                                                                              ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"18":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"19":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"20":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"21":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"24":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"25":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"26":[["        }                                                                                          ",{}]],"27":[["                                                                                                   ",{}]],"28":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"29":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"30":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"31":[["            num_shifted--;                                                                         ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["                                                                                                   ",{}]],"34":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"36":[["            total_sum -= q.front();                                                                ",{}]],"37":[["                                                                                 5,1            5% ",{}]]}}],[0.030215,{"lines":{"0":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"1":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"2":[["                                                                                                   ",{}]],"3":[["public",{"fg":3}],[":                                                                                            ",{}]],"4":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"5":[["    }                                                                                              ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"8":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"13":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"14":[["        q.back() += count;                                                                         ",{}]],"15":[["        total_sum += count;                                                                        ",{}]],"16":[["    }                                                                                              ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"19":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"20":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"21":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"22":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"23":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"24":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"25":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"26":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"27":[["        }                                                                                          ",{}]],"28":[["                                                                                                   ",{}]],"29":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"30":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"31":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"32":[["            num_shifted--;                                                                         ",{}]],"33":[["        }                                                                                          ",{}]],"34":[["                                                                                                   ",{}]],"35":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"36":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"37":[["                                                                                 4,1            4% ",{}]]}}],[0.030248,{"lines":{"0":[["    queue<",{}],["int",{"fg":2}],["> q;                                                                                  ",{}]],"1":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"2":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"3":[["                                                                                                   ",{}]],"4":[["public",{"fg":3}],[":                                                                                            ",{}]],"5":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"6":[["    }                                                                                              ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"9":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"10":[["    }                                                                                              ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"14":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"15":[["        q.back() += count;                                                                         ",{}]],"16":[["        total_sum += count;                                                                        ",{}]],"17":[["    }                                                                                              ",{}]],"18":[["                                                                                                   ",{}]],"19":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"20":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"21":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"22":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"23":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"24":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"25":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"26":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"27":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"28":[["        }                                                                                          ",{}]],"29":[["                                                                                                   ",{}]],"30":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"31":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"32":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"33":[["            num_shifted--;                                                                         ",{}]],"34":[["        }                                                                                          ",{}]],"35":[["                                                                                                   ",{}]],"36":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"37":[["                                                                                 3,1            2% ",{}]]}}],[0.167216,{"lines":{"37":[["                                                                                 4,1            2% ",{}]]},"cursor":{"y":1}}],[0.176155,{"lines":{"37":[["                                                                                 5,1            2% ",{}]]},"cursor":{"y":2}}],[0.16784,{"lines":{"37":[["                                                                                 6,0-1          2% ",{}]]},"cursor":{"y":3}}],[0.168025,{"lines":{"37":[["                                                                                 7,1            2% ",{}]]},"cursor":{"y":4}}],[0.167965,{"lines":{"37":[["                                                                                 8,1            2% ",{}]]},"cursor":{"y":5}}],[0.168064,{"lines":{"37":[["                                                                                 9,1            2% ",{}]]},"cursor":{"y":6}}],[0.175938,{"lines":{"37":[["                                                                                 10,0-1         2% ",{}]]},"cursor":{"y":7}}],[0.816361,{"lines":{"8":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"9":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"10":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"11":[["    }                                                                                              ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"15":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"16":[["        q.back() += count;                                                                         ",{}]],"17":[["        total_sum += count;                                                                        ",{}]],"18":[["    }                                                                                              ",{}]],"19":[["                                                                                                   ",{}]],"20":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"21":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"22":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"23":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"24":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"25":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"26":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"27":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"28":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"29":[["        }                                                                                          ",{}]],"30":[["                                                                                                   ",{}]],"31":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"32":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"33":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"34":[["            num_shifted--;                                                                         ",{}]],"35":[["        }                                                                                          ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 11,5           2% ",{}]]},"cursor":{"x":4,"y":8}}],[0.607757,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.143857,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.136167,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.121438,{"lines":{"37":[["\"ch15_3.cpp\" 108L, 3019C written                                                 11,5           2% ",{}]]},"cursor":{"x":4,"y":8,"visible":true}}],[1.182823,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off\" the end",{"fg":4}],["                      ",{}]],"1":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"2":[["    queue<",{}],["int",{"fg":2}],["> q;                                                                                  ",{}]],"3":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"5":[["                                                                                                   ",{}]],"6":[["public",{"fg":3}],[":                                                                                            ",{}]],"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"11":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"12":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"16":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"17":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"18":[["        q.back() += count;                                                                         ",{}]],"19":[["        total_sum += count;                                                                        ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"23":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"24":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"25":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"26":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"27":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"28":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"29":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"30":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["                                                                                                   ",{}]],"33":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"34":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"35":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"36":[["            num_shifted--;                                                                         ",{}]],"37":[["                                                                                 1,1           Top ",{}]]},"cursor":{"x":0,"y":0}}],[3.487596,{"lines":{"37":[["                                                                                 2,1           Top ",{}]]},"cursor":{"y":1}}],[0.708382,{"lines":{"0":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"1":[["            num_shifted--;                                                                         ",{}]],"2":[["        }                                                                                          ",{}]],"3":[["                                                                                                   ",{}]],"4":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"5":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"6":[["            total_sum -= q.front();                                                                ",{}]],"7":[["            q.pop();                                                                               ",{}]],"8":[["        }                                                                                          ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["};                                                                                                 ",{}]],"11":[["                                                                                                   ",{}]],"12":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"13":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"14":[["    ConveyorQueue buckets;                                                                         ",{}]],"15":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"16":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"20":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"21":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"22":[["                                                                                                   ",{}]],"23":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"24":[["        last_update_time = now;                                                                    ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["public",{"fg":3}],[":                                                                                            ",{}]],"28":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"29":[["    TrailingBucketCounter(                                                                         ",{}]],"30":[["                                                                                                   ",{}]],"31":[["                                                                                                   ",{}]],"33":[["                                                                                                   ",{}]],"34":[["                                                                                                   ",{}]],"35":[["                                                                                                   ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                                   ",{}]]},"cursor":{"x":26,"y":29,"visible":false}}],[4.8e-05,{"lines":{"29":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"30":[["        buckets(num_buckets),                                                                      ",{}]],"31":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"32":[["    }                                                                                              ",{}]],"34":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"35":[["        Update(now);                                                                               ",{}]],"36":[["        buckets.AddToBack(count);                                                                  ",{}]],"37":[["                                                                                 36,13         49% ",{}]]},"cursor":{"x":12,"y":0,"visible":true}}],[1.728198,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off\" the end",{"fg":4}],["                      ",{}]],"1":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"2":[["    queue<",{}],["int",{"fg":2}],["> q;                                                                                  ",{}]],"3":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"5":[["                                                                                                   ",{}]],"6":[["public",{"fg":3}],[":                                                                                            ",{}]],"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"11":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"12":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"16":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"17":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"18":[["        q.back() += count;                                                                         ",{}]],"19":[["        total_sum += count;                                                                        ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"23":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"24":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"25":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],["                                                                                 ",{}]],"27":[["                                                                                                   ",{}]],"28":[["                                                                                                   ",{}]],"29":[["                                                                                                   ",{}]],"30":[["                                                                                                   ",{}]],"31":[["                                                                                                   ",{}]],"32":[["                                                                                                   ",{}]],"34":[["                                                                                                   ",{}]],"35":[["                                                                                                   ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                                   ",{}]]},"cursor":{"x":18,"y":25,"visible":false}}],[4.9e-05,{"lines":{"25":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"26":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"27":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"28":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"29":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"30":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"31":[["        }                                                                                          ",{}]],"33":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"34":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"35":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"36":[["            num_shifted--;                                                                         ",{}]],"37":[["                                                                                 1,1           Top ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.579985,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["// A queue with a maximum number of slots, where old data \"falls off\" the end",{"fg":4}],["                      ",{}]],"2":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"3":[["    queue<",{}],["int",{"fg":2}],["> q;                                                                                  ",{}]],"4":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"5":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"6":[["                                                                                                   ",{}]],"7":[["public",{"fg":3}],[":                                                                                            ",{}]],"8":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"12":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"13":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"17":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"18":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"19":[["        q.back() += count;                                                                         ",{}]],"20":[["        total_sum += count;                                                                        ",{}]],"21":[["    }                                                                                              ",{}]],"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"24":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"25":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"26":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"27":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"28":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"29":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"30":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"31":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["                                                                                                   ",{}]],"34":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"35":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"36":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,1           Top ",{}]]}}],[0.415829,{"lines":{"0":[["/                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,2           Top ",{}]]},"cursor":{"x":1}}],[0.143363,{"lines":{"0":[["//",{"fg":4}],["                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,3           Top ",{}]]},"cursor":{"x":2}}],[0.128897,{"lines":{"0":[["// ",{"fg":4}],["                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,4           Top ",{}]]},"cursor":{"x":3}}],[0.479575,{"lines":{"0":[["// L",{"fg":4}],["                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,5           Top ",{}]]},"cursor":{"x":4}}],[0.152514,{"lines":{"0":[["// Le",{"fg":4}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,6           Top ",{}]]},"cursor":{"x":5}}],[0.08755300000000001,{"lines":{"0":[["// Let",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,7           Top ",{}]]},"cursor":{"x":6}}],[1.032021,{"lines":{"0":[["// Let'",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,8           Top ",{}]]},"cursor":{"x":7}}],[0.07191500000000001,{"lines":{"0":[["// Let's",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,9           Top ",{}]]},"cursor":{"x":8}}],[0.08814,{"lines":{"0":[["// Let's ",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,10          Top ",{}]]},"cursor":{"x":9}}],[0.351992,{"lines":{"0":[["// Let's s",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,11          Top ",{}]]},"cursor":{"x":10}}],[0.103903,{"lines":{"0":[["// Let's sk",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,12          Top ",{}]]},"cursor":{"x":11}}],[0.167988,{"lines":{"0":[["// Let's ski",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,13          Top ",{}]]},"cursor":{"x":12}}],[0.119928,{"lines":{"0":[["// Let's skim",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,14          Top ",{}]]},"cursor":{"x":13}}],[0.136094,{"lines":{"0":[["// Let's skim ",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,15          Top ",{}]]},"cursor":{"x":14}}],[0.695987,{"lines":{"0":[["// Let's skim t",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,16          Top ",{}]]},"cursor":{"x":15}}],[0.327952,{"lines":{"0":[["// Let's skim th",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,17          Top ",{}]]},"cursor":{"x":16}}],[0.304115,{"lines":{"0":[["// Let's skim thr",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,18          Top ",{}]]},"cursor":{"x":17}}],[0.128871,{"lines":{"0":[["// Let's skim thro",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,19          Top ",{}]]},"cursor":{"x":18}}],[0.063069,{"lines":{"0":[["// Let's skim throu",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,20          Top ",{}]]},"cursor":{"x":19}}],[0.120048,{"lines":{"0":[["// Let's skim throug",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,21          Top ",{}]]},"cursor":{"x":20}}],[0.096022,{"lines":{"0":[["// Let's skim through",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,22          Top ",{}]]},"cursor":{"x":21}}],[0.104266,{"lines":{"0":[["// Let's skim through ",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,23          Top ",{}]]},"cursor":{"x":22}}],[0.127692,{"lines":{"0":[["// Let's skim through i",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,24          Top ",{}]]},"cursor":{"x":23}}],[0.064025,{"lines":{"0":[["// Let's skim through it",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,25          Top ",{}]]},"cursor":{"x":24}}],[1.18439,{"lines":{"0":[["// Let's skim through i",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,24          Top ",{}]]},"cursor":{"x":23}}],[0.151608,{"lines":{"0":[["// Let's skim through ",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,23          Top ",{}]]},"cursor":{"x":22}}],[0.335992,{"lines":{"0":[["// Let's skim through t",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,24          Top ",{}]]},"cursor":{"x":23}}],[0.104058,{"lines":{"0":[["// Let's skim through th",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,25          Top ",{}]]},"cursor":{"x":24}}],[0.119951,{"lines":{"0":[["// Let's skim through the",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,26          Top ",{}]]},"cursor":{"x":25}}],[0.09614,{"lines":{"0":[["// Let's skim through the ",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,27          Top ",{}]]},"cursor":{"x":26}}],[0.320084,{"lines":{"0":[["// Let's skim through the w",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,28          Top ",{}]]},"cursor":{"x":27}}],[0.071815,{"lines":{"0":[["// Let's skim through the wh",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,29          Top ",{}]]},"cursor":{"x":28}}],[0.080058,{"lines":{"0":[["// Let's skim through the who",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,30          Top ",{}]]},"cursor":{"x":29}}],[0.191979,{"lines":{"0":[["// Let's skim through the whol",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,31          Top ",{}]]},"cursor":{"x":30}}],[0.095911,{"lines":{"0":[["// Let's skim through the whole",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,32          Top ",{}]]},"cursor":{"x":31}}],[0.182967,{"lines":{"0":[["// Let's skim through the whole ",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,33          Top ",{}]]},"cursor":{"x":32}}],[0.521215,{"lines":{"0":[["// Let's skim through the whole c",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,34          Top ",{}]]},"cursor":{"x":33}}],[0.09581199999999999,{"lines":{"0":[["// Let's skim through the whole co",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,35          Top ",{}]]},"cursor":{"x":34}}],[0.112054,{"lines":{"0":[["// Let's skim through the whole cod",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,36          Top ",{}]]},"cursor":{"x":35}}],[0.159972,{"lines":{"0":[["// Let's skim through the whole code",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,37          Top ",{}]]},"cursor":{"x":36}}],[0.85602,{"lines":{"0":[["// Let's skim through the whole cod",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,36          Top ",{}]]},"cursor":{"x":35}}],[0.500094,{"lines":{"0":[["// Let's skim through the whole co",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,35          Top ",{}]]},"cursor":{"x":34}}],[0.032991,{"lines":{"0":[["// Let's skim through the whole c",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,34          Top ",{}]]},"cursor":{"x":33}}],[0.028737,{"lines":{"0":[["// Let's skim through the whole ",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,33          Top ",{}]]},"cursor":{"x":32}}],[0.030759,{"lines":{"0":[["// Let's skim through the whole",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,32          Top ",{}]]},"cursor":{"x":31}}],[0.030682,{"lines":{"0":[["// Let's skim through the whol",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,31          Top ",{}]]},"cursor":{"x":30}}],[0.031004,{"lines":{"0":[["// Let's skim through the who",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,30          Top ",{}]]},"cursor":{"x":29}}],[0.030953,{"lines":{"0":[["// Let's skim through the wh",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,29          Top ",{}]]},"cursor":{"x":28}}],[0.030483,{"lines":{"0":[["// Let's skim through the w",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,28          Top ",{}]]},"cursor":{"x":27}}],[0.030464,{"lines":{"0":[["// Let's skim through the ",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,27          Top ",{}]]},"cursor":{"x":26}}],[0.030602,{"lines":{"0":[["// Let's skim through the",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,26          Top ",{}]]},"cursor":{"x":25}}],[0.030689,{"lines":{"0":[["// Let's skim through th",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,25          Top ",{}]]},"cursor":{"x":24}}],[0.030439,{"lines":{"0":[["// Let's skim through t",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,24          Top ",{}]]},"cursor":{"x":23}}],[0.030655,{"lines":{"0":[["// Let's skim through ",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,23          Top ",{}]]},"cursor":{"x":22}}],[0.031328,{"lines":{"0":[["// Let's skim through",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,22          Top ",{}]]},"cursor":{"x":21}}],[0.02981,{"lines":{"0":[["// Let's skim throug",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,21          Top ",{}]]},"cursor":{"x":20}}],[0.029747,{"lines":{"0":[["// Let's skim throu",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,20          Top ",{}]]},"cursor":{"x":19}}],[0.030254,{"lines":{"0":[["// Let's skim thro",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,19          Top ",{}]]},"cursor":{"x":18}}],[0.030965,{"lines":{"0":[["// Let's skim thr",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,18          Top ",{}]]},"cursor":{"x":17}}],[0.031248,{"lines":{"0":[["// Let's skim th",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,17          Top ",{}]]},"cursor":{"x":16}}],[0.029784,{"lines":{"0":[["// Let's skim t",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,16          Top ",{}]]},"cursor":{"x":15}}],[0.030307,{"lines":{"0":[["// Let's skim ",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,15          Top ",{}]]},"cursor":{"x":14}}],[0.027457,{"lines":{"0":[["// Let's skim",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,14          Top ",{}]]},"cursor":{"x":13}}],[0.030598,{"lines":{"0":[["// Let's ski",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,13          Top ",{}]]},"cursor":{"x":12}}],[0.033962,{"lines":{"0":[["// Let's sk",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,12          Top ",{}]]},"cursor":{"x":11}}],[0.030389,{"lines":{"0":[["// Let's s",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,11          Top ",{}]]},"cursor":{"x":10}}],[0.030516,{"lines":{"0":[["// Let's ",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,10          Top ",{}]]},"cursor":{"x":9}}],[0.030988,{"lines":{"0":[["// Let's",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,9           Top ",{}]]},"cursor":{"x":8}}],[0.030629,{"lines":{"0":[["// Let'",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,8           Top ",{}]]},"cursor":{"x":7}}],[0.028978,{"lines":{"0":[["// Let",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,7           Top ",{}]]},"cursor":{"x":6}}],[0.030318,{"lines":{"0":[["// Le",{"fg":4}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,6           Top ",{}]]},"cursor":{"x":5}}],[0.03376,{"lines":{"0":[["// L",{"fg":4}],["                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,5           Top ",{}]]},"cursor":{"x":4}}],[0.031041,{"lines":{"0":[["// ",{"fg":4}],["                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,4           Top ",{}]]},"cursor":{"x":3}}],[0.030024,{"lines":{"0":[["//",{"fg":4}],["                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,3           Top ",{}]]},"cursor":{"x":2}}],[0.030791,{"lines":{"0":[["/                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,2           Top ",{}]]},"cursor":{"x":1}}],[0.45645,{"lines":{"0":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,1           Top ",{}]]},"cursor":{"x":0}}],[0.176673,{"lines":{"37":[["                                                                                                   ",{}]]}}],[0.262669,{"lines":{"37":[["                                                                                 1,0-1         Top ",{}]]}}],[0.13682,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off\" the end",{"fg":4}],["                      ",{}]],"1":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"2":[["    queue<",{}],["int",{"fg":2}],["> q;                                                                                  ",{}]],"3":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"5":[["                                                                                                   ",{}]],"6":[["public",{"fg":3}],[":                                                                                            ",{}]],"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"11":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"12":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"16":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"17":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"18":[["        q.back() += count;                                                                         ",{}]],"19":[["        total_sum += count;                                                                        ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"23":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"24":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"25":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"26":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"27":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"28":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"29":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"30":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["                                                                                                   ",{}]],"33":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"34":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"35":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"36":[["            num_shifted--;                                                                         ",{}]],"37":[["                                                                                 1,1           Top ",{}]]}}],[0.69171,{"lines":{"0":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"1":[["            num_shifted--;                                                                         ",{}]],"2":[["        }                                                                                          ",{}]],"3":[["                                                                                                   ",{}]],"4":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"5":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"6":[["            total_sum -= q.front();                                                                ",{}]],"7":[["            q.pop();                                                                               ",{}]],"8":[["        }                                                                                          ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["};                                                                                                 ",{}]],"11":[["                                                                                                   ",{}]],"12":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"13":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"14":[["    ConveyorQueue buckets;                                                                         ",{}]],"15":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"16":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"20":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"21":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"22":[["                                                                                                   ",{}]],"23":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"24":[["        last_update_time = now;                                                                    ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["public",{"fg":3}],[":                                                                                            ",{}]],"28":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"29":[["    TrailingBucketCounter(                                                                         ",{}]],"30":[["                                                                                                   ",{}]],"31":[["                                                                                                   ",{}]],"33":[["                                                                                                   ",{}]],"34":[["                                                                                                   ",{}]],"35":[["                                                                                                   ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                                   ",{}]]},"cursor":{"x":26,"y":29,"visible":false}}],[4.9e-05,{"lines":{"29":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"30":[["        buckets(num_buckets),                                                                      ",{}]],"31":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"32":[["    }                                                                                              ",{}]],"34":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"35":[["        Update(now);                                                                               ",{}]],"36":[["        buckets.AddToBack(count);                                                                  ",{}]],"37":[["                                                                                 36,13         49% ",{}]]},"cursor":{"x":12,"y":0,"visible":true}}],[1.107885,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.09570099999999999,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.104376,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.102339,{"lines":{"37":[["\"ch15_3.cpp\" 108L, 3019C written                                                 36,13         49% ",{}]]},"cursor":{"y":0,"visible":true}}],[0.301949,{"lines":{"0":[["        Update(now);                                                                               ",{}]],"1":[["        buckets.AddToBack(count);                                                                  ",{}]],"2":[["    }                                                                                              ",{}]],"4":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"5":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"6":[["        Update(now);                                                                               ",{}]],"7":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["};                                                                                                 ",{}]],"10":[["                                                                                                   ",{}]],"12":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"13":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"14":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"15":[["                                                                                                   ",{}]],"16":[["public",{"fg":3}],[":                                                                                            ",{}]],"17":[["    MinuteHourCounter() :                                                                          ",{}]],"18":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"19":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"23":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"24":[["        minute_counts.Add(count, now);                                                             ",{}]],"25":[["        hour_counts.Add(count, now);                                                               ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"29":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"30":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"34":[["        ",{}],["time_t",{"fg":2}],[" now = tim                                                                           ",{}]],"35":[["                                                                                                   ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                                   ",{}]]},"cursor":{"x":24,"y":34,"visible":false}}],[4.5e-05,{"lines":{"34":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"35":[["        ",{}],["return",{"fg":3}],[" hour_counts.TrailingCount(now);                                                     ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 71,9          98% ",{}]]},"cursor":{"x":8,"y":0,"visible":true}}],[0.731455,{"lines":{"37":[["                                                                                 72,9          98% ",{}]]},"cursor":{"y":1}}],[0.50037,{"lines":{"37":[["                                                                                 73,5          98% ",{}]]},"cursor":{"x":4,"y":2}}],[0.031201,{"lines":{"37":[["                                                                                 74,0-1        98% ",{}]]},"cursor":{"x":0,"y":3}}],[0.031265,{"lines":{"37":[["                                                                                 75,9          98% ",{}]]},"cursor":{"x":8,"y":4}}],[0.030087,{"lines":{"37":[["                                                                                 76,9          98% ",{}]]},"cursor":{"y":5}}],[0.031887,{"lines":{"37":[["                                                                                 77,9          98% ",{}]]},"cursor":{"y":6}}],[0.030106,{"lines":{"37":[["                                                                                 78,9          98% ",{}]]},"cursor":{"y":7}}],[0.036476,{"lines":{"5":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                                ",{}]],"8":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 79,5          98% ",{}]]},"cursor":{"x":4,"y":8}}],[0.03057,{"lines":{"5":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"8":[["    }                                                                                              ",{}]],"37":[["                                                                                 80,2          98% ",{}]]},"cursor":{"x":1,"y":9}}],[0.02638,{"lines":{"37":[["                                                                                 81,0-1        98% ",{}]]},"cursor":{"x":0,"y":10}}],[0.029917,{"lines":{"37":[["                                                                                 82,0-1        98% ",{}]]},"cursor":{"y":11}}],[0.030805,{"lines":{"37":[["                                                                                 83,9          98% ",{}]]},"cursor":{"x":8,"y":12}}],[0.030688,{"lines":{"37":[["                                                                                 84,9          98% ",{}]]},"cursor":{"y":13}}],[0.03078,{"lines":{"37":[["                                                                                 85,9          98% ",{}]]},"cursor":{"y":14}}],[0.030813,{"lines":{"37":[["                                                                                 86,0-1        98% ",{}]]},"cursor":{"x":0,"y":15}}],[0.218678,{"lines":{"37":[["                                                                                 85,9          98% ",{}]]},"cursor":{"x":8,"y":14}}],[0.168171,{"lines":{"37":[["                                                                                 84,9          98% ",{}]]},"cursor":{"y":13}}],[0.151828,{"lines":{"37":[["                                                                                 83,9          98% ",{}]]},"cursor":{"y":12}}],[0.288044,{"lines":{"37":[["                                                                                 84,9          98% ",{}]]},"cursor":{"y":13}}],[0.320099,{"lines":{"37":[["                                                                                 85,9          98% ",{}]]},"cursor":{"y":14}}],[0.2,{"lines":{"37":[["                                                                                 86,0-1        98% ",{}]]},"cursor":{"x":0,"y":15}}],[0.160239,{"lines":{"37":[["                                                                                 87,7          98% ",{}]]},"cursor":{"x":6,"y":16}}],[0.167715,{"lines":{"37":[["                                                                                 88,9          98% ",{}]]},"cursor":{"x":8,"y":17}}],[0.499995,{"lines":{"37":[["                                                                                 89,9          98% ",{}]]},"cursor":{"y":18}}],[0.032438,{"lines":{"37":[["                                                                                 90,9          98% ",{}]]},"cursor":{"y":19}}],[0.034949,{"lines":{"19":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") ",{}],["{",{"bg":6}],["                            ",{}]],"20":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 91,5          98% ",{}]]},"cursor":{"x":4,"y":20}}],[0.029998,{"lines":{"19":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"20":[["    }                                                                                              ",{}]],"37":[["                                                                                 92,0-1        98% ",{}]]},"cursor":{"x":0,"y":21}}],[0.027147,{"lines":{"37":[["                                                                                 93,9          98% ",{}]]},"cursor":{"x":8,"y":22}}],[0.030229,{"lines":{"37":[["                                                                                 94,9          98% ",{}]]},"cursor":{"y":23}}],[0.031847,{"lines":{"37":[["                                                                                 95,9          98% ",{}]]},"cursor":{"y":24}}],[0.031385,{"lines":{"37":[["                                                                                 96,9          98% ",{}]]},"cursor":{"y":25}}],[0.03505,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                          ",{}]],"26":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 97,5          98% ",{}]]},"cursor":{"x":4,"y":26}}],[0.030531,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"26":[["    }                                                                                              ",{}]],"37":[["                                                                                 98,0-1        98% ",{}]]},"cursor":{"x":0,"y":27}}],[0.026626,{"lines":{"37":[["                                                                                 99,9          98% ",{}]]},"cursor":{"x":8,"y":28}}],[0.03064,{"lines":{"37":[["                                                                                 100,9         98% ",{}]]},"cursor":{"y":29}}],[0.031032,{"lines":{"37":[["                                                                                 101,9         98% ",{}]]},"cursor":{"y":30}}],[0.035237,{"lines":{"28":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"31":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 102,5         98% ",{}]]},"cursor":{"x":4,"y":31}}],[0.030133,{"lines":{"28":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"31":[["    }                                                                                              ",{}]],"37":[["                                                                                 103,0-1       98% ",{}]]},"cursor":{"x":0,"y":32}}],[0.027303,{"lines":{"37":[["                                                                                 104,9         98% ",{}]]},"cursor":{"x":8,"y":33}}],[0.32356,{"lines":{"37":[["                                                                                 105,9         98% ",{}]]},"cursor":{"y":34}}],[0.175745,{"lines":{"37":[["                                                                                 106,9         98% ",{}]]},"cursor":{"y":35}}],[0.164755,{"lines":{"33":[["    ",{}],["int",{"fg":2}],[" HourCount() ",{}],["{",{"bg":6}],["                                                                              ",{}]],"36":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 107,5         98% ",{}]]},"cursor":{"x":4,"y":36}}],[0.16047,{"lines":{"0":[["        buckets.AddToBack(count);                                                                  ",{}]],"1":[["    }                                                                                              ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"4":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"5":[["        Update(now);                                                                               ",{}]],"6":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"7":[["    }                                                                                              ",{}]],"8":[["};                                                                                                 ",{}]],"9":[["                                                                                                   ",{}]],"11":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"12":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"13":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"14":[["                                                                                                   ",{}]],"15":[["public",{"fg":3}],[":                                                                                            ",{}]],"16":[["    MinuteHourCounter() :                                                                          ",{}]],"17":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"18":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"19":[["    }                                                                                              ",{}]],"20":[["                                                                                                   ",{}]],"21":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"22":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"23":[["        minute_counts.Add(count, now);                                                             ",{}]],"24":[["        hour_counts.Add(count, now);                                                               ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"28":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"29":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"33":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"34":[["        ",{}],["return",{"fg":3}],[" hour_counts.TrailingCount(now);                                                     ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["                                                                                 108,2         Bot ",{}]]},"cursor":{"x":1}}],[0.154749,{}],[1.988849,{"lines":{"32":[["    ",{}],["int",{"fg":2}],[" HourCount() ",{}],["{",{"bg":6}],["                                                                              ",{}]],"35":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 107,5         Bot ",{}]]},"cursor":{"x":4,"y":35}}],[0.183005,{"lines":{"32":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"35":[["    }                                                                                              ",{}]],"37":[["                                                                                 106,9         Bot ",{}]]},"cursor":{"x":8,"y":34}}],[0.140217,{"lines":{"37":[["                                                                                 105,9         Bot ",{}]]},"cursor":{"y":33}}],[0.152037,{"lines":{"37":[["                                                                                 104,9         Bot ",{}]]},"cursor":{"y":32}}],[0.143927,{"lines":{"37":[["                                                                                 103,0-1       Bot ",{}]]},"cursor":{"x":0,"y":31}}],[0.148041,{"lines":{"27":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"30":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 102,5         Bot ",{}]]},"cursor":{"x":4,"y":30}}],[0.127691,{"lines":{"27":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"30":[["    }                                                                                              ",{}]],"37":[["                                                                                 101,9         Bot ",{}]]},"cursor":{"x":8,"y":29}}],[0.148713,{"lines":{"37":[["                                                                                 100,9         Bot ",{}]]},"cursor":{"y":28}}],[0.143621,{"lines":{"37":[["                                                                                 99,9          Bot ",{}]]},"cursor":{"y":27}}],[0.151938,{"lines":{"37":[["                                                                                 98,0-1        Bot ",{}]]},"cursor":{"x":0,"y":26}}],[0.164639,{"lines":{"21":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                          ",{}]],"25":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 97,5          Bot ",{}]]},"cursor":{"x":4,"y":25}}],[0.151343,{"lines":{"21":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"25":[["    }                                                                                              ",{}]],"37":[["                                                                                 96,9          Bot ",{}]]},"cursor":{"x":8,"y":24}}],[0.348092,{"lines":{"37":[["                                                                                 96,10         Bot ",{}]]},"cursor":{"x":9}}],[1.231948,{"lines":{"37":[["                                                                                 95,10         Bot ",{}]]},"cursor":{"y":23}}],[0.500211,{"lines":{"37":[["                                                                                 94,10         Bot ",{}]]},"cursor":{"y":22}}],[0.031355,{"lines":{"37":[["                                                                                 93,10         Bot ",{}]]},"cursor":{"y":21}}],[0.030665,{"lines":{"37":[["                                                                                 92,0-1        Bot ",{}]]},"cursor":{"x":0,"y":20}}],[0.035712,{"lines":{"18":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") ",{}],["{",{"bg":6}],["                            ",{}]],"19":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 91,5          Bot ",{}]]},"cursor":{"x":4,"y":19}}],[0.029888,{"lines":{"18":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"19":[["    }                                                                                              ",{}]],"37":[["                                                                                 90,10         Bot ",{}]]},"cursor":{"x":9,"y":18}}],[0.156246,{"lines":{"37":[["                                                                                 89,10         Bot ",{}]]},"cursor":{"y":17}}],[0.176032,{"lines":{"37":[["                                                                                 88,10         Bot ",{}]]},"cursor":{"y":16}}],[0.256187,{"lines":{"37":[["                                                                                 87,7          Bot ",{}]]},"cursor":{"x":6,"y":15}}],[0.231742,{"lines":{"37":[["                                                                                 86,0-1        Bot ",{}]]},"cursor":{"x":0,"y":14}}],[0.176025,{"lines":{"37":[["                                                                                 85,10         Bot ",{}]]},"cursor":{"x":9,"y":13}}],[0.15203,{"lines":{"37":[["                                                                                 84,10         Bot ",{}]]},"cursor":{"y":12}}],[0.592002,{"lines":{"37":[["                                                                                 83,10         Bot ",{}]]},"cursor":{"y":11}}],[0.499236,{"lines":{"37":[["                                                                                 82,0-1        Bot ",{}]]},"cursor":{"x":0,"y":10}}],[0.032518,{"lines":{"37":[["                                                                                 81,0-1        Bot ",{}]]},"cursor":{"y":9}}],[0.029986,{"lines":{"37":[["                                                                                 80,2          Bot ",{}]]},"cursor":{"x":1,"y":8}}],[0.036681,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                                ",{}]],"7":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 79,5          Bot ",{}]]},"cursor":{"x":4,"y":7}}],[0.02883,{"lines":{"4":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"7":[["    }                                                                                              ",{}]],"37":[["                                                                                 78,10         Bot ",{}]]},"cursor":{"x":9,"y":6}}],[0.027699,{"lines":{"37":[["                                                                                 77,10         Bot ",{}]]},"cursor":{"y":5}}],[0.031307,{"lines":{"37":[["                                                                                 76,10         Bot ",{}]]},"cursor":{"y":4}}],[0.029359,{"lines":{"37":[["                                                                                 75,10         Bot ",{}]]},"cursor":{"y":3}}],[0.030481,{"lines":{"37":[["                                                                                 74,0-1        Bot ",{}]]},"cursor":{"x":0,"y":2}}],[0.032706,{"lines":{"37":[["                                                                                 73,5          Bot ",{}]]},"cursor":{"x":4,"y":1}}],[0.029737,{"lines":{"37":[["                                                                                 72,10         Bot ",{}]]},"cursor":{"x":9,"y":0}}],[0.031943,{"lines":{"0":[["        Update(now);                                                                               ",{}]],"1":[["        buckets.AddToBack(count);                                                                  ",{}]],"2":[["    }                                                                                              ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"5":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"6":[["        Update(now);                                                                               ",{}]],"7":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["};                                                                                                 ",{}]],"11":[["                                                                                                   ",{}]],"12":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"13":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"14":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"15":[["                                                                                                   ",{}]],"16":[["public",{"fg":3}],[":                                                                                            ",{}]],"17":[["    MinuteHourCounter() :                                                                          ",{}]],"18":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"19":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"23":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"24":[["        minute_counts.Add(count, now);                                                             ",{}]],"25":[["        hour_counts.Add(count, now);                                                               ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"29":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"30":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"34":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"35":[["        ",{}],["return",{"fg":3}],[" hour_counts.TrailingCount(now);                                                     ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 71,10         98% ",{}]]}}],[0.03444,{"lines":{"0":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"1":[["        Update(now);                                                                               ",{}]],"2":[["        buckets.AddToBack(count);                                                                  ",{}]],"3":[["    }                                                                                              ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"6":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"7":[["        Update(now);                                                                               ",{}]],"8":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["};                                                                                                 ",{}]],"12":[["                                                                                                   ",{}]],"13":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"14":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"15":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"16":[["                                                                                                   ",{}]],"17":[["public",{"fg":3}],[":                                                                                            ",{}]],"18":[["    MinuteHourCounter() :                                                                          ",{}]],"19":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"20":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"21":[["    }                                                                                              ",{}]],"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"24":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"25":[["        minute_counts.Add(count, now);                                                             ",{}]],"26":[["        hour_counts.Add(count, now);                                                               ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"30":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"31":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"35":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"36":[["        ",{}],["return",{"fg":3}],[" hour_counts.TrailingCount(now);                                                     ",{}]],"37":[["                                                                                 70,10         97% ",{}]]}}],[0.031138,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"2":[["        Update(now);                                                                               ",{}]],"3":[["        buckets.AddToBack(count);                                                                  ",{}]],"4":[["    }                                                                                              ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"7":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"8":[["        Update(now);                                                                               ",{}]],"9":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"10":[["    }                                                                                              ",{}]],"11":[["};                                                                                                 ",{}]],"13":[["                                                                                                   ",{}]],"14":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"15":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"16":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"17":[["                                                                                                   ",{}]],"18":[["public",{"fg":3}],[":                                                                                            ",{}]],"19":[["    MinuteHourCounter() :                                                                          ",{}]],"20":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"21":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"25":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"26":[["        minute_counts.Add(count, now);                                                             ",{}]],"27":[["        hour_counts.Add(count, now);                                                               ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"31":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"32":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"36":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"37":[["                                                                                 69,0-1        95% ",{}]]},"cursor":{"x":0}}],[0.031576,{"lines":{"0":[["    }                                                                                              ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"3":[["        Update(now);                                                                               ",{}]],"4":[["        buckets.AddToBack(count);                                                                  ",{}]],"5":[["    }                                                                                              ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"8":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"9":[["        Update(now);                                                                               ",{}]],"10":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"11":[["    }                                                                                              ",{}]],"12":[["};                                                                                                 ",{}]],"14":[["                                                                                                   ",{}]],"15":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"16":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"17":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"18":[["                                                                                                   ",{}]],"19":[["public",{"fg":3}],[":                                                                                            ",{}]],"20":[["    MinuteHourCounter() :                                                                          ",{}]],"21":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"22":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"26":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"27":[["        minute_counts.Add(count, now);                                                             ",{}]],"28":[["        hour_counts.Add(count, now);                                                               ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"32":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"33":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"37":[["                                                                                 68,5          94% ",{}]]},"cursor":{"x":4}}],[0.032089,{"lines":{"0":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"1":[["    }                                                                                              ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"4":[["        Update(now);                                                                               ",{}]],"5":[["        buckets.AddToBack(count);                                                                  ",{}]],"6":[["    }                                                                                              ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"9":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"10":[["        Update(now);                                                                               ",{}]],"11":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"12":[["    }                                                                                              ",{}]],"13":[["};                                                                                                 ",{}]],"15":[["                                                                                                   ",{}]],"16":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"17":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"18":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"19":[["                                                                                                   ",{}]],"20":[["public",{"fg":3}],[":                                                                                            ",{}]],"21":[["    MinuteHourCounter() :                                                                          ",{}]],"22":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"23":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"27":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"28":[["        minute_counts.Add(count, now);                                                             ",{}]],"29":[["        hour_counts.Add(count, now);                                                               ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"33":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"34":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 67,10         92% ",{}]]},"cursor":{"x":9}}],[0.030617,{"lines":{"0":[["        buckets(num_buckets),                                                                      ",{}]],"1":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"2":[["    }                                                                                              ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"5":[["        Update(now);                                                                               ",{}]],"6":[["        buckets.AddToBack(count);                                                                  ",{}]],"7":[["    }                                                                                              ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"10":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"11":[["        Update(now);                                                                               ",{}]],"12":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["};                                                                                                 ",{}]],"16":[["                                                                                                   ",{}]],"17":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"18":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"19":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"20":[["                                                                                                   ",{}]],"21":[["public",{"fg":3}],[":                                                                                            ",{}]],"22":[["    MinuteHourCounter() :                                                                          ",{}]],"23":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"24":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"28":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"29":[["        minute_counts.Add(count, now);                                                             ",{}]],"30":[["        hour_counts.Add(count, now);                                                               ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"34":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"35":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 66,10         91% ",{}]]}}],[0.030443,{"lines":{"0":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"1":[["        buckets(num_buckets),                                                                      ",{}]],"2":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"3":[["    }                                                                                              ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"6":[["        Update(now);                                                                               ",{}]],"7":[["        buckets.AddToBack(count);                                                                  ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"11":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"12":[["        Update(now);                                                                               ",{}]],"13":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["};                                                                                                 ",{}]],"17":[["                                                                                                   ",{}]],"18":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"19":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"20":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"21":[["                                                                                                   ",{}]],"22":[["public",{"fg":3}],[":                                                                                            ",{}]],"23":[["    MinuteHourCounter() :                                                                          ",{}]],"24":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"25":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"29":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"30":[["        minute_counts.Add(count, now);                                                             ",{}]],"31":[["        hour_counts.Add(count, now);                                                               ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"35":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"36":[["        ",{}],["return",{"fg":3}],[" minute_counts.TrailingCount(now);                                                   ",{}]],"37":[["                                                                                 65,10         90% ",{}]]}}],[0.145427,{"lines":{"0":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"1":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"2":[["        buckets(num_buckets),                                                                      ",{}]],"3":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"4":[["    }                                                                                              ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"7":[["        Update(now);                                                                               ",{}]],"8":[["        buckets.AddToBack(count);                                                                  ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"12":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"13":[["        Update(now);                                                                               ",{}]],"14":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"15":[["    }                                                                                              ",{}]],"16":[["};                                                                                                 ",{}]],"18":[["                                                                                                   ",{}]],"19":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"20":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"21":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"22":[["                                                                                                   ",{}]],"23":[["public",{"fg":3}],[":                                                                                            ",{}]],"24":[["    MinuteHourCounter() :                                                                          ",{}]],"25":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"26":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"30":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"31":[["        minute_counts.Add(count, now);                                                             ",{}]],"32":[["        hour_counts.Add(count, now);                                                               ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"36":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"37":[["                                                                                 64,10         88% ",{}]]}}],[0.183806,{"lines":{"0":[["public",{"fg":3}],[":                                                                                            ",{}]],"1":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"2":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"3":[["        buckets(num_buckets),                                                                      ",{}]],"4":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"5":[["    }                                                                                              ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"8":[["        Update(now);                                                                               ",{}]],"9":[["        buckets.AddToBack(count);                                                                  ",{}]],"10":[["    }                                                                                              ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"13":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"14":[["        Update(now);                                                                               ",{}]],"15":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"16":[["    }                                                                                              ",{}]],"17":[["};                                                                                                 ",{}]],"19":[["                                                                                                   ",{}]],"20":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"21":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"22":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"23":[["                                                                                                   ",{}]],"24":[["public",{"fg":3}],[":                                                                                            ",{}]],"25":[["    MinuteHourCounter() :                                                                          ",{}]],"26":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"27":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"31":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"32":[["        minute_counts.Add(count, now);                                                             ",{}]],"33":[["        hour_counts.Add(count, now);                                                               ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"37":[["                                                                                 63,7          87% ",{}]]},"cursor":{"x":6}}],[0.143948,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["public",{"fg":3}],[":                                                                                            ",{}]],"2":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"3":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"4":[["        buckets(num_buckets),                                                                      ",{}]],"5":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"6":[["    }                                                                                              ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"9":[["        Update(now);                                                                               ",{}]],"10":[["        buckets.AddToBack(count);                                                                  ",{}]],"11":[["    }                                                                                              ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"14":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"15":[["        Update(now);                                                                               ",{}]],"16":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"17":[["    }                                                                                              ",{}]],"18":[["};                                                                                                 ",{}]],"20":[["                                                                                                   ",{}]],"21":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"22":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"23":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"24":[["                                                                                                   ",{}]],"25":[["public",{"fg":3}],[":                                                                                            ",{}]],"26":[["    MinuteHourCounter() :                                                                          ",{}]],"27":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"28":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"32":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"33":[["        minute_counts.Add(count, now);                                                             ",{}]],"34":[["        hour_counts.Add(count, now);                                                               ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 62,0-1        85% ",{}]]},"cursor":{"x":0}}],[0.152514,{"lines":{"0":[["    }                                                                                              ",{}]],"1":[["                                                                                                   ",{}]],"2":[["public",{"fg":3}],[":                                                                                            ",{}]],"3":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"4":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"5":[["        buckets(num_buckets),                                                                      ",{}]],"6":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"7":[["    }                                                                                              ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"10":[["        Update(now);                                                                               ",{}]],"11":[["        buckets.AddToBack(count);                                                                  ",{}]],"12":[["    }                                                                                              ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"15":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"16":[["        Update(now);                                                                               ",{}]],"17":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"18":[["    }                                                                                              ",{}]],"19":[["};                                                                                                 ",{}]],"21":[["                                                                                                   ",{}]],"22":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"23":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"24":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"25":[["                                                                                                   ",{}]],"26":[["public",{"fg":3}],[":                                                                                            ",{}]],"27":[["    MinuteHourCounter() :                                                                          ",{}]],"28":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"29":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"33":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"34":[["        minute_counts.Add(count, now);                                                             ",{}]],"35":[["        hour_counts.Add(count, now);                                                               ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 61,5          84% ",{}]]},"cursor":{"x":4}}],[0.159674,{"lines":{"0":[["        last_update_time = now;                                                                    ",{}]],"1":[["    }                                                                                              ",{}]],"2":[["                                                                                                   ",{}]],"3":[["public",{"fg":3}],[":                                                                                            ",{}]],"4":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"5":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"6":[["        buckets(num_buckets),                                                                      ",{}]],"7":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"11":[["        Update(now);                                                                               ",{}]],"12":[["        buckets.AddToBack(count);                                                                  ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"16":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"17":[["        Update(now);                                                                               ",{}]],"18":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"19":[["    }                                                                                              ",{}]],"20":[["};                                                                                                 ",{}]],"22":[["                                                                                                   ",{}]],"23":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"24":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"25":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"26":[["                                                                                                   ",{}]],"27":[["public",{"fg":3}],[":                                                                                            ",{}]],"28":[["    MinuteHourCounter() :                                                                          ",{}]],"29":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"30":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"34":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"35":[["        minute_counts.Add(count, now);                                                             ",{}]],"36":[["        hour_counts.Add(count, now);                                                               ",{}]],"37":[["                                                                                 60,10         83% ",{}]]},"cursor":{"x":9}}],[0.144403,{"lines":{"0":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"1":[["        last_update_time = now;                                                                    ",{}]],"2":[["    }                                                                                              ",{}]],"3":[["                                                                                                   ",{}]],"4":[["public",{"fg":3}],[":                                                                                            ",{}]],"5":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"6":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"7":[["        buckets(num_buckets),                                                                      ",{}]],"8":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"12":[["        Update(now);                                                                               ",{}]],"13":[["        buckets.AddToBack(count);                                                                  ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"17":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"18":[["        Update(now);                                                                               ",{}]],"19":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["};                                                                                                 ",{}]],"23":[["                                                                                                   ",{}]],"24":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"25":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"26":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"27":[["                                                                                                   ",{}]],"28":[["public",{"fg":3}],[":                                                                                            ",{}]],"29":[["    MinuteHourCounter() :                                                                          ",{}]],"30":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"31":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"35":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"36":[["        minute_counts.Add(count, now);                                                             ",{}]],"37":[["                                                                                 59,10         81% ",{}]]}}],[0.159531,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"2":[["        last_update_time = now;                                                                    ",{}]],"3":[["    }                                                                                              ",{}]],"4":[["                                                                                                   ",{}]],"5":[["public",{"fg":3}],[":                                                                                            ",{}]],"6":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"7":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"8":[["        buckets(num_buckets),                                                                      ",{}]],"9":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"10":[["    }                                                                                              ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"13":[["        Update(now);                                                                               ",{}]],"14":[["        buckets.AddToBack(count);                                                                  ",{}]],"15":[["    }                                                                                              ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"18":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"19":[["        Update(now);                                                                               ",{}]],"20":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"21":[["    }                                                                                              ",{}]],"22":[["};                                                                                                 ",{}]],"24":[["                                                                                                   ",{}]],"25":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"26":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"27":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"28":[["                                                                                                   ",{}]],"29":[["public",{"fg":3}],[":                                                                                            ",{}]],"30":[["    MinuteHourCounter() :                                                                          ",{}]],"31":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"32":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"36":[["        ",{}],["time_t",{"fg":2}],[" now = time();                                                                       ",{}]],"37":[["                                                                                 58,0-1        80% ",{}]]},"cursor":{"x":0}}],[0.500136,{"lines":{"0":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"1":[["                                                                                                   ",{}]],"2":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"3":[["        last_update_time = now;                                                                    ",{}]],"4":[["    }                                                                                              ",{}]],"5":[["                                                                                                   ",{}]],"6":[["public",{"fg":3}],[":                                                                                            ",{}]],"7":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"8":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"9":[["        buckets(num_buckets),                                                                      ",{}]],"10":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"11":[["    }                                                                                              ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"14":[["        Update(now);                                                                               ",{}]],"15":[["        buckets.AddToBack(count);                                                                  ",{}]],"16":[["    }                                                                                              ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"19":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"20":[["        Update(now);                                                                               ",{}]],"21":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["};                                                                                                 ",{}]],"25":[["                                                                                                   ",{}]],"26":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"27":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"28":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"29":[["                                                                                                   ",{}]],"30":[["public",{"fg":3}],[":                                                                                            ",{}]],"31":[["    MinuteHourCounter() :                                                                          ",{}]],"32":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"33":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"37":[["                                                                                 57,10         78% ",{}]]},"cursor":{"x":9}}],[0.035305,{"lines":{"0":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"1":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"2":[["                                                                                                   ",{}]],"3":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"4":[["        last_update_time = now;                                                                    ",{}]],"5":[["    }                                                                                              ",{}]],"6":[["                                                                                                   ",{}]],"7":[["public",{"fg":3}],[":                                                                                            ",{}]],"8":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"9":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"10":[["        buckets(num_buckets),                                                                      ",{}]],"11":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"12":[["    }                                                                                              ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"15":[["        Update(now);                                                                               ",{}]],"16":[["        buckets.AddToBack(count);                                                                  ",{}]],"17":[["    }                                                                                              ",{}]],"18":[["                                                                                                   ",{}]],"19":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"20":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"21":[["        Update(now);                                                                               ",{}]],"22":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["};                                                                                                 ",{}]],"26":[["                                                                                                   ",{}]],"27":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"28":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"29":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"30":[["                                                                                                   ",{}]],"31":[["public",{"fg":3}],[":                                                                                            ",{}]],"32":[["    MinuteHourCounter() :                                                                          ",{}]],"33":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"34":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 56,10         77% ",{}]]}}],[0.032376,{"lines":{"0":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"1":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"2":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"3":[["                                                                                                   ",{}]],"4":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"5":[["        last_update_time = now;                                                                    ",{}]],"6":[["    }                                                                                              ",{}]],"7":[["                                                                                                   ",{}]],"8":[["public",{"fg":3}],[":                                                                                            ",{}]],"9":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"10":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"11":[["        buckets(num_buckets),                                                                      ",{}]],"12":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"16":[["        Update(now);                                                                               ",{}]],"17":[["        buckets.AddToBack(count);                                                                  ",{}]],"18":[["    }                                                                                              ",{}]],"19":[["                                                                                                   ",{}]],"20":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"21":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"22":[["        Update(now);                                                                               ",{}]],"23":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["};                                                                                                 ",{}]],"27":[["                                                                                                   ",{}]],"28":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"29":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"30":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"31":[["                                                                                                   ",{}]],"32":[["public",{"fg":3}],[":                                                                                            ",{}]],"33":[["    MinuteHourCounter() :                                                                          ",{}]],"34":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"35":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 55,10         76% ",{}]]}}],[0.032122,{"lines":{"0":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"1":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"2":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"3":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"4":[["                                                                                                   ",{}]],"5":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"6":[["        last_update_time = now;                                                                    ",{}]],"7":[["    }                                                                                              ",{}]],"8":[["                                                                                                   ",{}]],"9":[["public",{"fg":3}],[":                                                                                            ",{}]],"10":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"11":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"12":[["        buckets(num_buckets),                                                                      ",{}]],"13":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"17":[["        Update(now);                                                                               ",{}]],"18":[["        buckets.AddToBack(count);                                                                  ",{}]],"19":[["    }                                                                                              ",{}]],"20":[["                                                                                                   ",{}]],"21":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"22":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"23":[["        Update(now);                                                                               ",{}]],"24":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["};                                                                                                 ",{}]],"28":[["                                                                                                   ",{}]],"29":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"30":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"31":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"32":[["                                                                                                   ",{}]],"33":[["public",{"fg":3}],[":                                                                                            ",{}]],"34":[["    MinuteHourCounter() :                                                                          ",{}]],"35":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"36":[["        hour_counts(",{}],["/* num_buckets = */",{"fg":4}],[" ",{}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket */",{"fg":4}],[" ",{}],["60",{"fg":1}],[") {                            ",{}]],"37":[["                                                                                 54,10         74% ",{}]]}}],[0.030471,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"2":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"3":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"4":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"5":[["                                                                                                   ",{}]],"6":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"7":[["        last_update_time = now;                                                                    ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["public",{"fg":3}],[":                                                                                            ",{}]],"11":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"12":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"13":[["        buckets(num_buckets),                                                                      ",{}]],"14":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"15":[["    }                                                                                              ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"18":[["        Update(now);                                                                               ",{}]],"19":[["        buckets.AddToBack(count);                                                                  ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"23":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"24":[["        Update(now);                                                                               ",{}]],"25":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["};                                                                                                 ",{}]],"29":[["                                                                                                   ",{}]],"30":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"31":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"32":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"33":[["                                                                                                   ",{}]],"34":[["public",{"fg":3}],[":                                                                                            ",{}]],"35":[["    MinuteHourCounter() :                                                                          ",{}]],"36":[["        minute_counts(",{}],["/* num_buckets = */",{"fg":4}],["60",{"fg":1}],[", ",{}],["/* secs_per_bucket = */",{"fg":4}],["1",{"fg":1}],["),                            ",{}]],"37":[["                                                                                 53,0-1        73% ",{}]]},"cursor":{"x":0}}],[0.030308,{"lines":{"0":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"3":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"4":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"5":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"6":[["                                                                                                   ",{}]],"7":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"8":[["        last_update_time = now;                                                                    ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["                                                                                                   ",{}]],"11":[["public",{"fg":3}],[":                                                                                            ",{}]],"12":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"13":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"14":[["        buckets(num_buckets),                                                                      ",{}]],"15":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"16":[["    }                                                                                              ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"19":[["        Update(now);                                                                               ",{}]],"20":[["        buckets.AddToBack(count);                                                                  ",{}]],"21":[["    }                                                                                              ",{}]],"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"24":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"25":[["        Update(now);                                                                               ",{}]],"26":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["};                                                                                                 ",{}]],"30":[["                                                                                                   ",{}]],"31":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"32":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"33":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"34":[["                                                                                                   ",{}]],"35":[["public",{"fg":3}],[":                                                                                            ",{}]],"36":[["    MinuteHourCounter() :                                                                          ",{}]],"37":[["                                                                                 52,10         71% ",{}]]},"cursor":{"x":9}}],[0.030587,{"lines":{"0":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"1":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"4":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"5":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"6":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"7":[["                                                                                                   ",{}]],"8":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"9":[["        last_update_time = now;                                                                    ",{}]],"10":[["    }                                                                                              ",{}]],"11":[["                                                                                                   ",{}]],"12":[["public",{"fg":3}],[":                                                                                            ",{}]],"13":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"14":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"15":[["        buckets(num_buckets),                                                                      ",{}]],"16":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"17":[["    }                                                                                              ",{}]],"18":[["                                                                                                   ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"20":[["        Update(now);                                                                               ",{}]],"21":[["        buckets.AddToBack(count);                                                                  ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"25":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"26":[["        Update(now);                                                                               ",{}]],"27":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["};                                                                                                 ",{}]],"31":[["                                                                                                   ",{}]],"32":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"33":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"34":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"35":[["                                                                                                   ",{}]],"36":[["public",{"fg":3}],[":                                                                                            ",{}]],"37":[["                                                                                 51,10         70% ",{}]]}}],[0.030658,{"lines":{"0":[["    ConveyorQueue buckets;                                                                         ",{}]],"1":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"2":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"5":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"6":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"7":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"8":[["                                                                                                   ",{}]],"9":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"10":[["        last_update_time = now;                                                                    ",{}]],"11":[["    }                                                                                              ",{}]],"12":[["                                                                                                   ",{}]],"13":[["public",{"fg":3}],[":                                                                                            ",{}]],"14":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"15":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"16":[["        buckets(num_buckets),                                                                      ",{}]],"17":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"18":[["    }                                                                                              ",{}]],"19":[["                                                                                                   ",{}]],"20":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"21":[["        Update(now);                                                                               ",{}]],"22":[["        buckets.AddToBack(count);                                                                  ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"26":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"27":[["        Update(now);                                                                               ",{}]],"28":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["};                                                                                                 ",{}]],"32":[["                                                                                                   ",{}]],"33":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"34":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"35":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 50,10         69% ",{}]]}}],[0.030941,{"lines":{"0":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"1":[["    ConveyorQueue buckets;                                                                         ",{}]],"2":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"3":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"6":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"7":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"8":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"9":[["                                                                                                   ",{}]],"10":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"11":[["        last_update_time = now;                                                                    ",{}]],"12":[["    }                                                                                              ",{}]],"13":[["                                                                                                   ",{}]],"14":[["public",{"fg":3}],[":                                                                                            ",{}]],"15":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"16":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"17":[["        buckets(num_buckets),                                                                      ",{}]],"18":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"19":[["    }                                                                                              ",{}]],"20":[["                                                                                                   ",{}]],"21":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"22":[["        Update(now);                                                                               ",{}]],"23":[["        buckets.AddToBack(count);                                                                  ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"27":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"28":[["        Update(now);                                                                               ",{}]],"29":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["};                                                                                                 ",{}]],"33":[["                                                                                                   ",{}]],"34":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"35":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"36":[["    TrailingBucketCounter hour_counts;                                                             ",{}]],"37":[["                                                                                 49,10         67% ",{}]]}}],[0.029824,{"lines":{"0":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"1":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"2":[["    ConveyorQueue buckets;                                                                         ",{}]],"3":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"4":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"7":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"8":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"9":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"10":[["                                                                                                   ",{}]],"11":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"12":[["        last_update_time = now;                                                                    ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["public",{"fg":3}],[":                                                                                            ",{}]],"16":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"17":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"18":[["        buckets(num_buckets),                                                                      ",{}]],"19":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"23":[["        Update(now);                                                                               ",{}]],"24":[["        buckets.AddToBack(count);                                                                  ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"28":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"29":[["        Update(now);                                                                               ",{}]],"30":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["};                                                                                                 ",{}]],"34":[["                                                                                                   ",{}]],"35":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"36":[["    TrailingBucketCounter minute_counts;                                                           ",{}]],"37":[["                                                                                 48,10         66% ",{}]]}}],[0.313202,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"2":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"3":[["    ConveyorQueue buckets;                                                                         ",{}]],"4":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"5":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"8":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"9":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"10":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"11":[["                                                                                                   ",{}]],"12":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"13":[["        last_update_time = now;                                                                    ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["                                                                                                   ",{}]],"16":[["public",{"fg":3}],[":                                                                                            ",{}]],"17":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"18":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"19":[["        buckets(num_buckets),                                                                      ",{}]],"20":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"21":[["    }                                                                                              ",{}]],"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"24":[["        Update(now);                                                                               ",{}]],"25":[["        buckets.AddToBack(count);                                                                  ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"29":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"30":[["        Update(now);                                                                               ",{}]],"31":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["};                                                                                                 ",{}]],"35":[["                                                                                                   ",{}]],"36":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"37":[["                                                                                 47,0-1        64% ",{}]]},"cursor":{"x":0}}],[0.400199,{"lines":{"37":[["                                                                                 48,10         64% ",{}]]},"cursor":{"x":9,"y":1}}],[0.21582,{"lines":{"37":[["                                                                                 49,10         64% ",{}]]},"cursor":{"y":2}}],[0.17614,{"lines":{"37":[["                                                                                 50,10         64% ",{}]]},"cursor":{"y":3}}],[0.167836,{"lines":{"37":[["                                                                                 51,10         64% ",{}]]},"cursor":{"y":4}}],[0.176108,{"lines":{"37":[["                                                                                 52,10         64% ",{}]]},"cursor":{"y":5}}],[0.27188,{"lines":{"37":[["                                                                                 51,10         64% ",{}]]},"cursor":{"y":4}}],[0.183951,{"lines":{"37":[["                                                                                 50,10         64% ",{}]]},"cursor":{"y":3}}],[0.384182,{"lines":{"37":[["                                                                                 51,10         64% ",{}]]},"cursor":{"y":4}}],[0.30336,{"lines":{"37":[["                                                                                 52,10         64% ",{}]]},"cursor":{"y":5}}],[1.080469,{"lines":{"37":[["                                                                                 53,0-1        64% ",{}]]},"cursor":{"x":0,"y":6}}],[0.168105,{"lines":{"37":[["                                                                                 54,10         64% ",{}]]},"cursor":{"x":9,"y":7}}],[0.168135,{"lines":{"37":[["                                                                                 55,10         64% ",{}]]},"cursor":{"y":8}}],[0.207704,{"lines":{"37":[["                                                                                 56,10         64% ",{}]]},"cursor":{"y":9}}],[0.501013,{"lines":{"37":[["                                                                                 57,10         64% ",{}]]},"cursor":{"y":10}}],[0.029677,{"lines":{"37":[["                                                                                 58,0-1        64% ",{}]]},"cursor":{"x":0,"y":11}}],[0.032652,{"lines":{"37":[["                                                                                 59,10         64% ",{}]]},"cursor":{"x":9,"y":12}}],[0.030538,{"lines":{"37":[["                                                                                 60,10         64% ",{}]]},"cursor":{"y":13}}],[0.0355,{"lines":{"8":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                                      ",{}]],"14":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 61,5          64% ",{}]]},"cursor":{"x":4,"y":14}}],[0.029654,{"lines":{"8":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"14":[["    }                                                                                              ",{}]],"37":[["                                                                                 62,0-1        64% ",{}]]},"cursor":{"x":0,"y":15}}],[0.204952,{"lines":{"37":[["                                                                                 63,7          64% ",{}]]},"cursor":{"x":6,"y":16}}],[0.167969,{"lines":{"37":[["                                                                                 64,10         64% ",{}]]},"cursor":{"x":9,"y":17}}],[0.160111,{"lines":{"37":[["                                                                                 65,10         64% ",{}]]},"cursor":{"y":18}}],[0.160035,{"lines":{"37":[["                                                                                 66,10         64% ",{}]]},"cursor":{"y":19}}],[0.15215,{"lines":{"37":[["                                                                                 67,10         64% ",{}]]},"cursor":{"y":20}}],[0.164339,{"lines":{"20":[["        secs_per_bucket(secs_per_bucket) ",{}],["{",{"bg":6}],["                                                         ",{}]],"21":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 68,5          64% ",{}]]},"cursor":{"x":4,"y":21}}],[0.167148,{"lines":{"20":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"21":[["    }                                                                                              ",{}]],"37":[["                                                                                 69,0-1        64% ",{}]]},"cursor":{"x":0,"y":22}}],[0.164376,{"lines":{"37":[["                                                                                 70,10         64% ",{}]]},"cursor":{"x":9,"y":23}}],[0.167979,{"lines":{"37":[["                                                                                 71,10         64% ",{}]]},"cursor":{"y":24}}],[0.392043,{"lines":{"37":[["                                                                                 72,10         64% ",{}]]},"cursor":{"y":25}}],[4.284499,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                              ",{}]],"26":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 73,5          64% ",{}]]},"cursor":{"x":4,"y":26}}],[0.199041,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"26":[["    }                                                                                              ",{}]],"37":[["                                                                                 74,0-1        64% ",{}]]},"cursor":{"x":0,"y":27}}],[0.156615,{"lines":{"37":[["                                                                                 75,10         64% ",{}]]},"cursor":{"x":9,"y":28}}],[0.152274,{"lines":{"37":[["                                                                                 76,10         64% ",{}]]},"cursor":{"y":29}}],[0.151612,{"lines":{"37":[["                                                                                 77,10         64% ",{}]]},"cursor":{"y":30}}],[1.895934,{"lines":{"37":[["                                                                                 76,10         64% ",{}]]},"cursor":{"y":29}}],[0.168237,{"lines":{"37":[["                                                                                 75,10         64% ",{}]]},"cursor":{"y":28}}],[0.15972,{"lines":{"37":[["                                                                                 74,0-1        64% ",{}]]},"cursor":{"x":0,"y":27}}],[0.164543,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                              ",{}]],"26":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 73,5          64% ",{}]]},"cursor":{"x":4,"y":26}}],[0.166974,{"lines":{"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"26":[["    }                                                                                              ",{}]],"37":[["                                                                                 72,10         64% ",{}]]},"cursor":{"x":9,"y":25}}],[0.148598,{"lines":{"37":[["                                                                                 71,10         64% ",{}]]},"cursor":{"y":24}}],[0.423794,{"lines":{"37":[["                                                                                 70,10         64% ",{}]]},"cursor":{"y":23}}],[0.500066,{"lines":{"37":[["                                                                                 69,0-1        64% ",{}]]},"cursor":{"x":0,"y":22}}],[0.035676,{"lines":{"20":[["        secs_per_bucket(secs_per_bucket) ",{}],["{",{"bg":6}],["                                                         ",{}]],"21":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 68,5          64% ",{}]]},"cursor":{"x":4,"y":21}}],[0.029866,{"lines":{"20":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"21":[["    }                                                                                              ",{}]],"37":[["                                                                                 67,10         64% ",{}]]},"cursor":{"x":9,"y":20}}],[0.028119,{"lines":{"37":[["                                                                                 66,10         64% ",{}]]},"cursor":{"y":19}}],[0.030303,{"lines":{"37":[["                                                                                 65,10         64% ",{}]]},"cursor":{"y":18}}],[0.031104,{"lines":{"37":[["                                                                                 64,10         64% ",{}]]},"cursor":{"y":17}}],[0.028739,{"lines":{"37":[["                                                                                 63,7          64% ",{}]]},"cursor":{"x":6,"y":16}}],[0.030957,{"lines":{"37":[["                                                                                 62,0-1        64% ",{}]]},"cursor":{"x":0,"y":15}}],[0.12216,{"lines":{"8":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) ",{}],["{",{"bg":6}],["                                                                      ",{}]],"14":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 61,5          64% ",{}]]},"cursor":{"x":4,"y":14}}],[0.166698,{"lines":{"8":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"14":[["    }                                                                                              ",{}]],"37":[["                                                                                 60,10         64% ",{}]]},"cursor":{"x":9,"y":13}}],[0.1564,{"lines":{"37":[["                                                                                 59,10         64% ",{}]]},"cursor":{"y":12}}],[0.151987,{"lines":{"37":[["                                                                                 58,0-1        64% ",{}]]},"cursor":{"x":0,"y":11}}],[0.151958,{"lines":{"37":[["                                                                                 57,10         64% ",{}]]},"cursor":{"x":9,"y":10}}],[0.168018,{"lines":{"37":[["                                                                                 56,10         64% ",{}]]},"cursor":{"y":9}}],[0.344527,{"lines":{"37":[["                                                                                 57,10         64% ",{}]]},"cursor":{"y":10}}],[0.175549,{"lines":{"37":[["                                                                                 58,0-1        64% ",{}]]},"cursor":{"x":0,"y":11}}],[0.168001,{"lines":{"37":[["                                                                                 59,10         64% ",{}]]},"cursor":{"x":9,"y":12}}],[0.159884,{"lines":{"37":[["                                                                                 60,10         64% ",{}]]},"cursor":{"y":13}}],[0.816022,{"lines":{"37":[["                                                                                 59,10         64% ",{}]]},"cursor":{"y":12}}],[0.499927,{"lines":{"37":[["                                                                                 58,0-1        64% ",{}]]},"cursor":{"x":0,"y":11}}],[0.03285,{"lines":{"37":[["                                                                                 57,10         64% ",{}]]},"cursor":{"x":9,"y":10}}],[0.029434,{"lines":{"37":[["                                                                                 56,10         64% ",{}]]},"cursor":{"y":9}}],[0.031468,{"lines":{"37":[["                                                                                 55,10         64% ",{}]]},"cursor":{"y":8}}],[0.030906,{"lines":{"37":[["                                                                                 54,10         64% ",{}]]},"cursor":{"y":7}}],[0.030088,{"lines":{"37":[["                                                                                 53,0-1        64% ",{}]]},"cursor":{"x":0,"y":6}}],[0.030582,{"lines":{"37":[["                                                                                 52,10         64% ",{}]]},"cursor":{"x":9,"y":5}}],[0.031647,{"lines":{"37":[["                                                                                 51,10         64% ",{}]]},"cursor":{"y":4}}],[0.029648,{"lines":{"37":[["                                                                                 50,10         64% ",{}]]},"cursor":{"y":3}}],[0.030952,{"lines":{"37":[["                                                                                 49,10         64% ",{}]]},"cursor":{"y":2}}],[0.030412,{"lines":{"37":[["                                                                                 48,10         64% ",{}]]},"cursor":{"y":1}}],[0.030875,{"lines":{"37":[["                                                                                 47,0-1        64% ",{}]]},"cursor":{"x":0,"y":0}}],[0.030771,{"lines":{"0":[["};                                                                                                 ",{}]],"1":[["                                                                                                   ",{}]],"2":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"3":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"4":[["    ConveyorQueue buckets;                                                                         ",{}]],"5":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"6":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"9":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"10":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"11":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"12":[["                                                                                                   ",{}]],"13":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"14":[["        last_update_time = now;                                                                    ",{}]],"15":[["    }                                                                                              ",{}]],"16":[["                                                                                                   ",{}]],"17":[["public",{"fg":3}],[":                                                                                            ",{}]],"18":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"19":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"20":[["        buckets(num_buckets),                                                                      ",{}]],"21":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"25":[["        Update(now);                                                                               ",{}]],"26":[["        buckets.AddToBack(count);                                                                  ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"30":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"31":[["        Update(now);                                                                               ",{}]],"32":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["};                                                                                                 ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 46,2          63% ",{}]]},"cursor":{"x":1}}],[0.03196,{"lines":{"0":[["    }                                                                                              ",{}]],"1":[["};                                                                                                 ",{}]],"2":[["                                                                                                   ",{}]],"3":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"4":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"5":[["    ConveyorQueue buckets;                                                                         ",{}]],"6":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"7":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"10":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"11":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"12":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"13":[["                                                                                                   ",{}]],"14":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"15":[["        last_update_time = now;                                                                    ",{}]],"16":[["    }                                                                                              ",{}]],"17":[["                                                                                                   ",{}]],"18":[["public",{"fg":3}],[":                                                                                            ",{}]],"19":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"20":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"21":[["        buckets(num_buckets),                                                                      ",{}]],"22":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"26":[["        Update(now);                                                                               ",{}]],"27":[["        buckets.AddToBack(count);                                                                  ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"31":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"32":[["        Update(now);                                                                               ",{}]],"33":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["};                                                                                                 ",{}]],"37":[["                                                                                 45,5          61% ",{}]]},"cursor":{"x":4}}],[0.029724,{"lines":{"0":[["        }                                                                                          ",{}]],"1":[["    }                                                                                              ",{}]],"2":[["};                                                                                                 ",{}]],"3":[["                                                                                                   ",{}]],"4":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"5":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"6":[["    ConveyorQueue buckets;                                                                         ",{}]],"7":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"8":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"11":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"12":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"13":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"14":[["                                                                                                   ",{}]],"15":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"16":[["        last_update_time = now;                                                                    ",{}]],"17":[["    }                                                                                              ",{}]],"18":[["                                                                                                   ",{}]],"19":[["public",{"fg":3}],[":                                                                                            ",{}]],"20":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"21":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"22":[["        buckets(num_buckets),                                                                      ",{}]],"23":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"27":[["        Update(now);                                                                               ",{}]],"28":[["        buckets.AddToBack(count);                                                                  ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"32":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"33":[["        Update(now);                                                                               ",{}]],"34":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["                                                                                 44,9          60% ",{}]]},"cursor":{"x":8}}],[0.029427,{"lines":{"0":[["            q.pop();                                                                               ",{}]],"1":[["        }                                                                                          ",{}]],"2":[["    }                                                                                              ",{}]],"3":[["};                                                                                                 ",{}]],"4":[["                                                                                                   ",{}]],"5":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"6":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"7":[["    ConveyorQueue buckets;                                                                         ",{}]],"8":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"9":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"13":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"14":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"15":[["                                                                                                   ",{}]],"16":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"17":[["        last_update_time = now;                                                                    ",{}]],"18":[["    }                                                                                              ",{}]],"19":[["                                                                                                   ",{}]],"20":[["public",{"fg":3}],[":                                                                                            ",{}]],"21":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"22":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"23":[["        buckets(num_buckets),                                                                      ",{}]],"24":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"28":[["        Update(now);                                                                               ",{}]],"29":[["        buckets.AddToBack(count);                                                                  ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"33":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"34":[["        Update(now);                                                                               ",{}]],"35":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 43,10         59% ",{}]]},"cursor":{"x":9}}],[0.035271,{"lines":{"0":[["            total_sum -= q.front();                                                                ",{}]],"1":[["            q.pop();                                                                               ",{}]],"2":[["        }                                                                                          ",{}]],"3":[["    }                                                                                              ",{}]],"4":[["};                                                                                                 ",{}]],"5":[["                                                                                                   ",{}]],"6":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"7":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"8":[["    ConveyorQueue buckets;                                                                         ",{}]],"9":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"10":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"14":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"15":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"16":[["                                                                                                   ",{}]],"17":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"18":[["        last_update_time = now;                                                                    ",{}]],"19":[["    }                                                                                              ",{}]],"20":[["                                                                                                   ",{}]],"21":[["public",{"fg":3}],[":                                                                                            ",{}]],"22":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"23":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"24":[["        buckets(num_buckets),                                                                      ",{}]],"25":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"29":[["        Update(now);                                                                               ",{}]],"30":[["        buckets.AddToBack(count);                                                                  ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"35":[["        Update(now);                                                                               ",{}]],"36":[["        ",{}],["return",{"fg":3}],[" buckets.TotalSum();                                                                 ",{}]],"37":[["                                                                                 42,10         57% ",{}]]}}],[0.026359,{"lines":{"0":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"1":[["            total_sum -= q.front();                                                                ",{}]],"2":[["            q.pop();                                                                               ",{}]],"3":[["        }                                                                                          ",{}]],"4":[["    }                                                                                              ",{}]],"5":[["};                                                                                                 ",{}]],"6":[["                                                                                                   ",{}]],"7":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"8":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"9":[["    ConveyorQueue buckets;                                                                         ",{}]],"10":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"11":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"15":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"16":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"17":[["                                                                                                   ",{}]],"18":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"19":[["        last_update_time = now;                                                                    ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["public",{"fg":3}],[":                                                                                            ",{}]],"23":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"24":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"25":[["        buckets(num_buckets),                                                                      ",{}]],"26":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"30":[["        Update(now);                                                                               ",{}]],"31":[["        buckets.AddToBack(count);                                                                  ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"35":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"36":[["        Update(now);                                                                               ",{}]],"37":[["                                                                                 41,10         56% ",{}]]}}],[0.433962,{"lines":{"0":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"1":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"2":[["            total_sum -= q.front();                                                                ",{}]],"3":[["            q.pop();                                                                               ",{}]],"4":[["        }                                                                                          ",{}]],"5":[["    }                                                                                              ",{}]],"6":[["};                                                                                                 ",{}]],"7":[["                                                                                                   ",{}]],"8":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"9":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"10":[["    ConveyorQueue buckets;                                                                         ",{}]],"11":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"12":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"15":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"16":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"17":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"18":[["                                                                                                   ",{}]],"19":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"20":[["        last_update_time = now;                                                                    ",{}]],"21":[["    }                                                                                              ",{}]],"22":[["                                                                                                   ",{}]],"23":[["public",{"fg":3}],[":                                                                                            ",{}]],"24":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"25":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"26":[["        buckets(num_buckets),                                                                      ",{}]],"27":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"31":[["        Update(now);                                                                               ",{}]],"32":[["        buckets.AddToBack(count);                                                                  ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"36":[["    ",{}],["int",{"fg":2}],[" TrailingCount(",{}],["time_t",{"fg":2}],[" now) {                                                                ",{}]],"37":[["                                                                                 40,10         54% ",{}]]}}],[0.500348,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"2":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"3":[["            total_sum -= q.front();                                                                ",{}]],"4":[["            q.pop();                                                                               ",{}]],"5":[["        }                                                                                          ",{}]],"6":[["    }                                                                                              ",{}]],"7":[["};                                                                                                 ",{}]],"8":[["                                                                                                   ",{}]],"9":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"10":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"11":[["    ConveyorQueue buckets;                                                                         ",{}]],"12":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"13":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"16":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"17":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"18":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"19":[["                                                                                                   ",{}]],"20":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"21":[["        last_update_time = now;                                                                    ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["                                                                                                   ",{}]],"24":[["public",{"fg":3}],[":                                                                                            ",{}]],"25":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"26":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"27":[["        buckets(num_buckets),                                                                      ",{}]],"28":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"32":[["        Update(now);                                                                               ",{}]],"33":[["        buckets.AddToBack(count);                                                                  ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["// Return the total count over the last num_buckets worth of time",{"fg":4}],["                              ",{}]],"37":[["                                                                                 39,0-1        53% ",{}]]},"cursor":{"x":0}}],[0.037175,{"lines":{"0":[["        }                                                                                          ",{}]],"1":[["                                                                                                   ",{}]],"2":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"3":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"4":[["            total_sum -= q.front();                                                                ",{}]],"5":[["            q.pop();                                                                               ",{}]],"6":[["        }                                                                                          ",{}]],"7":[["    }                                                                                              ",{}]],"8":[["};                                                                                                 ",{}]],"9":[["                                                                                                   ",{}]],"10":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"11":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"12":[["    ConveyorQueue buckets;                                                                         ",{}]],"13":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"14":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"17":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"18":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"19":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"20":[["                                                                                                   ",{}]],"21":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"22":[["        last_update_time = now;                                                                    ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["public",{"fg":3}],[":                                                                                            ",{}]],"26":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"27":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"28":[["        buckets(num_buckets),                                                                      ",{}]],"29":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"33":[["        Update(now);                                                                               ",{}]],"34":[["        buckets.AddToBack(count);                                                                  ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 38,9          52% ",{}]]},"cursor":{"x":8}}],[0.031333,{"lines":{"0":[["            num_shifted--;                                                                         ",{}]],"1":[["        }                                                                                          ",{}]],"2":[["                                                                                                   ",{}]],"3":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"4":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"5":[["            total_sum -= q.front();                                                                ",{}]],"6":[["            q.pop();                                                                               ",{}]],"7":[["        }                                                                                          ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["};                                                                                                 ",{}]],"10":[["                                                                                                   ",{}]],"11":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"12":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"13":[["    ConveyorQueue buckets;                                                                         ",{}]],"14":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"15":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"18":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"19":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"20":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"21":[["                                                                                                   ",{}]],"22":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"23":[["        last_update_time = now;                                                                    ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["public",{"fg":3}],[":                                                                                            ",{}]],"27":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"28":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"29":[["        buckets(num_buckets),                                                                      ",{}]],"30":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"34":[["        Update(now);                                                                               ",{}]],"35":[["        buckets.AddToBack(count);                                                                  ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 37,10         50% ",{}]]},"cursor":{"x":9}}],[0.031936,{"lines":{"0":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"1":[["            num_shifted--;                                                                         ",{}]],"2":[["        }                                                                                          ",{}]],"3":[["                                                                                                   ",{}]],"4":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"5":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"6":[["            total_sum -= q.front();                                                                ",{}]],"7":[["            q.pop();                                                                               ",{}]],"8":[["        }                                                                                          ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["};                                                                                                 ",{}]],"11":[["                                                                                                   ",{}]],"12":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"13":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"14":[["    ConveyorQueue buckets;                                                                         ",{}]],"15":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"16":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"20":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"21":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"22":[["                                                                                                   ",{}]],"23":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"24":[["        last_update_time = now;                                                                    ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["public",{"fg":3}],[":                                                                                            ",{}]],"28":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"29":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"30":[["        buckets(num_buckets),                                                                      ",{}]],"31":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"35":[["        Update(now);                                                                               ",{}]],"36":[["        buckets.AddToBack(count);                                                                  ",{}]],"37":[["                                                                                 36,10         49% ",{}]]}}],[0.030346,{"lines":{"0":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"1":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"2":[["            num_shifted--;                                                                         ",{}]],"3":[["        }                                                                                          ",{}]],"4":[["                                                                                                   ",{}]],"5":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"6":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"7":[["            total_sum -= q.front();                                                                ",{}]],"8":[["            q.pop();                                                                               ",{}]],"9":[["        }                                                                                          ",{}]],"10":[["    }                                                                                              ",{}]],"11":[["};                                                                                                 ",{}]],"12":[["                                                                                                   ",{}]],"13":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"14":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"15":[["    ConveyorQueue buckets;                                                                         ",{}]],"16":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"17":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"18":[["                                                                                                   ",{}]],"19":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"20":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"21":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"22":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"23":[["                                                                                                   ",{}]],"24":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"25":[["        last_update_time = now;                                                                    ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["public",{"fg":3}],[":                                                                                            ",{}]],"29":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"30":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"31":[["        buckets(num_buckets),                                                                      ",{}]],"32":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"36":[["        Update(now);                                                                               ",{}]],"37":[["                                                                                 35,10         47% ",{}]]}}],[0.030497,{"lines":{"0":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"1":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"2":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"3":[["            num_shifted--;                                                                         ",{}]],"4":[["        }                                                                                          ",{}]],"5":[["                                                                                                   ",{}]],"6":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"7":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"8":[["            total_sum -= q.front();                                                                ",{}]],"9":[["            q.pop();                                                                               ",{}]],"10":[["        }                                                                                          ",{}]],"11":[["    }                                                                                              ",{}]],"12":[["};                                                                                                 ",{}]],"13":[["                                                                                                   ",{}]],"14":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"15":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"16":[["    ConveyorQueue buckets;                                                                         ",{}]],"17":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"18":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"19":[["                                                                                                   ",{}]],"20":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"21":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"22":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"23":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"24":[["                                                                                                   ",{}]],"25":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"26":[["        last_update_time = now;                                                                    ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["public",{"fg":3}],[":                                                                                            ",{}]],"30":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"31":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"32":[["        buckets(num_buckets),                                                                      ",{}]],"33":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" now) {                                                              ",{}]],"37":[["                                                                                 34,10         46% ",{}]]}}],[0.029763,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"2":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"3":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"4":[["            num_shifted--;                                                                         ",{}]],"5":[["        }                                                                                          ",{}]],"6":[["                                                                                                   ",{}]],"7":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"8":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"9":[["            total_sum -= q.front();                                                                ",{}]],"10":[["            q.pop();                                                                               ",{}]],"11":[["        }                                                                                          ",{}]],"12":[["    }                                                                                              ",{}]],"13":[["};                                                                                                 ",{}]],"14":[["                                                                                                   ",{}]],"15":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"16":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"17":[["    ConveyorQueue buckets;                                                                         ",{}]],"18":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"19":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"20":[["                                                                                                   ",{}]],"21":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"22":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"23":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"24":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"25":[["                                                                                                   ",{}]],"26":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"27":[["        last_update_time = now;                                                                    ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["public",{"fg":3}],[":                                                                                            ",{}]],"31":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"32":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"33":[["        buckets(num_buckets),                                                                      ",{}]],"34":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 33,0-1        45% ",{}]]},"cursor":{"x":0}}],[0.03019,{"lines":{"0":[["        }                                                                                          ",{}]],"1":[["                                                                                                   ",{}]],"2":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"3":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"4":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"5":[["            num_shifted--;                                                                         ",{}]],"6":[["        }                                                                                          ",{}]],"7":[["                                                                                                   ",{}]],"8":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"9":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"10":[["            total_sum -= q.front();                                                                ",{}]],"11":[["            q.pop();                                                                               ",{}]],"12":[["        }                                                                                          ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["};                                                                                                 ",{}]],"15":[["                                                                                                   ",{}]],"16":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"17":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"18":[["    ConveyorQueue buckets;                                                                         ",{}]],"19":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"20":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"23":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"24":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"25":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"26":[["                                                                                                   ",{}]],"27":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"28":[["        last_update_time = now;                                                                    ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["public",{"fg":3}],[":                                                                                            ",{}]],"32":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"33":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"34":[["        buckets(num_buckets),                                                                      ",{}]],"35":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 32,9          43% ",{}]]},"cursor":{"x":8}}],[0.031976,{"lines":{"0":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"1":[["        }                                                                                          ",{}]],"2":[["                                                                                                   ",{}]],"3":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"4":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"5":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"6":[["            num_shifted--;                                                                         ",{}]],"7":[["        }                                                                                          ",{}]],"8":[["                                                                                                   ",{}]],"9":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"10":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"11":[["            total_sum -= q.front();                                                                ",{}]],"12":[["            q.pop();                                                                               ",{}]],"13":[["        }                                                                                          ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["};                                                                                                 ",{}]],"16":[["                                                                                                   ",{}]],"17":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"18":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"19":[["    ConveyorQueue buckets;                                                                         ",{}]],"20":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"21":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"24":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"25":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"26":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"27":[["                                                                                                   ",{}]],"28":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"29":[["        last_update_time = now;                                                                    ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["public",{"fg":3}],[":                                                                                            ",{}]],"33":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"34":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"35":[["        buckets(num_buckets),                                                                      ",{}]],"36":[["        secs_per_bucket(secs_per_bucket) {                                                         ",{}]],"37":[["                                                                                 31,10         42% ",{}]]},"cursor":{"x":9}}],[0.030225,{"lines":{"0":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"1":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"2":[["        }                                                                                          ",{}]],"3":[["                                                                                                   ",{}]],"4":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"5":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"6":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"7":[["            num_shifted--;                                                                         ",{}]],"8":[["        }                                                                                          ",{}]],"9":[["                                                                                                   ",{}]],"10":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"11":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"12":[["            total_sum -= q.front();                                                                ",{}]],"13":[["            q.pop();                                                                               ",{}]],"14":[["        }                                                                                          ",{}]],"15":[["    }                                                                                              ",{}]],"16":[["};                                                                                                 ",{}]],"17":[["                                                                                                   ",{}]],"18":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"19":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"20":[["    ConveyorQueue buckets;                                                                         ",{}]],"21":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"22":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"25":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"26":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"27":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"28":[["                                                                                                   ",{}]],"29":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"30":[["        last_update_time = now;                                                                    ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["public",{"fg":3}],[":                                                                                            ",{}]],"34":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"35":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"36":[["        buckets(num_buckets),                                                                      ",{}]],"37":[["                                                                                 30,10         40% ",{}]]}}],[0.030296,{"lines":{"0":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"1":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"2":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"3":[["        }                                                                                          ",{}]],"4":[["                                                                                                   ",{}]],"5":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"6":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"7":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"8":[["            num_shifted--;                                                                         ",{}]],"9":[["        }                                                                                          ",{}]],"10":[["                                                                                                   ",{}]],"11":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"12":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"13":[["            total_sum -= q.front();                                                                ",{}]],"14":[["            q.pop();                                                                               ",{}]],"15":[["        }                                                                                          ",{}]],"16":[["    }                                                                                              ",{}]],"17":[["};                                                                                                 ",{}]],"18":[["                                                                                                   ",{}]],"19":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"20":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"21":[["    ConveyorQueue buckets;                                                                         ",{}]],"22":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"23":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"26":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"27":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"28":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"29":[["                                                                                                   ",{}]],"30":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"31":[["        last_update_time = now;                                                                    ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["public",{"fg":3}],[":                                                                                            ",{}]],"35":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"36":[["    TrailingBucketCounter(",{}],["int",{"fg":2}],[" num_buckets, ",{}],["int",{"fg":2}],[" secs_per_bucket) :                                  ",{}]],"37":[["                                                                                 29,10         39% ",{}]]}}],[0.030283,{"lines":{"0":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"1":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"2":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"3":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"4":[["        }                                                                                          ",{}]],"5":[["                                                                                                   ",{}]],"6":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"7":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"8":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"9":[["            num_shifted--;                                                                         ",{}]],"10":[["        }                                                                                          ",{}]],"11":[["                                                                                                   ",{}]],"12":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"13":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"14":[["            total_sum -= q.front();                                                                ",{}]],"15":[["            q.pop();                                                                               ",{}]],"16":[["        }                                                                                          ",{}]],"17":[["    }                                                                                              ",{}]],"18":[["};                                                                                                 ",{}]],"19":[["                                                                                                   ",{}]],"20":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"21":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"22":[["    ConveyorQueue buckets;                                                                         ",{}]],"23":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"24":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"27":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"28":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"29":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"30":[["                                                                                                   ",{}]],"31":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"32":[["        last_update_time = now;                                                                    ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["public",{"fg":3}],[":                                                                                            ",{}]],"36":[["    ",{}],["// Example: TrailingBucketCounter(30, 30) tracks the last 30 minute-buckets of time",{"fg":4}],["            ",{}]],"37":[["                                                                                 28,10         38% ",{}]]}}],[0.030232,{"lines":{"0":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"1":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"2":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"3":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"4":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"5":[["        }                                                                                          ",{}]],"6":[["                                                                                                   ",{}]],"7":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"8":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"9":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"10":[["            num_shifted--;                                                                         ",{}]],"11":[["        }                                                                                          ",{}]],"12":[["                                                                                                   ",{}]],"13":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"14":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"15":[["            total_sum -= q.front();                                                                ",{}]],"16":[["            q.pop();                                                                               ",{}]],"17":[["        }                                                                                          ",{}]],"18":[["    }                                                                                              ",{}]],"19":[["};                                                                                                 ",{}]],"20":[["                                                                                                   ",{}]],"21":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"22":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"23":[["    ConveyorQueue buckets;                                                                         ",{}]],"24":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"25":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"28":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"29":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"30":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"31":[["                                                                                                   ",{}]],"32":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"33":[["        last_update_time = now;                                                                    ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["public",{"fg":3}],[":                                                                                            ",{}]],"37":[["                                                                                 27,10         36% ",{}]]}}],[0.0297,{"lines":{"0":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"1":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"2":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"3":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"4":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"5":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"6":[["        }                                                                                          ",{}]],"7":[["                                                                                                   ",{}]],"8":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"9":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"10":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"11":[["            num_shifted--;                                                                         ",{}]],"12":[["        }                                                                                          ",{}]],"13":[["                                                                                                   ",{}]],"14":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"15":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"16":[["            total_sum -= q.front();                                                                ",{}]],"17":[["            q.pop();                                                                               ",{}]],"18":[["        }                                                                                          ",{}]],"19":[["    }                                                                                              ",{}]],"20":[["};                                                                                                 ",{}]],"21":[["                                                                                                   ",{}]],"22":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"23":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"24":[["    ConveyorQueue buckets;                                                                         ",{}]],"25":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"26":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"29":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"30":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"31":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"32":[["                                                                                                   ",{}]],"33":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"34":[["        last_update_time = now;                                                                    ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 26,10         35% ",{}]]}}],[0.02996,{"lines":{"0":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"1":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"2":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"3":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"4":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"5":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"6":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"7":[["        }                                                                                          ",{}]],"8":[["                                                                                                   ",{}]],"9":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"10":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"11":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"12":[["            num_shifted--;                                                                         ",{}]],"13":[["        }                                                                                          ",{}]],"14":[["                                                                                                   ",{}]],"15":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"16":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"17":[["            total_sum -= q.front();                                                                ",{}]],"18":[["            q.pop();                                                                               ",{}]],"19":[["        }                                                                                          ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["};                                                                                                 ",{}]],"22":[["                                                                                                   ",{}]],"23":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"24":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"25":[["    ConveyorQueue buckets;                                                                         ",{}]],"26":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"27":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"30":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"31":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"32":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"33":[["                                                                                                   ",{}]],"34":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"35":[["        last_update_time = now;                                                                    ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 25,10         33% ",{}]]}}],[0.030416,{"lines":{"0":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"1":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"2":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"3":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"4":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"5":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"6":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"7":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"8":[["        }                                                                                          ",{}]],"9":[["                                                                                                   ",{}]],"10":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"11":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"12":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"13":[["            num_shifted--;                                                                         ",{}]],"14":[["        }                                                                                          ",{}]],"15":[["                                                                                                   ",{}]],"16":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"17":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"18":[["            total_sum -= q.front();                                                                ",{}]],"19":[["            q.pop();                                                                               ",{}]],"20":[["        }                                                                                          ",{}]],"21":[["    }                                                                                              ",{}]],"22":[["};                                                                                                 ",{}]],"23":[["                                                                                                   ",{}]],"24":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"25":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"26":[["    ConveyorQueue buckets;                                                                         ",{}]],"27":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"28":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"31":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"32":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"33":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"34":[["                                                                                                   ",{}]],"35":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"36":[["        last_update_time = now;                                                                    ",{}]],"37":[["                                                                                 24,10         32% ",{}]]}}],[0.031498,{"lines":{"0":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"1":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"2":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"3":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"4":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"5":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"6":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"7":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"8":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"9":[["        }                                                                                          ",{}]],"10":[["                                                                                                   ",{}]],"11":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"12":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"13":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"14":[["            num_shifted--;                                                                         ",{}]],"15":[["        }                                                                                          ",{}]],"16":[["                                                                                                   ",{}]],"17":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"18":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"19":[["            total_sum -= q.front();                                                                ",{}]],"20":[["            q.pop();                                                                               ",{}]],"21":[["        }                                                                                          ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["};                                                                                                 ",{}]],"24":[["                                                                                                   ",{}]],"25":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"26":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"27":[["    ConveyorQueue buckets;                                                                         ",{}]],"28":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"29":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"32":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"33":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"34":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"35":[["                                                                                                   ",{}]],"36":[["        bucket.Shift(current_bucket - last_update_bucket);                                         ",{}]],"37":[["                                                                                 23,10         30% ",{}]]}}],[0.030872,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"2":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"3":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"4":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"5":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"6":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"7":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"8":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"9":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"10":[["        }                                                                                          ",{}]],"11":[["                                                                                                   ",{}]],"12":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"13":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"14":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"15":[["            num_shifted--;                                                                         ",{}]],"16":[["        }                                                                                          ",{}]],"17":[["                                                                                                   ",{}]],"18":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"19":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"20":[["            total_sum -= q.front();                                                                ",{}]],"21":[["            q.pop();                                                                               ",{}]],"22":[["        }                                                                                          ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["};                                                                                                 ",{}]],"25":[["                                                                                                   ",{}]],"26":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"27":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"28":[["    ConveyorQueue buckets;                                                                         ",{}]],"29":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"30":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"33":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"34":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"35":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 22,0-1        29% ",{}]]},"cursor":{"x":0}}],[0.03013,{"lines":{"0":[["    }                                                                                              ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"3":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"4":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"5":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"6":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"7":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"8":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"9":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"10":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"11":[["        }                                                                                          ",{}]],"12":[["                                                                                                   ",{}]],"13":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"14":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"15":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"16":[["            num_shifted--;                                                                         ",{}]],"17":[["        }                                                                                          ",{}]],"18":[["                                                                                                   ",{}]],"19":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"20":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"21":[["            total_sum -= q.front();                                                                ",{}]],"22":[["            q.pop();                                                                               ",{}]],"23":[["        }                                                                                          ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["};                                                                                                 ",{}]],"26":[["                                                                                                   ",{}]],"27":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"28":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"29":[["    ConveyorQueue buckets;                                                                         ",{}]],"30":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"31":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"34":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"35":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"36":[["        ",{}],["int",{"fg":2}],[" last_update_bucket = last_update_time / secs_per_bucket;                               ",{}]],"37":[["                                                                                 21,5          28% ",{}]]},"cursor":{"x":4}}],[0.030434,{"lines":{"0":[["        total_sum += count;                                                                        ",{}]],"1":[["    }                                                                                              ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"4":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"5":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"6":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"7":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"8":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"9":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"10":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"11":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"12":[["        }                                                                                          ",{}]],"13":[["                                                                                                   ",{}]],"14":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"15":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"16":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"17":[["            num_shifted--;                                                                         ",{}]],"18":[["        }                                                                                          ",{}]],"19":[["                                                                                                   ",{}]],"20":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"21":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"22":[["            total_sum -= q.front();                                                                ",{}]],"23":[["            q.pop();                                                                               ",{}]],"24":[["        }                                                                                          ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["};                                                                                                 ",{}]],"27":[["                                                                                                   ",{}]],"28":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"29":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"30":[["    ConveyorQueue buckets;                                                                         ",{}]],"31":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"32":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"35":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"36":[["        ",{}],["int",{"fg":2}],[" current_bucket = now / secs_per_bucket;                                                ",{}]],"37":[["                                                                                 20,10         26% ",{}]]},"cursor":{"x":9}}],[0.029062,{"lines":{"0":[["        q.back() += count;                                                                         ",{}]],"1":[["        total_sum += count;                                                                        ",{}]],"2":[["    }                                                                                              ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"5":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"6":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"7":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"8":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"9":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"10":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"11":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"12":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"13":[["        }                                                                                          ",{}]],"14":[["                                                                                                   ",{}]],"15":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"16":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"17":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"18":[["            num_shifted--;                                                                         ",{}]],"19":[["        }                                                                                          ",{}]],"20":[["                                                                                                   ",{}]],"21":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"22":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"23":[["            total_sum -= q.front();                                                                ",{}]],"24":[["            q.pop();                                                                               ",{}]],"25":[["        }                                                                                          ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["};                                                                                                 ",{}]],"28":[["                                                                                                   ",{}]],"29":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"30":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"31":[["    ConveyorQueue buckets;                                                                         ",{}]],"32":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"33":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"36":[["    ",{}],["void",{"fg":2}],[" Update(",{}],["time_t",{"fg":2}],[" now) {                                                                      ",{}]],"37":[["                                                                                 19,10         25% ",{}]]}}],[0.031219,{"lines":{"0":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"1":[["        q.back() += count;                                                                         ",{}]],"2":[["        total_sum += count;                                                                        ",{}]],"3":[["    }                                                                                              ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"6":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"7":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"8":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"9":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"10":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"11":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"12":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"13":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"14":[["        }                                                                                          ",{}]],"15":[["                                                                                                   ",{}]],"16":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"17":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"18":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"19":[["            num_shifted--;                                                                         ",{}]],"20":[["        }                                                                                          ",{}]],"21":[["                                                                                                   ",{}]],"22":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"23":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"24":[["            total_sum -= q.front();                                                                ",{}]],"25":[["            q.pop();                                                                               ",{}]],"26":[["        }                                                                                          ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["};                                                                                                 ",{}]],"29":[["                                                                                                   ",{}]],"30":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"31":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"32":[["    ConveyorQueue buckets;                                                                         ",{}]],"33":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"34":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["// Calculate how many buckets of time have passed and Shift() accordingly",{"fg":4}],["                      ",{}]],"37":[["                                                                                 18,10         23% ",{}]]}}],[0.031002,{"lines":{"0":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"1":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"2":[["        q.back() += count;                                                                         ",{}]],"3":[["        total_sum += count;                                                                        ",{}]],"4":[["    }                                                                                              ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"7":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"8":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"9":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"10":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"11":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"12":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"13":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"14":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"15":[["        }                                                                                          ",{}]],"16":[["                                                                                                   ",{}]],"17":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"18":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"19":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"20":[["            num_shifted--;                                                                         ",{}]],"21":[["        }                                                                                          ",{}]],"22":[["                                                                                                   ",{}]],"23":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"24":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"25":[["            total_sum -= q.front();                                                                ",{}]],"26":[["            q.pop();                                                                               ",{}]],"27":[["        }                                                                                          ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["};                                                                                                 ",{}]],"30":[["                                                                                                   ",{}]],"31":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"32":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"33":[["    ConveyorQueue buckets;                                                                         ",{}]],"34":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"35":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 17,10         22% ",{}]]}}],[0.341507,{"lines":{"0":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"1":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"2":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"3":[["        q.back() += count;                                                                         ",{}]],"4":[["        total_sum += count;                                                                        ",{}]],"5":[["    }                                                                                              ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"8":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"9":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"10":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"11":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"12":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"13":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"14":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"15":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"16":[["        }                                                                                          ",{}]],"17":[["                                                                                                   ",{}]],"18":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"19":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"20":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"21":[["            num_shifted--;                                                                         ",{}]],"22":[["        }                                                                                          ",{}]],"23":[["                                                                                                   ",{}]],"24":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"25":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"26":[["            total_sum -= q.front();                                                                ",{}]],"27":[["            q.pop();                                                                               ",{}]],"28":[["        }                                                                                          ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["};                                                                                                 ",{}]],"31":[["                                                                                                   ",{}]],"32":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"33":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"34":[["    ConveyorQueue buckets;                                                                         ",{}]],"35":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"36":[["    ",{}],["time_t",{"fg":2}],[" last_update_time; ",{}],["// the last time Update() was called",{"fg":4}],["                                  ",{}]],"37":[["                                                                                 16,10         21% ",{}]]}}],[0.159558,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"2":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"3":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"4":[["        q.back() += count;                                                                         ",{}]],"5":[["        total_sum += count;                                                                        ",{}]],"6":[["    }                                                                                              ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"9":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"10":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"11":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"12":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"13":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"14":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"15":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"16":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"17":[["        }                                                                                          ",{}]],"18":[["                                                                                                   ",{}]],"19":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"20":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"21":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"22":[["            num_shifted--;                                                                         ",{}]],"23":[["        }                                                                                          ",{}]],"24":[["                                                                                                   ",{}]],"25":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"26":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"27":[["            total_sum -= q.front();                                                                ",{}]],"28":[["            q.pop();                                                                               ",{}]],"29":[["        }                                                                                          ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["};                                                                                                 ",{}]],"32":[["                                                                                                   ",{}]],"33":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"34":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"35":[["    ConveyorQueue buckets;                                                                         ",{}]],"36":[["    ",{}],["const",{"fg":2}],[" ",{}],["int",{"fg":2}],[" secs_per_bucket;                                                                     ",{}]],"37":[["                                                                                 15,0-1        19% ",{}]]},"cursor":{"x":0}}],[0.168313,{"lines":{"0":[["    }                                                                                              ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"3":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"4":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"5":[["        q.back() += count;                                                                         ",{}]],"6":[["        total_sum += count;                                                                        ",{}]],"7":[["    }                                                                                              ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"10":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"11":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"13":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"14":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"15":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"16":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"17":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"18":[["        }                                                                                          ",{}]],"19":[["                                                                                                   ",{}]],"20":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"21":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"22":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"23":[["            num_shifted--;                                                                         ",{}]],"24":[["        }                                                                                          ",{}]],"25":[["                                                                                                   ",{}]],"26":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"27":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"28":[["            total_sum -= q.front();                                                                ",{}]],"29":[["            q.pop();                                                                               ",{}]],"30":[["        }                                                                                          ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["};                                                                                                 ",{}]],"33":[["                                                                                                   ",{}]],"34":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"35":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"36":[["    ConveyorQueue buckets;                                                                         ",{}]],"37":[["                                                                                 14,5          18% ",{}]]},"cursor":{"x":4}}],[0.159666,{"lines":{"0":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"1":[["    }                                                                                              ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"5":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"6":[["        q.back() += count;                                                                         ",{}]],"7":[["        total_sum += count;                                                                        ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"11":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"12":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"14":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"15":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"16":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"17":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"18":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"19":[["        }                                                                                          ",{}]],"20":[["                                                                                                   ",{}]],"21":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"22":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"23":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"24":[["            num_shifted--;                                                                         ",{}]],"25":[["        }                                                                                          ",{}]],"26":[["                                                                                                   ",{}]],"27":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"28":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"29":[["            total_sum -= q.front();                                                                ",{}]],"30":[["            q.pop();                                                                               ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["};                                                                                                 ",{}]],"34":[["                                                                                                   ",{}]],"35":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"36":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"37":[["                                                                                 13,10         16% ",{}]]},"cursor":{"x":9}}],[0.152133,{"lines":{"0":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"1":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"2":[["    }                                                                                              ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"5":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"6":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"7":[["        q.back() += count;                                                                         ",{}]],"8":[["        total_sum += count;                                                                        ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"12":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"13":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"15":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"16":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"17":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"18":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"19":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"20":[["        }                                                                                          ",{}]],"21":[["                                                                                                   ",{}]],"22":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"23":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"24":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"25":[["            num_shifted--;                                                                         ",{}]],"26":[["        }                                                                                          ",{}]],"27":[["                                                                                                   ",{}]],"28":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"29":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"30":[["            total_sum -= q.front();                                                                ",{}]],"31":[["            q.pop();                                                                               ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["};                                                                                                 ",{}]],"35":[["                                                                                                   ",{}]],"36":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"37":[["                                                                                 12,10         15% ",{}]]}}],[0.159914,{"lines":{"0":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"1":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"2":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"3":[["    }                                                                                              ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"6":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"7":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"8":[["        q.back() += count;                                                                         ",{}]],"9":[["        total_sum += count;                                                                        ",{}]],"10":[["    }                                                                                              ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"13":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"14":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"15":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"16":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"17":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"18":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"19":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"20":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"21":[["        }                                                                                          ",{}]],"22":[["                                                                                                   ",{}]],"23":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"24":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"25":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"26":[["            num_shifted--;                                                                         ",{}]],"27":[["        }                                                                                          ",{}]],"28":[["                                                                                                   ",{}]],"29":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"30":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"31":[["            total_sum -= q.front();                                                                ",{}]],"32":[["            q.pop();                                                                               ",{}]],"33":[["        }                                                                                          ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["};                                                                                                 ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 11,10         14% ",{}]]}}],[0.151859,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"2":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"3":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"4":[["    }                                                                                              ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"7":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"8":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"9":[["        q.back() += count;                                                                         ",{}]],"10":[["        total_sum += count;                                                                        ",{}]],"11":[["    }                                                                                              ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"14":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"15":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"16":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"17":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"18":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"19":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"20":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"21":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"22":[["        }                                                                                          ",{}]],"23":[["                                                                                                   ",{}]],"24":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"25":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"26":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"27":[["            num_shifted--;                                                                         ",{}]],"28":[["        }                                                                                          ",{}]],"29":[["                                                                                                   ",{}]],"30":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"31":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"32":[["            total_sum -= q.front();                                                                ",{}]],"33":[["            q.pop();                                                                               ",{}]],"34":[["        }                                                                                          ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["                                                                                 10,0-1        12% ",{}]]},"cursor":{"x":0}}],[0.160393,{"lines":{"0":[["    }                                                                                              ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"3":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"4":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"5":[["    }                                                                                              ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"8":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"9":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"10":[["        q.back() += count;                                                                         ",{}]],"11":[["        total_sum += count;                                                                        ",{}]],"12":[["    }                                                                                              ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"15":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"16":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"17":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"18":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"19":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"20":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"21":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"22":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"23":[["        }                                                                                          ",{}]],"24":[["                                                                                                   ",{}]],"25":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"26":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"27":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"28":[["            num_shifted--;                                                                         ",{}]],"29":[["        }                                                                                          ",{}]],"30":[["                                                                                                   ",{}]],"31":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"32":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"33":[["            total_sum -= q.front();                                                                ",{}]],"34":[["            q.pop();                                                                               ",{}]],"35":[["        }                                                                                          ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 9,5           11% ",{}]]},"cursor":{"x":4}}],[0.17609,{"lines":{"0":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"1":[["    }                                                                                              ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"4":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"5":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"6":[["    }                                                                                              ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"9":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"10":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"11":[["        q.back() += count;                                                                         ",{}]],"12":[["        total_sum += count;                                                                        ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"16":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"17":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"18":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"19":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"20":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"21":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"22":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"23":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"24":[["        }                                                                                          ",{}]],"25":[["                                                                                                   ",{}]],"26":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"27":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"28":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"29":[["            num_shifted--;                                                                         ",{}]],"30":[["        }                                                                                          ",{}]],"31":[["                                                                                                   ",{}]],"32":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"33":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"34":[["            total_sum -= q.front();                                                                ",{}]],"35":[["            q.pop();                                                                               ",{}]],"36":[["        }                                                                                          ",{}]],"37":[["                                                                                 8,10           9% ",{}]]},"cursor":{"x":9}}],[0.119672,{"lines":{"0":[["public",{"fg":3}],[":                                                                                            ",{}]],"1":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"2":[["    }                                                                                              ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"5":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"6":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"7":[["    }                                                                                              ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"10":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"11":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"12":[["        q.back() += count;                                                                         ",{}]],"13":[["        total_sum += count;                                                                        ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"17":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"18":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"20":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"21":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"22":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"23":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"24":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"25":[["        }                                                                                          ",{}]],"26":[["                                                                                                   ",{}]],"27":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"28":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"29":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"30":[["            num_shifted--;                                                                         ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["                                                                                                   ",{}]],"33":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"34":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"35":[["            total_sum -= q.front();                                                                ",{}]],"36":[["            q.pop();                                                                               ",{}]],"37":[["                                                                                 7,7            8% ",{}]]},"cursor":{"x":6}}],[0.151945,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["public",{"fg":3}],[":                                                                                            ",{}]],"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"3":[["    }                                                                                              ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"6":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"7":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"11":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"12":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"13":[["        q.back() += count;                                                                         ",{}]],"14":[["        total_sum += count;                                                                        ",{}]],"15":[["    }                                                                                              ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"18":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"19":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"20":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"21":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"24":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"25":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"26":[["        }                                                                                          ",{}]],"27":[["                                                                                                   ",{}]],"28":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"29":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"30":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"31":[["            num_shifted--;                                                                         ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["                                                                                                   ",{}]],"34":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"36":[["            total_sum -= q.front();                                                                ",{}]],"37":[["                                                                                 6,0-1          7% ",{}]]},"cursor":{"x":0}}],[0.168055,{"lines":{"0":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"1":[["                                                                                                   ",{}]],"2":[["public",{"fg":3}],[":                                                                                            ",{}]],"3":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"4":[["    }                                                                                              ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"7":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"8":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"13":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"14":[["        q.back() += count;                                                                         ",{}]],"15":[["        total_sum += count;                                                                        ",{}]],"16":[["    }                                                                                              ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"19":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"20":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"21":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"22":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"23":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"24":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"25":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"26":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"27":[["        }                                                                                          ",{}]],"28":[["                                                                                                   ",{}]],"29":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"30":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"31":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"32":[["            num_shifted--;                                                                         ",{}]],"33":[["        }                                                                                          ",{}]],"34":[["                                                                                                   ",{}]],"35":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"36":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"37":[["                                                                                 5,10           5% ",{}]]},"cursor":{"x":9}}],[0.15991,{"lines":{"0":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"1":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"2":[["                                                                                                   ",{}]],"3":[["public",{"fg":3}],[":                                                                                            ",{}]],"4":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"5":[["    }                                                                                              ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"8":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"9":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"10":[["    }                                                                                              ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"14":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"15":[["        q.back() += count;                                                                         ",{}]],"16":[["        total_sum += count;                                                                        ",{}]],"17":[["    }                                                                                              ",{}]],"18":[["                                                                                                   ",{}]],"19":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"20":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"21":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"22":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"23":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"24":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"25":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"26":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"27":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"28":[["        }                                                                                          ",{}]],"29":[["                                                                                                   ",{}]],"30":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"31":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"32":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"33":[["            num_shifted--;                                                                         ",{}]],"34":[["        }                                                                                          ",{}]],"35":[["                                                                                                   ",{}]],"36":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"37":[["                                                                                 4,10           4% ",{}]]}}],[0.200007,{"lines":{"0":[["    queue<",{}],["int",{"fg":2}],["> q;                                                                                  ",{}]],"1":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"2":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"3":[["                                                                                                   ",{}]],"4":[["public",{"fg":3}],[":                                                                                            ",{}]],"5":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"6":[["    }                                                                                              ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"9":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"10":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"11":[["    }                                                                                              ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"15":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"16":[["        q.back() += count;                                                                         ",{}]],"17":[["        total_sum += count;                                                                        ",{}]],"18":[["    }                                                                                              ",{}]],"19":[["                                                                                                   ",{}]],"20":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"21":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"22":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"23":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"24":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"25":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"26":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"27":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"28":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"29":[["        }                                                                                          ",{}]],"30":[["                                                                                                   ",{}]],"31":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"32":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"33":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"34":[["            num_shifted--;                                                                         ",{}]],"35":[["        }                                                                                          ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 3,10           2% ",{}]]}}],[0.152113,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"1":[["    queue<",{}],["int",{"fg":2}],["> q;                                                                                  ",{}]],"2":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"3":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"4":[["                                                                                                   ",{}]],"5":[["public",{"fg":3}],[":                                                                                            ",{}]],"6":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"7":[["    }                                                                                              ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"10":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"11":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"12":[["    }                                                                                              ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"15":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"16":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"17":[["        q.back() += count;                                                                         ",{}]],"18":[["        total_sum += count;                                                                        ",{}]],"19":[["    }                                                                                              ",{}]],"20":[["                                                                                                   ",{}]],"21":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"22":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"23":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"24":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"25":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"26":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"27":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"28":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"29":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"30":[["        }                                                                                          ",{}]],"31":[["                                                                                                   ",{}]],"32":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"33":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"34":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"35":[["            num_shifted--;                                                                         ",{}]],"36":[["        }                                                                                          ",{}]],"37":[["                                                                                 2,10           1% ",{}]]}}],[0.160298,{"lines":{"0":[["// A queue with a maximum number of slots, where old data \"falls off\" the end",{"fg":4}],["                      ",{}]],"1":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"2":[["    queue<",{}],["int",{"fg":2}],["> q;                                                                                  ",{}]],"3":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"4":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"5":[["                                                                                                   ",{}]],"6":[["public",{"fg":3}],[":                                                                                            ",{}]],"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"11":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"12":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"16":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"17":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"18":[["        q.back() += count;                                                                         ",{}]],"19":[["        total_sum += count;                                                                        ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"23":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"24":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"25":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"26":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"27":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"28":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"29":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"30":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["                                                                                                   ",{}]],"33":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"34":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"35":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"36":[["            num_shifted--;                                                                         ",{}]],"37":[["                                                                                 1,10          Top ",{}]]}}],[0.159199,{}],[0.159962,{}],[0.272238,{"lines":{"37":[["                                                                                 2,10          Top ",{}]]},"cursor":{"y":1}}],[0.184001,{"lines":{"37":[["                                                                                 3,10          Top ",{}]]},"cursor":{"y":2}}],[0.712313,{"lines":{"37":[["                                                                                 4,10          Top ",{}]]},"cursor":{"y":3}}],[0.176122,{"lines":{"37":[["                                                                                 5,10          Top ",{}]]},"cursor":{"y":4}}],[0.175622,{"lines":{"37":[["                                                                                 6,0-1         Top ",{}]]},"cursor":{"x":0,"y":5}}],[0.168231,{"lines":{"37":[["                                                                                 7,7           Top ",{}]]},"cursor":{"x":6,"y":6}}],[0.167751,{"lines":{"37":[["                                                                                 8,10          Top ",{}]]},"cursor":{"x":9,"y":7}}],[0.173681,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") ",{}],["{",{"bg":6}],["                            ",{}]],"8":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 9,5           Top ",{}]]},"cursor":{"x":4,"y":8}}],[0.534561,{"lines":{"7":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"8":[["    }                                                                                              ",{}]],"37":[["                                                                                 10,0-1        Top ",{}]]},"cursor":{"x":0,"y":9}}],[0.495767,{"lines":{"37":[["                                                                                 11,10         Top ",{}]]},"cursor":{"x":9,"y":10}}],[0.030131,{"lines":{"37":[["                                                                                 12,10         Top ",{}]]},"cursor":{"y":11}}],[0.032718,{"lines":{"37":[["                                                                                 13,10         Top ",{}]]},"cursor":{"y":12}}],[0.036012,{"lines":{"11":[["    ",{}],["int",{"fg":2}],[" TotalSum() ",{}],["{",{"bg":6}],["                                                                               ",{}]],"13":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 14,5          Top ",{}]]},"cursor":{"x":4,"y":13}}],[0.030528,{"lines":{"11":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"13":[["    }                                                                                              ",{}]],"37":[["                                                                                 15,0-1        Top ",{}]]},"cursor":{"x":0,"y":14}}],[0.026926,{"lines":{"37":[["                                                                                 16,10         Top ",{}]]},"cursor":{"x":9,"y":15}}],[0.029384,{"lines":{"37":[["                                                                                 17,10         Top ",{}]]},"cursor":{"y":16}}],[0.210263,{"lines":{"37":[["                                                                                 18,10         Top ",{}]]},"cursor":{"y":17}}],[1.392125,{"lines":{"37":[["                                                                                 19,10         Top ",{}]]},"cursor":{"y":18}}],[0.499949,{"lines":{"37":[["                                                                                 20,10         Top ",{}]]},"cursor":{"y":19}}],[0.038117,{"lines":{"16":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                    ",{}]],"20":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 21,5          Top ",{}]]},"cursor":{"x":4,"y":20}}],[0.028884,{"lines":{"16":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"20":[["    }                                                                                              ",{}]],"37":[["                                                                                 22,0-1        Top ",{}]]},"cursor":{"x":0,"y":21}}],[0.027311,{"lines":{"37":[["                                                                                 23,10         Top ",{}]]},"cursor":{"x":9,"y":22}}],[0.030437,{"lines":{"37":[["                                                                                 24,10         Top ",{}]]},"cursor":{"y":23}}],[0.031183,{"lines":{"37":[["                                                                                 25,10         Top ",{}]]},"cursor":{"y":24}}],[0.031036,{"lines":{"37":[["                                                                                 26,10         Top ",{}]]},"cursor":{"y":25}}],[0.03029,{"lines":{"37":[["                                                                                 27,10         Top ",{}]]},"cursor":{"y":26}}],[0.031167,{"lines":{"37":[["                                                                                 28,10         Top ",{}]]},"cursor":{"y":27}}],[0.030358,{"lines":{"37":[["                                                                                 29,10         Top ",{}]]},"cursor":{"y":28}}],[0.132741,{"lines":{"37":[["                                                                                 30,10         Top ",{}]]},"cursor":{"y":29}}],[0.5005500000000001,{"lines":{"37":[["                                                                                 31,10         Top ",{}]]},"cursor":{"y":30}}],[0.037679,{"lines":{"27":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) ",{}],["{",{"bg":6}],["                                                            ",{}]],"31":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["                                                                                 32,9          Top ",{}]]},"cursor":{"x":8,"y":31}}],[0.029439,{"lines":{"27":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"31":[["        }                                                                                          ",{}]],"37":[["                                                                                 33,0-1        Top ",{}]]},"cursor":{"x":0,"y":32}}],[0.02585,{"lines":{"37":[["                                                                                 34,10         Top ",{}]]},"cursor":{"x":9,"y":33}}],[0.030934,{"lines":{"37":[["                                                                                 35,10         Top ",{}]]},"cursor":{"y":34}}],[0.031542,{"lines":{"37":[["                                                                                 36,10         Top ",{}]]},"cursor":{"y":35}}],[0.030547,{"lines":{"37":[["                                                                                 37,10         Top ",{}]]},"cursor":{"y":36}}],[0.035305,{"lines":{"0":[["class",{"fg":2}],[" ConveyorQueue {                                                                              ",{}]],"1":[["    queue<",{}],["int",{"fg":2}],["> q;                                                                                  ",{}]],"2":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"3":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"4":[["                                                                                                   ",{}]],"5":[["public",{"fg":3}],[":                                                                                            ",{}]],"6":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"7":[["    }                                                                                              ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"10":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"11":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"12":[["    }                                                                                              ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"15":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"16":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"17":[["        q.back() += count;                                                                         ",{}]],"18":[["        total_sum += count;                                                                        ",{}]],"19":[["    }                                                                                              ",{}]],"20":[["                                                                                                   ",{}]],"21":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"22":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"23":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"24":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"25":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"26":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"27":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"28":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"29":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"30":[["        }                                                                                          ",{}]],"31":[["                                                                                                   ",{}]],"32":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"33":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") ",{}],["{",{"bg":6}],["                                                                  ",{}]],"34":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"35":[["            num_shifted--;                                                                         ",{}]],"36":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["                                                                                 38,9           1% ",{}]]},"cursor":{"x":8}}],[0.029908,{"lines":{"0":[["    queue<",{}],["int",{"fg":2}],["> q;                                                                                  ",{}]],"1":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"2":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"3":[["                                                                                                   ",{}]],"4":[["public",{"fg":3}],[":                                                                                            ",{}]],"5":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"6":[["    }                                                                                              ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"9":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"10":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"11":[["    }                                                                                              ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"15":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"16":[["        q.back() += count;                                                                         ",{}]],"17":[["        total_sum += count;                                                                        ",{}]],"18":[["    }                                                                                              ",{}]],"19":[["                                                                                                   ",{}]],"20":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"21":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"22":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"23":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"24":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"25":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"26":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"27":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"28":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"29":[["        }                                                                                          ",{}]],"30":[["                                                                                                   ",{}]],"31":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"32":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"33":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"34":[["            num_shifted--;                                                                         ",{}]],"35":[["        }                                                                                          ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 39,0-1         2% ",{}]]},"cursor":{"x":0}}],[0.029542,{"lines":{"0":[["    ",{}],["int",{"fg":2}],[" max_items;                                                                                 ",{}]],"1":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"2":[["                                                                                                   ",{}]],"3":[["public",{"fg":3}],[":                                                                                            ",{}]],"4":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"5":[["    }                                                                                              ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"8":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"9":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"10":[["    }                                                                                              ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"14":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"15":[["        q.back() += count;                                                                         ",{}]],"16":[["        total_sum += count;                                                                        ",{}]],"17":[["    }                                                                                              ",{}]],"18":[["                                                                                                   ",{}]],"19":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"20":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"21":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"22":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"23":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"24":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"25":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"26":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"27":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"28":[["        }                                                                                          ",{}]],"29":[["                                                                                                   ",{}]],"30":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"31":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"32":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"33":[["            num_shifted--;                                                                         ",{}]],"34":[["        }                                                                                          ",{}]],"35":[["                                                                                                   ",{}]],"36":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"37":[["                                                                                 40,10          4% ",{}]]},"cursor":{"x":9}}],[0.027459,{"lines":{"0":[["    ",{}],["int",{"fg":2}],[" total_sm;   ",{}],["// sum of all items in q",{"fg":4}],["                                                       ",{}]],"1":[["                                                                                                   ",{}]],"2":[["public",{"fg":3}],[":                                                                                            ",{}]],"3":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"4":[["    }                                                                                              ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"7":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"8":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"13":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"14":[["        q.back() += count;                                                                         ",{}]],"15":[["        total_sum += count;                                                                        ",{}]],"16":[["    }                                                                                              ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"19":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"20":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"21":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"22":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"23":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"24":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"25":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"26":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"27":[["        }                                                                                          ",{}]],"28":[["                                                                                                   ",{}]],"29":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"30":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"31":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"32":[["            num_shifted--;                                                                         ",{}]],"33":[["        }                                                                                          ",{}]],"34":[["                                                                                                   ",{}]],"35":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"36":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"37":[["                                                                                 41,10          5% ",{}]]}}],[0.029938,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["public",{"fg":3}],[":                                                                                            ",{}]],"2":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"3":[["    }                                                                                              ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"6":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"7":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"11":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"12":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"13":[["        q.back() += count;                                                                         ",{}]],"14":[["        total_sum += count;                                                                        ",{}]],"15":[["    }                                                                                              ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"18":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"19":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"20":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"21":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"22":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"23":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"24":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"25":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"26":[["        }                                                                                          ",{}]],"27":[["                                                                                                   ",{}]],"28":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"29":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"30":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"31":[["            num_shifted--;                                                                         ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["                                                                                                   ",{}]],"34":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"35":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"36":[["            total_sum -= q.front();                                                                ",{}]],"37":[["                                                                                 42,10          7% ",{}]]}}],[0.030291,{"lines":{"0":[["public",{"fg":3}],[":                                                                                            ",{}]],"1":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"2":[["    }                                                                                              ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"5":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"6":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"7":[["    }                                                                                              ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"10":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"11":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"12":[["        q.back() += count;                                                                         ",{}]],"13":[["        total_sum += count;                                                                        ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"17":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"18":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"20":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"21":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"22":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"23":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"24":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"25":[["        }                                                                                          ",{}]],"26":[["                                                                                                   ",{}]],"27":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"28":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"29":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"30":[["            num_shifted--;                                                                         ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["                                                                                                   ",{}]],"33":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"34":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"35":[["            total_sum -= q.front();                                                                ",{}]],"36":[["            q.pop();                                                                               ",{}]],"37":[["                                                                                 43,10          8% ",{}]]}}],[0.036545,{"lines":{"0":[["    ConveyorQueue(",{}],["int",{"fg":2}],[" max_items) : max_items(max_items), total_sum(",{}],["0",{"fg":1}],[") {                            ",{}]],"1":[["    }                                                                                              ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"4":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"5":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"6":[["    }                                                                                              ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"9":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"10":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"11":[["        q.back() += count;                                                                         ",{}]],"12":[["        total_sum += count;                                                                        ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"16":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"17":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"18":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"19":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"20":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"21":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"22":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"23":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"24":[["        }                                                                                          ",{}]],"25":[["                                                                                                   ",{}]],"26":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"27":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"28":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"29":[["            num_shifted--;                                                                         ",{}]],"30":[["        }                                                                                          ",{}]],"31":[["                                                                                                   ",{}]],"32":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"33":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) ",{}],["{",{"bg":6}],["                                                            ",{}]],"34":[["            total_sum -= q.front();                                                                ",{}]],"35":[["            q.pop();                                                                               ",{}]],"36":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["                                                                                 44,9           9% ",{}]]},"cursor":{"x":8}}],[0.031726,{"lines":{"0":[["    }                                                                                              ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"3":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"4":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"5":[["    }                                                                                              ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"8":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"9":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"10":[["        q.back() += count;                                                                         ",{}]],"11":[["        total_sum += count;                                                                        ",{}]],"12":[["    }                                                                                              ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"15":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"16":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"17":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) ",{}],["{",{"bg":6}],["                                                                  ",{}]],"18":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"19":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"20":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"21":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"22":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"23":[["        }                                                                                          ",{}]],"24":[["                                                                                                   ",{}]],"25":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"26":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"27":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"28":[["            num_shifted--;                                                                         ",{}]],"29":[["        }                                                                                          ",{}]],"30":[["                                                                                                   ",{}]],"31":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"32":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"33":[["            total_sum -= q.front();                                                                ",{}]],"34":[["            q.pop();                                                                               ",{}]],"35":[["        }                                                                                          ",{}]],"36":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 45,5          11% ",{}]]},"cursor":{"x":4}}],[0.025438,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"2":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"3":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"4":[["    }                                                                                              ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"7":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"8":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"9":[["        q.back() += count;                                                                         ",{}]],"10":[["        total_sum += count;                                                                        ",{}]],"11":[["    }                                                                                              ",{}]],"12":[["                                                                                                   ",{}]],"13":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"14":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"15":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"16":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"17":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"18":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"19":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"20":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"21":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"22":[["        }                                                                                          ",{}]],"23":[["                                                                                                   ",{}]],"24":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"25":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"26":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"27":[["            num_shifted--;                                                                         ",{}]],"28":[["        }                                                                                          ",{}]],"29":[["                                                                                                   ",{}]],"30":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"31":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"32":[["            total_sum -= q.front();                                                                ",{}]],"33":[["            q.pop();                                                                               ",{}]],"34":[["        }                                                                                          ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["                                                                                 46,2          12% ",{}]]},"cursor":{"x":1}}],[0.027989,{"lines":{"0":[["    ",{}],["// Return the total value of all items currently in the queue.",{"fg":4}],["                                 ",{}]],"1":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"2":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"3":[["    }                                                                                              ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"6":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"7":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"8":[["        q.back() += count;                                                                         ",{}]],"9":[["        total_sum += count;                                                                        ",{}]],"10":[["    }                                                                                              ",{}]],"11":[["                                                                                                   ",{}]],"12":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"13":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"14":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"15":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"16":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"17":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"18":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"19":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"20":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"21":[["        }                                                                                          ",{}]],"22":[["                                                                                                   ",{}]],"23":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"24":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"25":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"26":[["            num_shifted--;                                                                         ",{}]],"27":[["        }                                                                                          ",{}]],"28":[["                                                                                                   ",{}]],"29":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"30":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"31":[["            total_sum -= q.front();                                                                ",{}]],"32":[["            q.pop();                                                                               ",{}]],"33":[["        }                                                                                          ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["};                                                                                                 ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 47,0-1        14% ",{}]]},"cursor":{"x":0}}],[0.030944,{"lines":{"0":[["    ",{}],["int",{"fg":2}],[" TotalSum() {                                                                               ",{}]],"1":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"2":[["    }                                                                                              ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"5":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"6":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"7":[["        q.back() += count;                                                                         ",{}]],"8":[["        total_sum += count;                                                                        ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["                                                                                                   ",{}]],"11":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"12":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"13":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"15":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"16":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"17":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"18":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"19":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"20":[["        }                                                                                          ",{}]],"21":[["                                                                                                   ",{}]],"22":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"23":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"24":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"25":[["            num_shifted--;                                                                         ",{}]],"26":[["        }                                                                                          ",{}]],"27":[["                                                                                                   ",{}]],"28":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"29":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"30":[["            total_sum -= q.front();                                                                ",{}]],"31":[["            q.pop();                                                                               ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["};                                                                                                 ",{}]],"35":[["                                                                                                   ",{}]],"36":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"37":[["                                                                                 48,10         15% ",{}]]},"cursor":{"x":9}}],[0.371034,{"lines":{"0":[["        ",{}],["return",{"fg":3}],[" total_sum;                                                                          ",{}]],"1":[["    }                                                                                              ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["// Increment the value at the back of the queue.",{"fg":4}],["                                               ",{}]],"4":[["    ",{}],["void",{"fg":2}],[" AddToBack(",{}],["int",{"fg":2}],[" count) {                                                                    ",{}]],"5":[["        ",{}],["if",{"fg":3}],[" (q.empty()) Shift(",{}],["1",{"fg":1}],[");    ",{}],["// Make sure q has at least 1 item",{"fg":4}],["                             ",{}]],"6":[["        q.back() += count;                                                                         ",{}]],"7":[["        total_sum += count;                                                                        ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["// Each value in the queue is shifted forward by 'num_shifted'.",{"fg":4}],["                                ",{}]],"11":[["    ",{}],["// New items are initialized to 0.",{"fg":4}],["                                                             ",{}]],"12":[["    ",{}],["// Oldest items will be removed so there are <= max_items.",{"fg":4}],["                                     ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" Shift(",{}],["int",{"fg":2}],[" num_shifted) {                                                                  ",{}]],"14":[["        ",{}],["// in case too many items hisfted, just clear the queue",{"fg":4}],["                                    ",{}]],"15":[["        ",{}],["if",{"fg":3}],[" (num_shifted >= max_items) {                                                            ",{}]],"16":[["            q = queue<",{}],["int",{"fg":2}],[">(); ",{}],["// clear queue",{"fg":4}],["                                                       ",{}]],"17":[["            total_sum = ",{}],["0",{"fg":1}],[";                                                                         ",{}]],"18":[["            ",{}],["return",{"fg":3}],[";                                                                                ",{}]],"19":[["        }                                                                                          ",{}]],"20":[["                                                                                                   ",{}]],"21":[["        ",{}],["// Push all the needed zeros.",{"fg":4}],["                                                              ",{}]],"22":[["        ",{}],["while",{"fg":3}],[" (num_shifted > ",{}],["0",{"fg":1}],[") {                                                                  ",{}]],"23":[["            q.push(",{}],["0",{"fg":1}],[");                                                                             ",{}]],"24":[["            num_shifted--;                                                                         ",{}]],"25":[["        }                                                                                          ",{}]],"26":[["                                                                                                   ",{}]],"27":[["        ",{}],["// Let all the excess items fall off",{"fg":4}],["                                                       ",{}]],"28":[["        ",{}],["while",{"fg":3}],[" (q.size() >= max_items) {                                                            ",{}]],"29":[["            total_sum -= q.front();                                                                ",{}]],"30":[["            q.pop();                                                                               ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["};                                                                                                 ",{}]],"34":[["                                                                                                   ",{}]],"35":[["// A class that keeps counts for the past N buckets of time",{"fg":4}],["                                        ",{}]],"36":[["class",{"fg":2}],[" TrailingBucketCounter {                                                                      ",{}]],"37":[["                                                                                 49,10         16% ",{}]]}}],[3.703638,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.119987,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.120112,{"lines":{"37":[[":wq                                                                                                ",{}]]},"cursor":{"x":3}}],[0.152269,{"lines":{"37":[["\"ch15_3.cpp\"                                                                                       ",{}]]},"cursor":{"x":12,"visible":false}}],[0.044001,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch15_3.cpp                                        ",{}]],"1":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch15_3.cpp                                        ",{}]],"3":[["                                                                                                   ",{}]],"4":[["                                                                                                   ",{}]],"5":[["                                                                                                   ",{}]],"6":[["                                                                                                   ",{}]],"7":[["                                                                                                   ",{}]],"8":[["                                                                                                   ",{}]],"10":[["                                                                                                   ",{}]],"11":[["                                                                                                   ",{}]],"12":[["                                                                                                   ",{}]],"13":[["                                                                                                   ",{}]],"14":[["                                                                                                   ",{}]],"15":[["                                                                                                   ",{}]],"16":[["                                                                                                   ",{}]],"17":[["                                                                                                   ",{}]],"18":[["                                                                                                   ",{}]],"19":[["                                                                                                   ",{}]],"21":[["                                                                                                   ",{}]],"22":[["                                                                                                   ",{}]],"23":[["                                                                                                   ",{}]],"24":[["                                                                                                   ",{}]],"25":[["                                                                                                   ",{}]],"27":[["                                                                                                   ",{}]],"28":[["                                                                                                   ",{}]],"29":[["                                                                                                   ",{}]],"30":[["                                                                                                   ",{}]],"31":[["                                                                                                   ",{}]],"32":[["                                                                                                   ",{}]],"33":[["                                                                                                   ",{}]],"35":[["                                                                                                   ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                                   ",{}]]},"cursor":{"x":0,"y":2,"visible":true}}],[0.000453,{"lines":{"2":[["gsong@gsong-desktop:~/ch15-min_hour_counter$                                                       ",{}]]},"cursor":{"x":45}}],[1.276095,{"lines":{"2":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ exit                                                  ",{}]]},"cursor":{"x":0,"y":3}}]]