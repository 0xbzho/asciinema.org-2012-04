[[1.325254,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$                                                       ",{}]],"1":[["                                                                                                   ",{}]],"2":[["                                                                                                   ",{}]],"3":[["                                                                                                   ",{}]],"4":[["                                                                                                   ",{}]],"5":[["                                                                                                   ",{}]],"6":[["                                                                                                   ",{}]],"7":[["                                                                                                   ",{}]],"8":[["                                                                                                   ",{}]],"9":[["                                                                                                   ",{}]],"10":[["                                                                                                   ",{}]],"11":[["                                                                                                   ",{}]],"12":[["                                                                                                   ",{}]],"13":[["                                                                                                   ",{}]],"14":[["                                                                                                   ",{}]],"15":[["                                                                                                   ",{}]],"16":[["                                                                                                   ",{}]],"17":[["                                                                                                   ",{}]],"18":[["                                                                                                   ",{}]],"19":[["                                                                                                   ",{}]],"20":[["                                                                                                   ",{}]],"21":[["                                                                                                   ",{}]],"22":[["                                                                                                   ",{}]],"23":[["                                                                                                   ",{}]],"24":[["                                                                                                   ",{}]],"25":[["                                                                                                   ",{}]],"26":[["                                                                                                   ",{}]],"27":[["                                                                                                   ",{}]],"28":[["                                                                                                   ",{}]],"29":[["                                                                                                   ",{}]],"30":[["                                                                                                   ",{}]],"31":[["                                                                                                   ",{}]],"32":[["                                                                                                   ",{}]],"33":[["                                                                                                   ",{}]],"34":[["                                                                                                   ",{}]],"35":[["                                                                                                   ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                                   ",{}]]},"cursor":{"x":45,"y":0,"visible":true}}],[0.46608,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ v                                                     ",{}]]},"cursor":{"x":46}}],[0.063981,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vi                                                    ",{}]]},"cursor":{"x":47}}],[0.071968,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim                                                   ",{}]]},"cursor":{"x":48}}],[0.087675,{"cursor":{"x":49}}],[0.056261,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim c                                                 ",{}]]},"cursor":{"x":50}}],[0.111566,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch                                                ",{}]]},"cursor":{"x":51}}],[0.109464,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch15.cpp                                          ",{}]]},"cursor":{"x":58}}],[0.427644,{"cursor":{"x":0,"y":1}}],[0.032894,{"lines":{"0":[["                                                                                                   ",{}]]}}],[0.006753,{"lines":{"0":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"1":[["    ",{}],["struct",{"fg":2}],[" Event {                                                                                 ",{}]],"2":[["        Event(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" time) : count(count), time(time) {}                                ",{}]],"3":[["        ",{}],["int",{"fg":2}],[" count;                                                                                 ",{}]],"4":[["        ",{}],["time_t",{"fg":2}],[" time;                                                                               ",{}]],"5":[["    };                                                                                             ",{}]],"7":[["    list<Event> events;                                                                            ",{}]],"9":[["public",{"fg":3}],[":                                                                                            ",{}]],"10":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"11":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"12":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"14":[["        events.push_back(Event(count, time()));                                                    ",{}]],"15":[["    }                                                                                              ",{}]],"17":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"18":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"19":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"20":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"21":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"22":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"23":[["            count += i->count;                                                                     ",{}]],"24":[["        }                                                                                          ",{}]],"25":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"26":[["    }                                                                                              ",{}]],"28":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"29":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"30":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"31":[["        const_time now_secs = time();                                                              ",{}]],"32":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"33":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"34":[["            count += i->count;                                                                     ",{}]],"35":[["        }                                                                                          ",{}]],"36":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"37":[["\"ch15.cpp\" 38L, 1123C                                                            1,1           Top ",{}]]},"cursor":{"y":0}}],[0.019899,{}],[1.028408,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"2":[["    ",{}],["struct",{"fg":2}],[" Event {                                                                                 ",{}]],"3":[["        Event(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" time) : count(count), time(time) {}                                ",{}]],"4":[["        ",{}],["int",{"fg":2}],[" count;                                                                                 ",{}]],"5":[["        ",{}],["time_t",{"fg":2}],[" time;                                                                               ",{}]],"6":[["    };                                                                                             ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    list<Event> events;                                                                            ",{}]],"9":[["                                                                                                   ",{}]],"10":[["public",{"fg":3}],[":                                                                                            ",{}]],"11":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"12":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"13":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"15":[["        events.push_back(Event(count, time()));                                                    ",{}]],"16":[["    }                                                                                              ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"19":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"20":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"21":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"22":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"23":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"24":[["            count += i->count;                                                                     ",{}]],"25":[["        }                                                                                          ",{}]],"26":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"30":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"31":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"32":[["        const_time now_secs = time();                                                              ",{}]],"33":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"34":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"35":[["            count += i->count;                                                                     ",{}]],"36":[["        }                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,1           Top ",{}]]}}],[0.8712839999999999,{"lines":{"0":[["/                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,2           Top ",{}]]},"cursor":{"x":1}}],[0.14484,{"lines":{"0":[["//",{"fg":4}],["                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,3           Top ",{}]]},"cursor":{"x":2}}],[0.59979,{"lines":{"0":[["// ",{"fg":4}],["                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,4           Top ",{}]]},"cursor":{"x":3}}],[0.231853,{"lines":{"0":[["// N",{"fg":4}],["                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,5           Top ",{}]]},"cursor":{"x":4}}],[0.144046,{"lines":{"0":[["// No",{"fg":4}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,6           Top ",{}]]},"cursor":{"x":5}}],[0.119965,{"lines":{"0":[["// Now",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,7           Top ",{}]]},"cursor":{"x":6}}],[0.7520289999999999,{"lines":{"0":[["// Now.",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,8           Top ",{}]]},"cursor":{"x":7}}],[0.152076,{"lines":{"0":[["// Now. ",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,9           Top ",{}]]},"cursor":{"x":8}}],[0.280032,{"lines":{"0":[["// Now. l",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,10          Top ",{}]]},"cursor":{"x":9}}],[0.09604,{"lines":{"0":[["// Now. le",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,11          Top ",{}]]},"cursor":{"x":10}}],[0.10396,{"lines":{"0":[["// Now. let",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,12          Top ",{}]]},"cursor":{"x":11}}],[0.135902,{"lines":{"0":[["// Now. let'",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,13          Top ",{}]]},"cursor":{"x":12}}],[0.136558,{"lines":{"0":[["// Now. let's",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,14          Top ",{}]]},"cursor":{"x":13}}],[0.134763,{"lines":{"0":[["// Now. let's ",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,15          Top ",{}]]},"cursor":{"x":14}}],[0.28045,{"lines":{"0":[["// Now. let's m",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,16          Top ",{}]]},"cursor":{"x":15}}],[0.071634,{"lines":{"0":[["// Now. let's ma",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,17          Top ",{}]]},"cursor":{"x":16}}],[0.104624,{"lines":{"0":[["// Now. let's mak",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,18          Top ",{}]]},"cursor":{"x":17}}],[0.063808,{"lines":{"0":[["// Now. let's make",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,19          Top ",{}]]},"cursor":{"x":18}}],[0.112378,{"lines":{"0":[["// Now. let's make ",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,20          Top ",{}]]},"cursor":{"x":19}}],[0.26406,{"lines":{"0":[["// Now. let's make i",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,21          Top ",{}]]},"cursor":{"x":20}}],[0.119172,{"lines":{"0":[["// Now. let's make it",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,22          Top ",{}]]},"cursor":{"x":21}}],[0.09668300000000001,{"lines":{"0":[["// Now. let's make it ",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,23          Top ",{}]]},"cursor":{"x":22}}],[0.151988,{"lines":{"0":[["// Now. let's make it m",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,24          Top ",{}]]},"cursor":{"x":23}}],[0.071976,{"lines":{"0":[["// Now. let's make it mo",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,25          Top ",{}]]},"cursor":{"x":24}}],[0.056113,{"lines":{"0":[["// Now. let's make it mor",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,26          Top ",{}]]},"cursor":{"x":25}}],[0.047933,{"lines":{"0":[["// Now. let's make it more",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,27          Top ",{}]]},"cursor":{"x":26}}],[0.111857,{"lines":{"0":[["// Now. let's make it more ",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,28          Top ",{}]]},"cursor":{"x":27}}],[0.520348,{"lines":{"0":[["// Now. let's make it more r",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,29          Top ",{}]]},"cursor":{"x":28}}],[0.055857,{"lines":{"0":[["// Now. let's make it more re",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,30          Top ",{}]]},"cursor":{"x":29}}],[0.207831,{"lines":{"0":[["// Now. let's make it more rea",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,31          Top ",{}]]},"cursor":{"x":30}}],[0.943286,{"lines":{"0":[["// Now. let's make it more re",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,30          Top ",{}]]},"cursor":{"x":29}}],[0.144743,{"lines":{"0":[["// Now. let's make it more r",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,29          Top ",{}]]},"cursor":{"x":28}}],[0.152005,{"lines":{"0":[["// Now. let's make it more ",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,28          Top ",{}]]},"cursor":{"x":27}}],[0.09605,{"lines":{"0":[["// Now. let's make it more e",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,29          Top ",{}]]},"cursor":{"x":28}}],[0.111961,{"lines":{"0":[["// Now. let's make it more ea",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,30          Top ",{}]]},"cursor":{"x":29}}],[0.223966,{"lines":{"0":[["// Now. let's make it more eas",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,31          Top ",{}]]},"cursor":{"x":30}}],[0.104106,{"lines":{"0":[["// Now. let's make it more easi",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,32          Top ",{}]]},"cursor":{"x":31}}],[0.215883,{"lines":{"0":[["// Now. let's make it more easie",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,33          Top ",{}]]},"cursor":{"x":32}}],[0.088014,{"lines":{"0":[["// Now. let's make it more easier",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,34          Top ",{}]]},"cursor":{"x":33}}],[0.136088,{"lines":{"0":[["// Now. let's make it more easier ",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,35          Top ",{}]]},"cursor":{"x":34}}],[0.167964,{"lines":{"0":[["// Now. let's make it more easier t",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,36          Top ",{}]]},"cursor":{"x":35}}],[0.103935,{"lines":{"0":[["// Now. let's make it more easier to",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,37          Top ",{}]]},"cursor":{"x":36}}],[0.080008,{"lines":{"0":[["// Now. let's make it more easier to ",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,38          Top ",{}]]},"cursor":{"x":37}}],[0.08000500000000001,{"lines":{"0":[["// Now. let's make it more easier to r",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,39          Top ",{}]]},"cursor":{"x":38}}],[0.07199899999999999,{"lines":{"0":[["// Now. let's make it more easier to re",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,40          Top ",{}]]},"cursor":{"x":39}}],[0.128001,{"lines":{"0":[["// Now. let's make it more easier to rea",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,41          Top ",{}]]},"cursor":{"x":40}}],[0.080057,{"lines":{"0":[["// Now. let's make it more easier to read",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,42          Top ",{}]]},"cursor":{"x":41}}],[1.080023,{"lines":{"0":[["// Now. let's make it more easier to rea",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,41          Top ",{}]]},"cursor":{"x":40}}],[0.49994,{"lines":{"0":[["// Now. let's make it more easier to re",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,40          Top ",{}]]},"cursor":{"x":39}}],[0.030647,{"lines":{"0":[["// Now. let's make it more easier to r",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,39          Top ",{}]]},"cursor":{"x":38}}],[0.031935,{"lines":{"0":[["// Now. let's make it more easier to ",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,38          Top ",{}]]},"cursor":{"x":37}}],[0.029517,{"lines":{"0":[["// Now. let's make it more easier to",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,37          Top ",{}]]},"cursor":{"x":36}}],[0.031575,{"lines":{"0":[["// Now. let's make it more easier t",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,36          Top ",{}]]},"cursor":{"x":35}}],[0.030345,{"lines":{"0":[["// Now. let's make it more easier ",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,35          Top ",{}]]},"cursor":{"x":34}}],[0.030354,{"lines":{"0":[["// Now. let's make it more easier",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,34          Top ",{}]]},"cursor":{"x":33}}],[0.031056,{"lines":{"0":[["// Now. let's make it more easie",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,33          Top ",{}]]},"cursor":{"x":32}}],[0.029732,{"lines":{"0":[["// Now. let's make it more easi",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,32          Top ",{}]]},"cursor":{"x":31}}],[0.028765,{"lines":{"0":[["// Now. let's make it more eas",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,31          Top ",{}]]},"cursor":{"x":30}}],[0.031402,{"lines":{"0":[["// Now. let's make it more ea",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,30          Top ",{}]]},"cursor":{"x":29}}],[0.03138,{"lines":{"0":[["// Now. let's make it more e",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,29          Top ",{}]]},"cursor":{"x":28}}],[0.030532,{"lines":{"0":[["// Now. let's make it more ",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,28          Top ",{}]]},"cursor":{"x":27}}],[0.030338,{"lines":{"0":[["// Now. let's make it more",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,27          Top ",{}]]},"cursor":{"x":26}}],[0.031191,{"lines":{"0":[["// Now. let's make it mor",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,26          Top ",{}]]},"cursor":{"x":25}}],[0.030103,{"lines":{"0":[["// Now. let's make it mo",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,25          Top ",{}]]},"cursor":{"x":24}}],[0.030914,{"lines":{"0":[["// Now. let's make it m",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,24          Top ",{}]]},"cursor":{"x":23}}],[0.030381,{"lines":{"0":[["// Now. let's make it ",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,23          Top ",{}]]},"cursor":{"x":22}}],[0.02886,{"lines":{"0":[["// Now. let's make it",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,22          Top ",{}]]},"cursor":{"x":21}}],[0.029369,{"lines":{"0":[["// Now. let's make i",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,21          Top ",{}]]},"cursor":{"x":20}}],[0.029803,{"lines":{"0":[["// Now. let's make ",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,20          Top ",{}]]},"cursor":{"x":19}}],[0.031054,{"lines":{"0":[["// Now. let's make",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,19          Top ",{}]]},"cursor":{"x":18}}],[0.030594,{"lines":{"0":[["// Now. let's mak",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,18          Top ",{}]]},"cursor":{"x":17}}],[0.030241,{"lines":{"0":[["// Now. let's ma",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,17          Top ",{}]]},"cursor":{"x":16}}],[0.030973,{"lines":{"0":[["// Now. let's m",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,16          Top ",{}]]},"cursor":{"x":15}}],[0.030831,{"lines":{"0":[["// Now. let's ",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,15          Top ",{}]]},"cursor":{"x":14}}],[0.030893,{"lines":{"0":[["// Now. let's",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,14          Top ",{}]]},"cursor":{"x":13}}],[0.031281,{"lines":{"0":[["// Now. let'",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,13          Top ",{}]]},"cursor":{"x":12}}],[0.031119,{"lines":{"0":[["// Now. let",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,12          Top ",{}]]},"cursor":{"x":11}}],[0.030779,{"lines":{"0":[["// Now. le",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,11          Top ",{}]]},"cursor":{"x":10}}],[0.031996,{"lines":{"0":[["// Now. l",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,10          Top ",{}]]},"cursor":{"x":9}}],[0.032235,{"lines":{"0":[["// Now. ",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,9           Top ",{}]]},"cursor":{"x":8}}],[0.029917,{"lines":{"0":[["// Now.",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,8           Top ",{}]]},"cursor":{"x":7}}],[0.032426,{"lines":{"0":[["// Now",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,7           Top ",{}]]},"cursor":{"x":6}}],[0.030794,{"lines":{"0":[["// No",{"fg":4}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,6           Top ",{}]]},"cursor":{"x":5}}],[0.030351,{"lines":{"0":[["// N",{"fg":4}],["                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,5           Top ",{}]]},"cursor":{"x":4}}],[0.030494,{"lines":{"0":[["// ",{"fg":4}],["                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,4           Top ",{}]]},"cursor":{"x":3}}],[0.031346,{"lines":{"0":[["//",{"fg":4}],["                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,3           Top ",{}]]},"cursor":{"x":2}}],[0.13244,{"lines":{"0":[["/                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,2           Top ",{}]]},"cursor":{"x":1}}],[0.192112,{"lines":{"0":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,1           Top ",{}]]},"cursor":{"x":0}}],[0.312718,{"lines":{"37":[["                                                                                                   ",{}]]}}],[0.28692,{"lines":{"37":[["                                                                                 1,0-1         Top ",{}]]}}],[0.152357,{"lines":{"0":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"1":[["    ",{}],["struct",{"fg":2}],[" Event {                                                                                 ",{}]],"2":[["        Event(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" time) : count(count), time(time) {}                                ",{}]],"3":[["        ",{}],["int",{"fg":2}],[" count;                                                                                 ",{}]],"4":[["        ",{}],["time_t",{"fg":2}],[" time;                                                                               ",{}]],"5":[["    };                                                                                             ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    list<Event> events;                                                                            ",{}]],"8":[["                                                                                                   ",{}]],"9":[["public",{"fg":3}],[":                                                                                            ",{}]],"10":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"11":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"12":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"14":[["        events.push_back(Event(count, time()));                                                    ",{}]],"15":[["    }                                                                                              ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"18":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"19":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"20":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"21":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"22":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"23":[["            count += i->count;                                                                     ",{}]],"24":[["        }                                                                                          ",{}]],"25":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"29":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"30":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"31":[["        const_time now_secs = time();                                                              ",{}]],"32":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"33":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"34":[["            count += i->count;                                                                     ",{}]],"35":[["        }                                                                                          ",{}]],"36":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"37":[["                                                                                 1,1           Top ",{}]]}}],[1.182992,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.104632,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.104389,{"lines":{"37":[["\"ch15.cpp\"                                                                                         ",{}]]},"cursor":{"x":10,"visible":false}}],[0.128601,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    1,1           Top ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.271139,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    2,1           Top ",{}]]},"cursor":{"y":1}}],[0.499988,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    3,1           Top ",{}]]},"cursor":{"y":2}}],[0.031974,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    4,1           Top ",{}]]},"cursor":{"y":3}}],[0.032816,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    5,1           Top ",{}]]},"cursor":{"y":4}}],[0.028647,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    6,1           Top ",{}]]},"cursor":{"y":5}}],[0.029917,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    7,0-1         Top ",{}]]},"cursor":{"y":6}}],[0.031608,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    8,1           Top ",{}]]},"cursor":{"y":7}}],[0.029727,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    9,0-1         Top ",{}]]},"cursor":{"y":8}}],[0.030931,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    10,1          Top ",{}]]},"cursor":{"y":9}}],[0.031022,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    11,1          Top ",{}]]},"cursor":{"y":10}}],[0.030951,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    12,1          Top ",{}]]},"cursor":{"y":11}}],[0.030228,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    13,1          Top ",{}]]},"cursor":{"y":12}}],[0.031556,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    14,1          Top ",{}]]},"cursor":{"y":13}}],[0.028736,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    15,1          Top ",{}]]},"cursor":{"y":14}}],[0.031997,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    16,1          Top ",{}]]},"cursor":{"y":15}}],[0.03029,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    17,0-1        Top ",{}]]},"cursor":{"y":16}}],[0.030889,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    18,1          Top ",{}]]},"cursor":{"y":17}}],[0.030934,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    19,1          Top ",{}]]},"cursor":{"y":18}}],[0.030549,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    20,1          Top ",{}]]},"cursor":{"y":19}}],[0.03099,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    21,1          Top ",{}]]},"cursor":{"y":20}}],[0.03044,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    22,1          Top ",{}]]},"cursor":{"y":21}}],[0.03093,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    23,1          Top ",{}]]},"cursor":{"y":23}}],[0.029669,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    24,1          Top ",{}]]},"cursor":{"y":24}}],[0.031236,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    25,1          Top ",{}]]},"cursor":{"y":25}}],[0.030866,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    26,1          Top ",{}]]},"cursor":{"y":26}}],[0.030854,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    27,0-1        Top ",{}]]},"cursor":{"y":27}}],[0.031348,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    28,1          Top ",{}]]},"cursor":{"y":28}}],[0.029647,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    29,1          Top ",{}]]},"cursor":{"y":29}}],[0.030373,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    30,1          Top ",{}]]},"cursor":{"y":30}}],[0.030322,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    31,1          Top ",{}]]},"cursor":{"y":31}}],[0.031126,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    32,1          Top ",{}]]},"cursor":{"y":32}}],[0.030753,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    33,1          Top ",{}]]},"cursor":{"y":34}}],[0.030925,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    34,1          Top ",{}]]},"cursor":{"y":35}}],[0.031227,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    35,1          Top ",{}]]},"cursor":{"y":36}}],[0.029996,{"lines":{"0":[["    ",{}],["struct",{"fg":2}],[" Event {                                                                                 ",{}]],"1":[["        Event(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" time) : count(count), time(time) {}                                ",{}]],"2":[["        ",{}],["int",{"fg":2}],[" count;                                                                                 ",{}]],"3":[["        ",{}],["time_t",{"fg":2}],[" time;                                                                               ",{}]],"4":[["    };                                                                                             ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    list<Event> events;                                                                            ",{}]],"7":[["                                                                                                   ",{}]],"8":[["public",{"fg":3}],[":                                                                                            ",{}]],"9":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"10":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"11":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"13":[["        events.push_back(Event(count, time()));                                                    ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"17":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"18":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"19":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"20":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"21":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"22":[["            count += i->count;                                                                     ",{}]],"23":[["        }                                                                                          ",{}]],"24":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"28":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"29":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"30":[["        const_time now_secs = time();                                                              ",{}]],"31":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"32":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"33":[["            count += i->count;                                                                     ",{}]],"34":[["        }                                                                                          ",{}]],"35":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 36,1          33% ",{}]]}}],[0.034358,{"lines":{"0":[["        Event(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" time) : count(count), time(time) {}                                ",{}]],"1":[["        ",{}],["int",{"fg":2}],[" count;                                                                                 ",{}]],"2":[["        ",{}],["time_t",{"fg":2}],[" time;                                                                               ",{}]],"3":[["    };                                                                                             ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    list<Event> events;                                                                            ",{}]],"6":[["                                                                                                   ",{}]],"7":[["public",{"fg":3}],[":                                                                                            ",{}]],"8":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"9":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"10":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"11":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"12":[["        events.push_back(Event(count, time()));                                                    ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"16":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"17":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"18":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"19":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"20":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"21":[["            count += i->count;                                                                     ",{}]],"22":[["        }                                                                                          ",{}]],"23":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"27":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"28":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"29":[["        const_time now_secs = time();                                                              ",{}]],"30":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"31":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"32":[["            count += i->count;                                                                     ",{}]],"33":[["        }                                                                                          ",{}]],"34":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["                                                                                 37,1          66% ",{}]]}}],[0.025061,{"lines":{"0":[["        ",{}],["int",{"fg":2}],[" count;                                                                                 ",{}]],"1":[["        ",{}],["time_t",{"fg":2}],[" time;                                                                               ",{}]],"2":[["    };                                                                                             ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    list<Event> events;                                                                            ",{}]],"5":[["                                                                                                   ",{}]],"6":[["public",{"fg":3}],[":                                                                                            ",{}]],"7":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"8":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"9":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"10":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"11":[["        events.push_back(Event(count, time()));                                                    ",{}]],"12":[["    }                                                                                              ",{}]],"13":[["                                                                                                   ",{}]],"14":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"15":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"16":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"17":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"18":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"19":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"20":[["            count += i->count;                                                                     ",{}]],"21":[["        }                                                                                          ",{}]],"22":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"26":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"27":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"28":[["        const_time now_secs = time();                                                              ",{}]],"29":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"30":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"31":[["            count += i->count;                                                                     ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["};                                                                                                 ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 38,0-1        Bot ",{}]]}}],[0.031585,{}],[0.028814,{}],[0.030578,{}],[0.031409,{}],[0.116149,{"lines":{"37":[["                                                                                 37,1          Bot ",{}]]},"cursor":{"y":35}}],[0.496759,{"lines":{"37":[["                                                                                 36,1          Bot ",{}]]},"cursor":{"y":34}}],[0.031897,{"lines":{"37":[["                                                                                 35,1          Bot ",{}]]},"cursor":{"y":33}}],[0.030599,{"lines":{"37":[["                                                                                 34,1          Bot ",{}]]},"cursor":{"y":32}}],[0.0313,{"lines":{"37":[["                                                                                 33,1          Bot ",{}]]},"cursor":{"y":31}}],[0.030351,{"lines":{"37":[["                                                                                 32,1          Bot ",{}]]},"cursor":{"y":29}}],[0.030271,{"lines":{"37":[["                                                                                 31,1          Bot ",{}]]},"cursor":{"y":28}}],[0.030315,{"lines":{"37":[["                                                                                 30,1          Bot ",{}]]},"cursor":{"y":27}}],[0.0311,{"lines":{"37":[["                                                                                 29,1          Bot ",{}]]},"cursor":{"y":26}}],[0.031194,{"lines":{"37":[["                                                                                 28,1          Bot ",{}]]},"cursor":{"y":25}}],[0.031434,{"lines":{"37":[["                                                                                 27,0-1        Bot ",{}]]},"cursor":{"y":24}}],[0.030626,{"lines":{"37":[["                                                                                 26,1          Bot ",{}]]},"cursor":{"y":23}}],[0.030579,{"lines":{"37":[["                                                                                 25,1          Bot ",{}]]},"cursor":{"y":22}}],[0.029674,{"lines":{"37":[["                                                                                 24,1          Bot ",{}]]},"cursor":{"y":21}}],[0.03028,{"lines":{"37":[["                                                                                 23,1          Bot ",{}]]},"cursor":{"y":20}}],[0.030165,{"lines":{"37":[["                                                                                 22,1          Bot ",{}]]},"cursor":{"y":18}}],[0.031101,{"lines":{"37":[["                                                                                 21,1          Bot ",{}]]},"cursor":{"y":17}}],[0.03067,{"lines":{"37":[["                                                                                 20,1          Bot ",{}]]},"cursor":{"y":16}}],[0.030577,{"lines":{"37":[["                                                                                 19,1          Bot ",{}]]},"cursor":{"y":15}}],[0.13761,{"lines":{"37":[["                                                                                 18,1          Bot ",{}]]},"cursor":{"y":14}}],[0.18411,{"lines":{"37":[["                                                                                 17,0-1        Bot ",{}]]},"cursor":{"y":13}}],[0.384217,{"lines":{"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"16":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"17":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"18":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"19":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"20":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"21":[["            count += i->count;                                                                     ",{}]],"22":[["        }                                                                                          ",{}]],"23":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"27":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"28":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"29":[["        const_time now_secs = time();                                                              ",{}]],"30":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"31":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"32":[["            count += i->count;                                                                     ",{}]],"33":[["        }                                                                                          ",{}]],"34":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,1          75% ",{}]]},"cursor":{"y":14}}],[0.248121,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     18,5          75% ",{}]]},"cursor":{"x":4}}],[0.351947,{"lines":{"14":[["    /                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,6          75% ",{}]]},"cursor":{"x":5}}],[0.127952,{"lines":{"14":[["    ",{}],["//",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,7          75% ",{}]]},"cursor":{"x":6}}],[0.080099,{"lines":{"14":[["    ",{}],["// ",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,8          75% ",{}]]},"cursor":{"x":7}}],[0.335839,{"lines":{"14":[["    ",{}],["// T",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,9          75% ",{}]]},"cursor":{"x":8}}],[0.800107,{"lines":{"14":[["    ",{}],["// Tw",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,10         75% ",{}]]},"cursor":{"x":9}}],[0.128262,{"lines":{"14":[["    ",{}],["// Two",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,11         75% ",{}]]},"cursor":{"x":10}}],[0.111691,{"lines":{"14":[["    ",{}],["// Two ",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,12         75% ",{}]]},"cursor":{"x":11}}],[0.384118,{"lines":{"14":[["    ",{}],["// Two m",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,13         75% ",{}]]},"cursor":{"x":12}}],[0.087935,{"lines":{"14":[["    ",{}],["// Two mo",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,14         75% ",{}]]},"cursor":{"x":13}}],[0.343991,{"lines":{"14":[["    ",{}],["// Two m",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,13         75% ",{}]]},"cursor":{"x":12}}],[0.296008,{"lines":{"14":[["    ",{}],["// Two me",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,14         75% ",{}]]},"cursor":{"x":13}}],[0.391956,{"lines":{"14":[["    ",{}],["// Two met",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,15         75% ",{}]]},"cursor":{"x":14}}],[0.104991,{"lines":{"14":[["    ",{}],["// Two meth",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,16         75% ",{}]]},"cursor":{"x":15}}],[0.063153,{"lines":{"14":[["    ",{}],["// Two metho",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,17         75% ",{}]]},"cursor":{"x":16}}],[0.096086,{"lines":{"14":[["    ",{}],["// Two method",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,18         75% ",{}]]},"cursor":{"x":17}}],[0.14384,{"lines":{"14":[["    ",{}],["// Two methods",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,19         75% ",{}]]},"cursor":{"x":18}}],[0.119957,{"lines":{"14":[["    ",{}],["// Two methods ",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,20         75% ",{}]]},"cursor":{"x":19}}],[0.327906,{"lines":{"14":[["    ",{}],["// Two methods l",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,21         75% ",{}]]},"cursor":{"x":20}}],[0.184018,{"lines":{"14":[["    ",{}],["// Two methods lo",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,22         75% ",{}]]},"cursor":{"x":21}}],[0.152071,{"lines":{"14":[["    ",{}],["// Two methods loo",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,23         75% ",{}]]},"cursor":{"x":22}}],[0.407981,{"lines":{"14":[["    ",{}],["// Two methods lo",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,22         75% ",{}]]},"cursor":{"x":21}}],[0.143938,{"lines":{"14":[["    ",{}],["// Two methods l",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,21         75% ",{}]]},"cursor":{"x":20}}],[0.824075,{"lines":{"14":[["    ",{}],["// Two methods lo",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,22         75% ",{}]]},"cursor":{"x":21}}],[0.168356,{"lines":{"14":[["    ",{}],["// Two methods loo",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,23         75% ",{}]]},"cursor":{"x":22}}],[0.35169,{"lines":{"14":[["    ",{}],["// Two methods look",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,24         75% ",{}]]},"cursor":{"x":23}}],[0.328116,{"lines":{"14":[["    ",{}],["// Two methods look ",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,25         75% ",{}]]},"cursor":{"x":24}}],[0.255902,{"lines":{"14":[["    ",{}],["// Two methods look h",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,26         75% ",{}]]},"cursor":{"x":25}}],[0.120148,{"lines":{"14":[["    ",{}],["// Two methods look ha",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,27         75% ",{}]]},"cursor":{"x":26}}],[0.143806,{"lines":{"14":[["    ",{}],["// Two methods look hav",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,28         75% ",{}]]},"cursor":{"x":27}}],[0.119888,{"lines":{"14":[["    ",{}],["// Two methods look have",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,29         75% ",{}]]},"cursor":{"x":28}}],[0.03251,{"lines":{"14":[["    ",{}],["// Two methods look have ",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,30         75% ",{}]]},"cursor":{"x":29}}],[0.199645,{"lines":{"14":[["    ",{}],["// Two methods look have s",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,31         75% ",{}]]},"cursor":{"x":30}}],[0.055973,{"lines":{"14":[["    ",{}],["// Two methods look have so",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,32         75% ",{}]]},"cursor":{"x":31}}],[0.127912,{"lines":{"14":[["    ",{}],["// Two methods look have som",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,33         75% ",{}]]},"cursor":{"x":32}}],[0.104088,{"lines":{"14":[["    ",{}],["// Two methods look have some",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,34         75% ",{}]]},"cursor":{"x":33}}],[0.056009,{"lines":{"14":[["    ",{}],["// Two methods look have some ",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,35         75% ",{}]]},"cursor":{"x":34}}],[0.151825,{"lines":{"14":[["    ",{}],["// Two methods look have some d",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,36         75% ",{}]]},"cursor":{"x":35}}],[0.168269,{"lines":{"14":[["    ",{}],["// Two methods look have some ",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,35         75% ",{}]]},"cursor":{"x":34}}],[1.93583,{"lines":{"14":[["    ",{}],["// Two methods look have some d",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,36         75% ",{}]]},"cursor":{"x":35}}],[0.112047,{"lines":{"14":[["    ",{}],["// Two methods look have some du",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,37         75% ",{}]]},"cursor":{"x":36}}],[0.143896,{"lines":{"14":[["    ",{}],["// Two methods look have some dup",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,38         75% ",{}]]},"cursor":{"x":37}}],[0.21606,{"lines":{"14":[["    ",{}],["// Two methods look have some dupl",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,39         75% ",{}]]},"cursor":{"x":38}}],[0.080039,{"lines":{"14":[["    ",{}],["// Two methods look have some dupli",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,40         75% ",{}]]},"cursor":{"x":39}}],[0.01574,{"lines":{"14":[["    ",{}],["// Two methods look have some duplic",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,41         75% ",{}]]},"cursor":{"x":40}}],[0.112348,{"lines":{"14":[["    ",{}],["// Two methods look have some duplica",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,42         75% ",{}]]},"cursor":{"x":41}}],[0.08792800000000001,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicat",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,43         75% ",{}]]},"cursor":{"x":42}}],[0.103947,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicat ",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,44         75% ",{}]]},"cursor":{"x":43}}],[0.335793,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicat c",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,45         75% ",{}]]},"cursor":{"x":44}}],[0.120436,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicat co",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,46         75% ",{}]]},"cursor":{"x":45}}],[0.127827,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicat cod",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,47         75% ",{}]]},"cursor":{"x":46}}],[0.255999,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicat co",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,46         75% ",{}]]},"cursor":{"x":45}}],[0.144025,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicat c",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,45         75% ",{}]]},"cursor":{"x":44}}],[0.152094,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicat ",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,44         75% ",{}]]},"cursor":{"x":43}}],[0.151937,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicat",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,43         75% ",{}]]},"cursor":{"x":42}}],[0.128115,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicate",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,44         75% ",{}]]},"cursor":{"x":43}}],[0.103914,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicate ",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,45         75% ",{}]]},"cursor":{"x":44}}],[0.159924,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicate c",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,46         75% ",{}]]},"cursor":{"x":45}}],[0.103232,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicate co",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,47         75% ",{}]]},"cursor":{"x":46}}],[0.09682499999999999,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicate cod",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,48         75% ",{}]]},"cursor":{"x":47}}],[0.160022,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicate code",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,49         75% ",{}]]},"cursor":{"x":48}}],[0.352,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicate cod",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,48         75% ",{}]]},"cursor":{"x":47}}],[0.50112,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicate co",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,47         75% ",{}]]},"cursor":{"x":46}}],[0.030575,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicate c",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,46         75% ",{}]]},"cursor":{"x":45}}],[0.031101,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicate ",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,45         75% ",{}]]},"cursor":{"x":44}}],[0.030906,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicate",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,44         75% ",{}]]},"cursor":{"x":43}}],[0.031353,{"lines":{"14":[["    ",{}],["// Two methods look have some duplicat",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,43         75% ",{}]]},"cursor":{"x":42}}],[0.030312,{"lines":{"14":[["    ",{}],["// Two methods look have some duplica",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,42         75% ",{}]]},"cursor":{"x":41}}],[0.030217,{"lines":{"14":[["    ",{}],["// Two methods look have some duplic",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,41         75% ",{}]]},"cursor":{"x":40}}],[0.030489,{"lines":{"14":[["    ",{}],["// Two methods look have some dupli",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,40         75% ",{}]]},"cursor":{"x":39}}],[0.030869,{"lines":{"14":[["    ",{}],["// Two methods look have some dupl",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,39         75% ",{}]]},"cursor":{"x":38}}],[0.030168,{"lines":{"14":[["    ",{}],["// Two methods look have some dup",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,38         75% ",{}]]},"cursor":{"x":37}}],[0.030858,{"lines":{"14":[["    ",{}],["// Two methods look have some du",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,37         75% ",{}]]},"cursor":{"x":36}}],[0.030452,{"lines":{"14":[["    ",{}],["// Two methods look have some d",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,36         75% ",{}]]},"cursor":{"x":35}}],[0.030626,{"lines":{"14":[["    ",{}],["// Two methods look have some ",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,35         75% ",{}]]},"cursor":{"x":34}}],[0.029896,{"lines":{"14":[["    ",{}],["// Two methods look have some",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,34         75% ",{}]]},"cursor":{"x":33}}],[0.03057,{"lines":{"14":[["    ",{}],["// Two methods look have som",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,33         75% ",{}]]},"cursor":{"x":32}}],[0.030995,{"lines":{"14":[["    ",{}],["// Two methods look have so",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,32         75% ",{}]]},"cursor":{"x":31}}],[0.032176,{"lines":{"14":[["    ",{}],["// Two methods look have s",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,31         75% ",{}]]},"cursor":{"x":30}}],[0.029961,{"lines":{"14":[["    ",{}],["// Two methods look have ",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,30         75% ",{}]]},"cursor":{"x":29}}],[0.031261,{"lines":{"14":[["    ",{}],["// Two methods look have",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,29         75% ",{}]]},"cursor":{"x":28}}],[0.030895,{"lines":{"14":[["    ",{}],["// Two methods look hav",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,28         75% ",{}]]},"cursor":{"x":27}}],[0.030619,{"lines":{"14":[["    ",{}],["// Two methods look ha",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,27         75% ",{}]]},"cursor":{"x":26}}],[0.029553,{"lines":{"14":[["    ",{}],["// Two methods look h",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,26         75% ",{}]]},"cursor":{"x":25}}],[0.030432,{"lines":{"14":[["    ",{}],["// Two methods look ",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,25         75% ",{}]]},"cursor":{"x":24}}],[0.090169,{"lines":{"14":[["    ",{}],["// Two methods lo",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,22         75% ",{}]]},"cursor":{"x":21}}],[0.031968,{"lines":{"14":[["    ",{}],["// Two methods l",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,21         75% ",{}]]},"cursor":{"x":20}}],[0.031509,{"lines":{"14":[["    ",{}],["// Two methods ",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,20         75% ",{}]]},"cursor":{"x":19}}],[0.029162,{"lines":{"14":[["    ",{}],["// Two methods",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,19         75% ",{}]]},"cursor":{"x":18}}],[0.032852,{"lines":{"14":[["    ",{}],["// Two method",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,18         75% ",{}]]},"cursor":{"x":17}}],[0.030754,{"lines":{"14":[["    ",{}],["// Two metho",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,17         75% ",{}]]},"cursor":{"x":16}}],[0.031358,{"lines":{"14":[["    ",{}],["// Two meth",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,16         75% ",{}]]},"cursor":{"x":15}}],[0.030211,{"lines":{"14":[["    ",{}],["// Two met",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,15         75% ",{}]]},"cursor":{"x":14}}],[0.029666,{"lines":{"14":[["    ",{}],["// Two me",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,14         75% ",{}]]},"cursor":{"x":13}}],[0.032512,{"lines":{"14":[["    ",{}],["// Two m",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,13         75% ",{}]]},"cursor":{"x":12}}],[0.029257,{"lines":{"14":[["    ",{}],["// Two ",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,12         75% ",{}]]},"cursor":{"x":11}}],[0.029941,{"lines":{"14":[["    ",{}],["// Two",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,11         75% ",{}]]},"cursor":{"x":10}}],[0.031156,{"lines":{"14":[["    ",{}],["// Tw",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,10         75% ",{}]]},"cursor":{"x":9}}],[0.029941,{"lines":{"14":[["    ",{}],["// T",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,9          75% ",{}]]},"cursor":{"x":8}}],[0.030778,{"lines":{"14":[["    ",{}],["// ",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,8          75% ",{}]]},"cursor":{"x":7}}],[0.032537,{"lines":{"14":[["    ",{}],["//",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,7          75% ",{}]]},"cursor":{"x":6}}],[0.029926,{"lines":{"14":[["    /                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,6          75% ",{}]]},"cursor":{"x":5}}],[0.128724,{"lines":{"14":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     18,5          75% ",{}]]},"cursor":{"x":4}}],[1.840972,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":3}}],[0.598874,{"lines":{"37":[["                                                                                 18,4          75% ",{}]]}}],[0.160596,{"lines":{"14":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"15":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"16":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"17":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"18":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"19":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"20":[["            count += i->count;                                                                     ",{}]],"21":[["        }                                                                                          ",{}]],"22":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"26":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"27":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"28":[["        const_time now_secs = time();                                                              ",{}]],"29":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"30":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"31":[["            count += i->count;                                                                     ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["};                                                                                                 ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 18,5          Bot ",{}]]},"cursor":{"x":4}}],[0.927095,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.104893,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.239419,{"lines":{"37":[["\"ch15.cpp\"                                                                                         ",{}]]},"cursor":{"x":10,"visible":false}}],[0.117757,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    18,5          Bot ",{}]]},"cursor":{"x":4,"y":14,"visible":true}}],[0.450194,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    17,0-1        Bot ",{}]]},"cursor":{"x":0,"y":13}}],[0.173032,{"lines":{"10":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                          ",{}]],"12":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15.cpp\" 38L, 1123C written                                                    16,5          Bot ",{}]]},"cursor":{"x":4,"y":12}}],[0.167054,{"lines":{"10":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"12":[["    }                                                                                              ",{}]],"37":[["\"ch15.cpp\" 38L, 1123C written                                                    15,5          Bot ",{}]]},"cursor":{"y":11}}],[0.155823,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    14,5          Bot ",{}]]},"cursor":{"y":10}}],[0.144045,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    13,5          Bot ",{}]]},"cursor":{"y":9}}],[0.143975,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    12,5          Bot ",{}]]},"cursor":{"y":8}}],[0.151976,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    11,5          Bot ",{}]]},"cursor":{"y":7}}],[0.152013,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    10,5          Bot ",{}]]},"cursor":{"y":6}}],[0.152146,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    9,0-1         Bot ",{}]]},"cursor":{"x":0,"y":5}}],[0.17601,{"lines":{"37":[["\"ch15.cpp\" 38L, 1123C written                                                    8,5           Bot ",{}]]},"cursor":{"x":4,"y":4}}],[0.504037,{"lines":{"6":[["                                                                                                   ",{}]],"7":[["public",{"fg":3}],[":                                                                                            ",{}]],"8":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"9":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"10":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"11":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"12":[["        events.push_back(Event(count, time()));                                                    ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"16":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"17":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"18":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"19":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"20":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"21":[["            count += i->count;                                                                     ",{}]],"22":[["        }                                                                                          ",{}]],"23":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"27":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"28":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"29":[["        const_time now_secs = time();                                                              ",{}]],"30":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"31":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"32":[["            count += i->count;                                                                     ",{}]],"33":[["        }                                                                                          ",{}]],"34":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     9,5           75% ",{}]]},"cursor":{"y":5}}],[0.952222,{"lines":{"7":[["                                                                                                   ",{}]],"8":[["public",{"fg":3}],[":                                                                                            ",{}]],"9":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"10":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"11":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"13":[["        events.push_back(Event(count, time()));                                                    ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["                                                                                                   ",{}]],"16":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"17":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"18":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"19":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"20":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"21":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"22":[["            count += i->count;                                                                     ",{}]],"23":[["        }                                                                                          ",{}]],"24":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"28":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"29":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"30":[["        const_time now_secs = time();                                                              ",{}]],"31":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"32":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"33":[["            count += i->count;                                                                     ",{}]],"34":[["        }                                                                                          ",{}]],"35":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,5          60% ",{}]]},"cursor":{"y":6}}],[0.463801,{"lines":{"6":[["    i                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,6          60% ",{}]]},"cursor":{"x":5}}],[0.07192999999999999,{"lines":{"6":[["    in                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,7          60% ",{}]]},"cursor":{"x":6}}],[0.07176200000000001,{"lines":{"6":[["    ",{}],["int",{"fg":2}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,8          60% ",{}]]},"cursor":{"x":7}}],[0.080237,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     10,9          60% ",{}]]},"cursor":{"x":8}}],[0.53709,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" C                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,10         60% ",{}]]},"cursor":{"x":9}}],[0.151742,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" Co                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,11         60% ",{}]]},"cursor":{"x":10}}],[0.05527,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" Cou                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,12         60% ",{}]]},"cursor":{"x":11}}],[0.176654,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" Coun                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,13         60% ",{}]]},"cursor":{"x":12}}],[0.071446,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" Count                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,14         60% ",{}]]},"cursor":{"x":13}}],[0.223835,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountS                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,15         60% ",{}]]},"cursor":{"x":14}}],[0.063956,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSi                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,16         60% ",{}]]},"cursor":{"x":15}}],[0.128062,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSin                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,17         60% ",{}]]},"cursor":{"x":16}}],[0.127967,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSinc                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,18         60% ",{}]]},"cursor":{"x":17}}],[0.16,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,19         60% ",{}]]},"cursor":{"x":18}}],[0.282795,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(                                                                                ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"fg":7,"bg":1,"bold":true}],["                                                                          ",{}]],"14":[["    ",{}],["}",{"fg":7,"bg":1,"bold":true}],["                                                                                              ",{}]],"17":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"fg":7,"bg":1,"bold":true}],["                                                                            ",{}]],"21":[["_secs - ",{}],["60",{"fg":1}],["; ++i) ",{}],["{",{"fg":7,"bg":1,"bold":true}],["                                                                                 ",{}]],"23":[["        ",{}],["}",{"fg":7,"bg":1,"bold":true}],["                                                                                          ",{}]],"25":[["    ",{}],["}",{"fg":7,"bg":1,"bold":true}],["                                                                                              ",{}]],"28":[["    ",{}],["int",{"fg":2}],[" HourCount() ",{}],["{",{"fg":7,"bg":1,"bold":true}],["                                                                              ",{}]],"32":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) ",{}],["{",{"fg":7,"bg":1,"bold":true}],["                                                                               ",{}]],"34":[["        ",{}],["}",{"fg":7,"bg":1,"bold":true}],["                                                                                          ",{}]],"36":[["    ",{}],["}",{"fg":7,"bg":1,"bold":true}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,20         60% ",{}]]},"cursor":{"x":19}}],[0.149378,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(t                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,21         60% ",{}]]},"cursor":{"x":20}}],[0.071842,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(ti                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,22         60% ",{}]]},"cursor":{"x":21}}],[0.136274,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(tim                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,23         60% ",{}]]},"cursor":{"x":22}}],[0.06395000000000001,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(time                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,24         60% ",{}]]},"cursor":{"x":23}}],[0.287825,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(time_                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,25         60% ",{}]]},"cursor":{"x":24}}],[0.015839,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(time_+                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,26         60% ",{}]]},"cursor":{"x":25}}],[0.104162,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(time_+t                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,27         60% ",{}]]},"cursor":{"x":26}}],[0.296272,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(time_+                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,26         60% ",{}]]},"cursor":{"x":25}}],[0.136026,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(time_                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,25         60% ",{}]]},"cursor":{"x":24}}],[0.111815,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,26         60% ",{}]]},"cursor":{"x":25}}],[0.599908,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     10,27         60% ",{}]]},"cursor":{"x":26}}],[0.527955,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" c                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,28         60% ",{}]]},"cursor":{"x":27}}],[0.152028,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cu                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,29         60% ",{}]]},"cursor":{"x":28}}],[0.095981,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cut                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,30         60% ",{}]]},"cursor":{"x":29}}],[0.21604,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cuto                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,31         60% ",{}]]},"cursor":{"x":30}}],[0.112083,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutof                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,32         60% ",{}]]},"cursor":{"x":31}}],[0.135987,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,33         60% ",{}]]},"cursor":{"x":32}}],[0.328202,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince",{}],["(",{"bg":6}],["time_t",{"fg":2}],[" cutoff",{}],[")",{"bg":6}],["                                                                  ",{}]],"12":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"14":[["    }                                                                                              ",{}]],"17":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"21":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"23":[["        }                                                                                          ",{}]],"25":[["    }                                                                                              ",{}]],"28":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"32":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"34":[["        }                                                                                          ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,34         60% ",{}]]},"cursor":{"x":33}}],[0.148178,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff)                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,35         60% ",{}]]},"cursor":{"x":34}}],[0.338858,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     10,36         60% ",{}]]},"cursor":{"x":35}}],[0.160839,{"lines":{"8":[["                                                                                                   ",{}]],"9":[["public",{"fg":3}],[":                                                                                            ",{}]],"10":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"11":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"12":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"14":[["        events.push_back(Event(count, time()));                                                    ",{}]],"15":[["    }                                                                                              ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"18":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"19":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"20":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"21":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"22":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"23":[["            count += i->count;                                                                     ",{}]],"24":[["        }                                                                                          ",{}]],"25":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"29":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"30":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"31":[["        const_time now_secs = time();                                                              ",{}]],"32":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"33":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"34":[["            count += i->count;                                                                     ",{}]],"35":[["        }                                                                                          ",{}]],"36":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,5          50% ",{}]]},"cursor":{"x":4,"y":7}}],[0.224893,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) ",{}],["{",{"bg":6}],["                                                                ",{}]],"7":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,6          50% ",{}]]},"cursor":{"x":5}}],[0.119798,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":4}}],[0.764144,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.114788,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.08826199999999999,{"lines":{"37":[["\"ch15.cpp\"                                                                                         ",{}]]},"cursor":{"x":10,"visible":false}}],[0.123475,{"lines":{"37":[["\"ch15.cpp\" 41L, 1166C written                                                    11,5          50% ",{}]]},"cursor":{"x":4,"y":7,"visible":true}}],[0.376734,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"7":[["    }                                                                                              ",{}]],"37":[["\"ch15.cpp\" 41L, 1166C written                                                    10,5          50% ",{}]]},"cursor":{"y":6}}],[0.155793,{"lines":{"7":[["                                                                                                   ",{}]],"8":[["    }                                                                                              ",{}]],"9":[["                                                                                                   ",{}]],"10":[["public",{"fg":3}],[":                                                                                            ",{}]],"11":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"12":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"13":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"14":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"15":[["        events.push_back(Event(count, time()));                                                    ",{}]],"16":[["    }                                                                                              ",{}]],"17":[["                                                                                                   ",{}]],"18":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"19":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"20":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"21":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"22":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"23":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"24":[["            count += i->count;                                                                     ",{}]],"25":[["        }                                                                                          ",{}]],"26":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"30":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"31":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"32":[["        const_time now_secs = time();                                                              ",{}]],"33":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"34":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"35":[["            count += i->count;                                                                     ",{}]],"36":[["        }                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     11,5          42% ",{}]]},"cursor":{"y":7}}],[2.368782,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":0}}],[0.343047,{"lines":{"37":[["                                                                                 11,0-1        42% ",{}]]}}],[0.149149,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) ",{}],["{",{"bg":6}],["                                                                ",{}]],"7":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"8":[["                                                                                                   ",{}]],"9":[["public",{"fg":3}],[":                                                                                            ",{}]],"10":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"11":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"12":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"13":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"14":[["        events.push_back(Event(count, time()));                                                    ",{}]],"15":[["    }                                                                                              ",{}]],"16":[["                                                                                                   ",{}]],"17":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"18":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"19":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"20":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"21":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"22":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"23":[["            count += i->count;                                                                     ",{}]],"24":[["        }                                                                                          ",{}]],"25":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"29":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"30":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"31":[["        const_time now_secs = time();                                                              ",{}]],"32":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"33":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"34":[["            count += i->count;                                                                     ",{}]],"35":[["        }                                                                                          ",{}]],"36":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"37":[["                                                                                 11,5          50% ",{}]]},"cursor":{"x":4}}],[0.135081,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"7":[["    }                                                                                              ",{}]],"37":[["                                                                                 12,0-1        50% ",{}]]},"cursor":{"x":0,"y":8}}],[0.4957,{"lines":{"37":[["                                                                                 13,5          50% ",{}]]},"cursor":{"x":4,"y":9}}],[0.032177,{"lines":{"37":[["                                                                                 14,5          50% ",{}]]},"cursor":{"y":10}}],[0.031336,{"lines":{"37":[["                                                                                 15,5          50% ",{}]]},"cursor":{"y":11}}],[0.028963,{"lines":{"37":[["                                                                                 16,5          50% ",{}]]},"cursor":{"y":12}}],[0.03103,{"lines":{"37":[["                                                                                 17,5          50% ",{}]]},"cursor":{"y":13}}],[0.031315,{"lines":{"37":[["                                                                                 18,5          50% ",{}]]},"cursor":{"y":14}}],[0.036126,{"lines":{"13":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                          ",{}]],"15":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 19,5          50% ",{}]]},"cursor":{"y":15}}],[0.027726,{"lines":{"13":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"15":[["    }                                                                                              ",{}]],"37":[["                                                                                 20,0-1        50% ",{}]]},"cursor":{"x":0,"y":16}}],[0.025758,{"lines":{"37":[["                                                                                 21,5          50% ",{}]]},"cursor":{"x":4,"y":17}}],[0.030896,{"lines":{"37":[["                                                                                 22,5          50% ",{}]]},"cursor":{"y":18}}],[0.17679,{"lines":{"37":[["                                                                                 23,5          50% ",{}]]},"cursor":{"y":19}}],[0.183821,{"lines":{"37":[["                                                                                 24,5          50% ",{}]]},"cursor":{"y":20}}],[0.320115,{"lines":{"37":[["                                                                                 23,5          50% ",{}]]},"cursor":{"y":19}}],[0.551967,{"lines":{"37":[["                                                                                 24,5          50% ",{}]]},"cursor":{"y":20}}],[0.168053,{"lines":{"37":[["                                                                                 25,5          50% ",{}]]},"cursor":{"y":21}}],[0.167319,{"lines":{"37":[["                                                                                 26,5          50% ",{}]]},"cursor":{"y":23}}],[0.160649,{"lines":{"37":[["                                                                                 27,5          50% ",{}]]},"cursor":{"y":24}}],[0.168054,{"lines":{"37":[["                                                                                 28,5          50% ",{}]]},"cursor":{"y":25}}],[1.911855,{"lines":{"37":[["6 lines yanked                                                                   23,9          50% ",{}]]},"cursor":{"x":8,"y":19}}],[0.464152,{"lines":{"37":[["6 lines yanked                                                                   22,9          50% ",{}]]},"cursor":{"y":18}}],[0.499969,{"lines":{"37":[["6 lines yanked                                                                   21,9          50% ",{}]]},"cursor":{"y":17}}],[0.03229,{"lines":{"37":[["6 lines yanked                                                                   20,0-1        50% ",{}]]},"cursor":{"x":0,"y":16}}],[0.035278,{"lines":{"13":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                          ",{}]],"15":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["6 lines yanked                                                                   19,5          50% ",{}]]},"cursor":{"x":4,"y":15}}],[0.027889,{"lines":{"13":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"15":[["    }                                                                                              ",{}]],"37":[["6 lines yanked                                                                   18,9          50% ",{}]]},"cursor":{"x":8,"y":14}}],[0.02829,{"lines":{"37":[["6 lines yanked                                                                   17,9          50% ",{}]]},"cursor":{"y":13}}],[0.030166,{"lines":{"37":[["6 lines yanked                                                                   16,9          50% ",{}]]},"cursor":{"y":12}}],[0.030601,{"lines":{"37":[["6 lines yanked                                                                   15,9          50% ",{}]]},"cursor":{"y":11}}],[0.029897,{"lines":{"37":[["6 lines yanked                                                                   14,9          50% ",{}]]},"cursor":{"y":10}}],[0.030934,{"lines":{"37":[["6 lines yanked                                                                   13,7          50% ",{}]]},"cursor":{"x":6,"y":9}}],[0.198641,{"lines":{"37":[["6 lines yanked                                                                   12,0-1        50% ",{}]]},"cursor":{"x":0,"y":8}}],[0.189366,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) ",{}],["{",{"bg":6}],["                                                                ",{}]],"7":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["6 lines yanked                                                                   11,5          50% ",{}]]},"cursor":{"x":4,"y":7}}],[0.40703,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"7":[["    }                                                                                              ",{}]],"37":[["6 lines yanked                                                                   10,9          50% ",{}]]},"cursor":{"x":8,"y":6}}],[0.816513,{"lines":{"7":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"8":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"10":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"11":[["            count += i->count;                                                                     ",{}]],"12":[["        }                                                                                          ",{}]],"13":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["                                                                                                   ",{}]],"16":[["public",{"fg":3}],[":                                                                                            ",{}]],"17":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"18":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"19":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"20":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"21":[["        events.push_back(Event(count, time()));                                                    ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"25":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"26":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"27":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"28":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"29":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"30":[["            count += i->count;                                                                     ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"36":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"37":[["6 more lines                                                                     11,9          25% ",{}]]},"cursor":{"y":7}}],[0.634886,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.096026,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.096244,{"lines":{"37":[["\"ch15.cpp\"                                                                                         ",{}]]},"cursor":{"x":10,"visible":false}}],[0.101077,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    11,9          25% ",{}]]},"cursor":{"x":8,"y":7,"visible":true}}],[1.674869,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,9          25% ",{}]]},"cursor":{"y":8}}],[0.207963,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,10         25% ",{}]]},"cursor":{"x":9}}],[0.499878,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,11         25% ",{}]]},"cursor":{"x":10}}],[0.032411,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,12         25% ",{}]]},"cursor":{"x":11}}],[0.029946,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,13         25% ",{}]]},"cursor":{"x":12}}],[0.030873,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,14         25% ",{}]]},"cursor":{"x":13}}],[0.03113,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,15         25% ",{}]]},"cursor":{"x":14}}],[0.030011,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,16         25% ",{}]]},"cursor":{"x":15}}],[0.031341,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,17         25% ",{}]]},"cursor":{"x":16}}],[0.031375,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,18         25% ",{}]]},"cursor":{"x":17}}],[0.032085,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,19         25% ",{}]]},"cursor":{"x":18}}],[0.030827,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,20         25% ",{}]]},"cursor":{"x":19}}],[0.031453,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,21         25% ",{}]]},"cursor":{"x":20}}],[2.620628,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,22         25% ",{}]]},"cursor":{"x":21}}],[0.499932,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,23         25% ",{}]]},"cursor":{"x":22}}],[0.031296,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,24         25% ",{}]]},"cursor":{"x":23}}],[0.032592,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,25         25% ",{}]]},"cursor":{"x":24}}],[0.030432,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,26         25% ",{}]]},"cursor":{"x":25}}],[0.03047,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,27         25% ",{}]]},"cursor":{"x":26}}],[0.031739,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    12,28         25% ",{}]]},"cursor":{"x":27}}],[0.047562,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,28         25% ",{}]]},"cursor":{"y":9}}],[0.191945,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,29         25% ",{}]]},"cursor":{"x":28}}],[0.50024,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,30         25% ",{}]]},"cursor":{"x":29}}],[0.032046,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,31         25% ",{}]]},"cursor":{"x":30}}],[0.029872,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,32         25% ",{}]]},"cursor":{"x":31}}],[0.030682,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,33         25% ",{}]]},"cursor":{"x":32}}],[0.030933,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,34         25% ",{}]]},"cursor":{"x":33}}],[0.030753,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,35         25% ",{}]]},"cursor":{"x":34}}],[0.030754,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,36         25% ",{}]]},"cursor":{"x":35}}],[0.030573,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,37         25% ",{}]]},"cursor":{"x":36}}],[0.030739,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,38         25% ",{}]]},"cursor":{"x":37}}],[0.030701,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,39         25% ",{}]]},"cursor":{"x":38}}],[0.03099,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,40         25% ",{}]]},"cursor":{"x":39}}],[0.030915,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,41         25% ",{}]]},"cursor":{"x":40}}],[0.280819,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,42         25% ",{}]]},"cursor":{"x":41}}],[2.184038,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,43         25% ",{}]]},"cursor":{"x":42}}],[3.27208,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,44         25% ",{}]]},"cursor":{"x":43}}],[0.19188,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,45         25% ",{}]]},"cursor":{"x":44}}],[0.31216,{"lines":{"37":[["\"ch15.cpp\" 47L, 1410C written                                                    13,44         25% ",{}]]},"cursor":{"x":43}}],[0.264834,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator  = events.rbegin(); i != evetns.rend() && i->time > now_",{}]],"10":[["secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,44         25% ",{}]]}}],[0.240046,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator r = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"10":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,45         25% ",{}]]},"cursor":{"x":44}}],[0.416035,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator ri = events.rbegin(); i != evetns.rend() && i->time > no",{}]],"10":[["w_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,46         25% ",{}]]},"cursor":{"x":45}}],[0.127977,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); i != evetns.rend() && i->time > n",{}]],"10":[["ow_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,47         25% ",{}]]},"cursor":{"x":46}}],[0.27995,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":45}}],[1.0013,{"lines":{"37":[["                                                                                 13,46         25% ",{}]]}}],[0.605882,{"lines":{"37":[["                                                                                 13,47         25% ",{}]]},"cursor":{"x":46}}],[0.499821,{"lines":{"37":[["                                                                                 13,48         25% ",{}]]},"cursor":{"x":47}}],[0.032197,{"lines":{"37":[["                                                                                 13,49         25% ",{}]]},"cursor":{"x":48}}],[0.029882,{"lines":{"37":[["                                                                                 13,50         25% ",{}]]},"cursor":{"x":49}}],[0.030841,{"lines":{"37":[["                                                                                 13,51         25% ",{}]]},"cursor":{"x":50}}],[0.030724,{"lines":{"37":[["                                                                                 13,52         25% ",{}]]},"cursor":{"x":51}}],[0.030695,{"lines":{"37":[["                                                                                 13,53         25% ",{}]]},"cursor":{"x":52}}],[0.03073,{"lines":{"37":[["                                                                                 13,54         25% ",{}]]},"cursor":{"x":53}}],[0.031476,{"lines":{"37":[["                                                                                 13,55         25% ",{}]]},"cursor":{"x":54}}],[0.030636,{"lines":{"37":[["                                                                                 13,56         25% ",{}]]},"cursor":{"x":55}}],[0.031029,{"lines":{"37":[["                                                                                 13,57         25% ",{}]]},"cursor":{"x":56}}],[0.029951,{"lines":{"37":[["                                                                                 13,58         25% ",{}]]},"cursor":{"x":57}}],[0.030755,{"lines":{"37":[["                                                                                 13,59         25% ",{}]]},"cursor":{"x":58}}],[0.030831,{"lines":{"37":[["                                                                                 13,60         25% ",{}]]},"cursor":{"x":59}}],[0.030629,{"lines":{"37":[["                                                                                 13,61         25% ",{}]]},"cursor":{"x":60}}],[0.030817,{"lines":{"37":[["                                                                                 13,62         25% ",{}]]},"cursor":{"x":61}}],[0.035786,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin",{}],["()",{"bg":6}],["; i != evetns.rend() && i->time > n",{}]],"37":[["                                                                                 13,63         25% ",{}]]},"cursor":{"x":62}}],[0.031777,{"lines":{"37":[["                                                                                 13,64         25% ",{}]]},"cursor":{"x":63}}],[0.029731,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); i != evetns.rend() && i->time > n",{}]],"37":[["                                                                                 13,65         25% ",{}]]},"cursor":{"x":64}}],[0.184302,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin",{}],["()",{"bg":6}],["; i != evetns.rend() && i->time > n",{}]],"37":[["                                                                                 13,64         25% ",{}]]},"cursor":{"x":63}}],[0.311498,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); i != evetns.rend() && i->time > n",{}]],"37":[["                                                                                 13,65         25% ",{}]]},"cursor":{"x":64}}],[0.187656,{"lines":{"37":[["                                                                                 13,66         25% ",{}]]},"cursor":{"x":65}}],[0.152032,{"lines":{"37":[["                                                                                 13,67         25% ",{}]]},"cursor":{"x":66}}],[0.208885,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin();  != evetns.rend() && i->time > no",{}]],"10":[["w_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,67         25% ",{}]]}}],[0.152198,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); r != evetns.rend() && i->time > n",{}]],"10":[["ow_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,68         25% ",{}]]},"cursor":{"x":67}}],[0.239888,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); ri != evetns.rend() && i->time > ",{}]],"10":[["now_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,69         25% ",{}]]},"cursor":{"x":68}}],[0.439907,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend() && i->time >",{}]],"10":[[" now_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,70         25% ",{}]]},"cursor":{"x":69}}],[0.352136,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":68}}],[1.001315,{"lines":{"37":[["                                                                                 13,69         25% ",{}]]}}],[0.669817,{"lines":{"37":[["                                                                                 13,70         25% ",{}]]},"cursor":{"x":69}}],[0.500101,{"lines":{"37":[["                                                                                 13,71         25% ",{}]]},"cursor":{"x":70}}],[0.031504,{"lines":{"37":[["                                                                                 13,72         25% ",{}]]},"cursor":{"x":71}}],[0.031062,{"lines":{"37":[["                                                                                 13,73         25% ",{}]]},"cursor":{"x":72}}],[0.031372,{"lines":{"37":[["                                                                                 13,74         25% ",{}]]},"cursor":{"x":73}}],[0.030417,{"lines":{"37":[["                                                                                 13,75         25% ",{}]]},"cursor":{"x":74}}],[0.029978,{"lines":{"37":[["                                                                                 13,76         25% ",{}]]},"cursor":{"x":75}}],[0.031554,{"lines":{"37":[["                                                                                 13,77         25% ",{}]]},"cursor":{"x":76}}],[0.029809,{"lines":{"37":[["                                                                                 13,78         25% ",{}]]},"cursor":{"x":77}}],[0.031022,{"lines":{"37":[["                                                                                 13,79         25% ",{}]]},"cursor":{"x":78}}],[0.031067,{"lines":{"37":[["                                                                                 13,80         25% ",{}]]},"cursor":{"x":79}}],[0.030985,{"lines":{"37":[["                                                                                 13,81         25% ",{}]]},"cursor":{"x":80}}],[0.031011,{"lines":{"37":[["                                                                                 13,82         25% ",{}]]},"cursor":{"x":81}}],[0.031134,{"lines":{"37":[["                                                                                 13,83         25% ",{}]]},"cursor":{"x":82}}],[0.029936,{"lines":{"37":[["                                                                                 13,84         25% ",{}]]},"cursor":{"x":83}}],[0.03713,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend",{}],["()",{"bg":6}],[" && i->time >",{}]],"37":[["                                                                                 13,85         25% ",{}]]},"cursor":{"x":84}}],[0.030681,{"lines":{"37":[["                                                                                 13,86         25% ",{}]]},"cursor":{"x":85}}],[0.028951,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend() && i->time >",{}]],"37":[["                                                                                 13,87         25% ",{}]]},"cursor":{"x":86}}],[0.026175,{"lines":{"37":[["                                                                                 13,88         25% ",{}]]},"cursor":{"x":87}}],[0.16805,{"lines":{"37":[["                                                                                 13,89         25% ",{}]]},"cursor":{"x":88}}],[0.271956,{"lines":{"37":[["                                                                                 13,88         25% ",{}]]},"cursor":{"x":87}}],[0.288919,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend() i->time > no",{}]],"10":[["w_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                ",{}]]}}],[0.271874,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend() ->time > now",{}]],"10":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]]}}],[0.295402,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend() time > now_s",{}]],"10":[["ecs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                   ",{}]]}}],[0.312544,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend() > now_secs -",{}]],"10":[[" ",{}],["60",{"fg":1}],["; ++i) {                                                                                        ",{}]]}}],[0.447972,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend() now_secs - ",{}],["6",{"fg":1}]],"10":[["0",{"fg":1}],["; ++i) {                                                                                          ",{}]]}}],[0.392319,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend() - ",{}],["60",{"fg":1}],["; ++i) {",{}]],"10":[["            count += i->count;                                                                     ",{}]],"11":[["        }                                                                                          ",{}]],"12":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["public",{"fg":3}],[":                                                                                            ",{}]],"16":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"17":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"18":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"20":[["        events.push_back(Event(count, time()));                                                    ",{}]],"21":[["    }                                                                                              ",{}]],"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"24":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"25":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"26":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"27":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"28":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"29":[["            count += i->count;                                                                     ",{}]],"30":[["        }                                                                                          ",{}]],"31":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"35":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"36":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"37":[["                                                                                 13,88         27% ",{}]]}}],[0.623119,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend() ",{}],["60",{"fg":1}],["; ++i) {  ",{}]]}}],[0.464672,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend() ; ++i) {    ",{}]]}}],[0.327245,{"lines":{"37":[["                                                                                 13,87         27% ",{}]]},"cursor":{"x":86}}],[0.305045,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++i) {     ",{}]]}}],[2.222488,{"lines":{"37":[["                                                                                 13,88         27% ",{}]]},"cursor":{"x":87}}],[0.176572,{"lines":{"37":[["                                                                                 13,89         27% ",{}]]},"cursor":{"x":88}}],[0.15986,{"lines":{"37":[["                                                                                 13,90         27% ",{}]]},"cursor":{"x":89}}],[0.168117,{"lines":{"37":[["                                                                                 13,91         27% ",{}]]},"cursor":{"x":90}}],[0.358763,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     13,91         27% ",{}]]},"cursor":{"x":98,"y":37,"visible":false}}],[0.000938,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" ",{}],["(",{"bg":6}],["list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++",{}],[")",{"bg":6}],[" {      ",{}]]},"cursor":{"x":90,"y":9,"visible":true}}],[0.351703,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" ",{}],["(",{"bg":6}],["list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++r",{}],[")",{"bg":6}],[" {     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,92         27% ",{}]]},"cursor":{"x":91}}],[0.224351,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" ",{}],["(",{"bg":6}],["list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++ri",{}],[")",{"bg":6}],[" {    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,93         27% ",{}]]},"cursor":{"x":92}}],[0.15999,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" ",{}],["(",{"bg":6}],["list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit",{}],[")",{"bg":6}],[" {   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     13,94         27% ",{}]]},"cursor":{"x":93}}],[0.2491,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":92}}],[0.203391,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"37":[["                                                                                 14,30         27% ",{}]]},"cursor":{"x":29,"y":10}}],[0.80364,{"lines":{"37":[["                                                                                 13,93         27% ",{}]]},"cursor":{"x":92,"y":9}}],[0.89633,{"lines":{"10":[["                                                                                                   ",{}]],"11":[["            count += i->count;                                                                     ",{}]],"12":[["        }                                                                                          ",{}]],"13":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["                                                                                                   ",{}]],"16":[["public",{"fg":3}],[":                                                                                            ",{}]],"17":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"18":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"19":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"20":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"21":[["        events.push_back(Event(count, time()));                                                    ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"25":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"26":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"27":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"28":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"29":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"30":[["            count += i->count;                                                                     ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"36":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,9          25% ",{}]]},"cursor":{"x":8,"y":10}}],[0.327921,{"lines":{"10":[["        i                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,10         25% ",{}]]},"cursor":{"x":9}}],[0.104006,{"lines":{"10":[["        ",{}],["if",{"fg":3}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,11         25% ",{}]]},"cursor":{"x":10}}],[0.088042,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     14,12         25% ",{}]]},"cursor":{"x":11}}],[0.196181,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,13         25% ",{}]]},"cursor":{"x":12}}],[0.211842,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (r                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,14         25% ",{}]]},"cursor":{"x":13}}],[0.09601800000000001,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (ri                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,15         25% ",{}]]},"cursor":{"x":14}}],[0.175912,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,16         25% ",{}]]},"cursor":{"x":15}}],[0.352046,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit-                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,17         25% ",{}]]},"cursor":{"x":16}}],[0.424074,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,18         25% ",{}]]},"cursor":{"x":17}}],[0.687273,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->t                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,19         25% ",{}]]},"cursor":{"x":18}}],[0.080738,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->ti                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,20         25% ",{}]]},"cursor":{"x":19}}],[0.135943,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->tim                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,21         25% ",{}]]},"cursor":{"x":20}}],[0.135936,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,22         25% ",{}]]},"cursor":{"x":21}}],[0.784124,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     14,23         25% ",{}]]},"cursor":{"x":22}}],[0.559899,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time M                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,24         25% ",{}]]},"cursor":{"x":23}}],[1.160044,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,23         25% ",{}]]},"cursor":{"x":22}}],[0.671858,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,24         25% ",{}]]},"cursor":{"x":23}}],[0.239394,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <=                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,25         25% ",{}]]},"cursor":{"x":24}}],[0.160676,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     14,26         25% ",{}]]},"cursor":{"x":25}}],[0.272009,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= c                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,27         25% ",{}]]},"cursor":{"x":26}}],[0.095403,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= cu                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,28         25% ",{}]]},"cursor":{"x":27}}],[0.096583,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= cut                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,29         25% ",{}]]},"cursor":{"x":28}}],[0.216159,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= cuto                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,30         25% ",{}]]},"cursor":{"x":29}}],[0.080067,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= cutof                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,31         25% ",{}]]},"cursor":{"x":30}}],[0.135927,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= cutoff                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,32         25% ",{}]]},"cursor":{"x":31}}],[0.285316,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" ",{}],["(",{"bg":6}],["rit->time <= cutoff",{}],[")",{"bg":6}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,33         25% ",{}]]},"cursor":{"x":32}}],[0.238978,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= cutoff)                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,34         25% ",{}]]},"cursor":{"x":33}}],[0.267827,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) ",{}],["{",{"bg":6}],["                                                                 ",{}]],"12":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     14,35         25% ",{}]]},"cursor":{"x":34}}],[0.140075,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                                 ",{}]],"11":[["                                                                                                   ",{}]],"12":[["            count += i->count;                                                                     ",{}]],"13":[["        }                                                                                          ",{}]],"14":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"15":[["    }                                                                                              ",{}]],"16":[["                                                                                                   ",{}]],"17":[["public",{"fg":3}],[":                                                                                            ",{}]],"18":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"19":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"20":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"21":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"22":[["        events.push_back(Event(count, time()));                                                    ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"26":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"27":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"28":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"29":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"30":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"31":[["            count += i->count;                                                                     ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,9          23% ",{}]]},"cursor":{"x":8,"y":11}}],[0.251084,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) ",{}],["{",{"bg":6}],["                                                                 ",{}]],"11":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,10         23% ",{}]]},"cursor":{"x":9}}],[0.121268,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":8}}],[0.46025,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.090655,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.072281,{"lines":{"37":[["\"ch15.cpp\"                                                                                         ",{}]]},"cursor":{"x":10,"visible":false}}],[0.084344,{"lines":{"37":[["\"ch15.cpp\" 49L, 1434C written                                                    15,9          23% ",{}]]},"cursor":{"x":8,"y":11,"visible":true}}],[0.7360139999999999,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                                 ",{}]],"11":[["        }                                                                                          ",{}]],"37":[["\"ch15.cpp\" 49L, 1434C written                                                    14,9          23% ",{}]]},"cursor":{"y":10}}],[0.24376,{"lines":{"11":[["                                                                                                   ",{}]],"12":[["        }                                                                                          ",{}]],"13":[["            count += i->count;                                                                     ",{}]],"14":[["        }                                                                                          ",{}]],"15":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"16":[["    }                                                                                              ",{}]],"17":[["                                                                                                   ",{}]],"18":[["public",{"fg":3}],[":                                                                                            ",{}]],"19":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"20":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"21":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"22":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"23":[["        events.push_back(Event(count, time()));                                                    ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"27":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"28":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"29":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"30":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"31":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"32":[["            count += i->count;                                                                     ",{}]],"33":[["        }                                                                                          ",{}]],"34":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,9          21% ",{}]]},"cursor":{"y":11}}],[0.119962,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     15,13         21% ",{}]]},"cursor":{"x":12}}],[0.167899,{"lines":{"11":[["            b                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,14         21% ",{}]]},"cursor":{"x":13}}],[0.160094,{"lines":{"11":[["            br                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,15         21% ",{}]]},"cursor":{"x":14}}],[0.047869,{"lines":{"11":[["            bre                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,16         21% ",{}]]},"cursor":{"x":15}}],[0.120019,{"lines":{"11":[["            brea                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,17         21% ",{}]]},"cursor":{"x":16}}],[0.088296,{"lines":{"11":[["            ",{}],["break",{"fg":3}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,18         21% ",{}]]},"cursor":{"x":17}}],[0.471832,{"lines":{"11":[["            ",{}],["break",{"fg":3}],[";                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     15,19         21% ",{}]]},"cursor":{"x":18}}],[0.136591,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":17}}],[0.22829,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) ",{}],["{",{"bg":6}],["                                                                 ",{}]],"12":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["                                                                                 16,9          21% ",{}]]},"cursor":{"x":8,"y":12}}],[0.182957,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                                 ",{}]],"12":[["        }                                                                                          ",{}]],"37":[["                                                                                 17,18         21% ",{}]]},"cursor":{"x":17,"y":13}}],[1.43323,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) ",{}],["{",{"bg":6}],["                                                                 ",{}]],"12":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["                                                                                 16,9          21% ",{}]]},"cursor":{"x":8,"y":12}}],[0.182823,{"lines":{"10":[["        ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                                 ",{}]],"12":[["        }                                                                                          ",{}]],"37":[["                                                                                 15,18         21% ",{}]]},"cursor":{"x":17,"y":11}}],[0.139922,{"lines":{"37":[["                                                                                 14,18         21% ",{}]]},"cursor":{"y":10}}],[1.271908,{"lines":{"37":[["                                                                                 14,1          21% ",{}]]},"cursor":{"x":0}}],[0.344088,{"lines":{"37":[["-- VISUAL --",{"bold":true}],["                                                                     14,1          21% ",{}]]}}],[0.232211,{"lines":{"10":[["        ",{"inverse":true}],["if",{"fg":3,"inverse":true}],[" (rit->time <= cutoff) { ",{"inverse":true}],["                                                                ",{}]],"37":[["-- VISUAL --",{"bold":true}],["                                                                     15,1          21% ",{}]]},"cursor":{"y":11}}],[0.191889,{"lines":{"11":[["            ",{"inverse":true}],["break",{"fg":3,"inverse":true}],["; ",{"inverse":true}],["                                                                                ",{}]],"37":[["-- VISUAL --",{"bold":true}],["                                                                     16,1          21% ",{}]]},"cursor":{"y":12}}],[0.528012,{"lines":{"12":[["        } ",{"inverse":true}],["                                                                                         ",{}]],"37":[["-- VISUAL --",{"bold":true}],["                                                                     17,1          21% ",{}]]},"cursor":{"y":13}}],[0.455975,{"lines":{"13":[[" ",{"inverse":true}],["           count += i->count;                                                                     ",{}]],"37":[["-- VISUAL --",{"bold":true}],["                                                                     17,2          21% ",{}]]},"cursor":{"x":1}}],[0.368117,{"lines":{"12":[[" ",{"inverse":true}],["       }                                                                                          ",{}]],"13":[["            count += i->count;                                                                     ",{}]],"37":[["-- VISUAL --",{"bold":true}],["                                                                     16,2          21% ",{}]]},"cursor":{"y":12}}],[0.199196,{"lines":{"12":[["  ",{"inverse":true}],["      }                                                                                          ",{}]],"37":[["-- VISUAL --",{"bold":true}],["                                                                     16,3          21% ",{}]]},"cursor":{"x":2}}],[0.168683,{"lines":{"12":[["   ",{"inverse":true}],["     }                                                                                          ",{}]],"37":[["-- VISUAL --",{"bold":true}],["                                                                     16,4          21% ",{}]]},"cursor":{"x":3}}],[0.151958,{"lines":{"12":[["    ",{"inverse":true}],["    }                                                                                          ",{}]],"37":[["-- VISUAL --",{"bold":true}],["                                                                     16,5          21% ",{}]]},"cursor":{"x":4}}],[0.152159,{"lines":{"12":[["     ",{"inverse":true}],["   }                                                                                          ",{}]],"37":[["-- VISUAL --",{"bold":true}],["                                                                     16,6          21% ",{}]]},"cursor":{"x":5}}],[0.151847,{"lines":{"12":[["      ",{"inverse":true}],["  }                                                                                          ",{}]],"37":[["-- VISUAL --",{"bold":true}],["                                                                     16,7          21% ",{}]]},"cursor":{"x":6}}],[0.151993,{"lines":{"12":[["       ",{"inverse":true}],[" }                                                                                          ",{}]],"37":[["-- VISUAL --",{"bold":true}],["                                                                     16,8          21% ",{}]]},"cursor":{"x":7}}],[0.180952,{"lines":{"12":[["        ",{"inverse":true}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["-- VISUAL --",{"bold":true}],["                                                                     16,9          21% ",{}]]},"cursor":{"x":8}}],[0.695361,{"lines":{"10":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"11":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"12":[["            }                                                                                      ",{}]],"37":[["3 lines >ed 1 time                                                               14,13         21% ",{}]]},"cursor":{"x":12,"y":10}}],[0.667445,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.11196,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.080341,{"lines":{"37":[["\"ch15.cpp\"                                                                                         ",{}]]},"cursor":{"x":10,"visible":false}}],[0.116835,{"lines":{"37":[["\"ch15.cpp\" 50L, 1465C written                                                    14,13         21% ",{}]]},"cursor":{"x":12,"y":10,"visible":true}}],[0.107019,{"lines":{"37":[["\"ch15.cpp\" 50L, 1465C written                                                    15,13         21% ",{}]]},"cursor":{"y":11}}],[0.157159,{"lines":{"10":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) ",{}],["{",{"bg":6}],["                                                             ",{}]],"12":[["            ",{}],["}",{"bg":6}],["                                                                                      ",{}]],"37":[["\"ch15.cpp\" 50L, 1465C written                                                    16,13         21% ",{}]]},"cursor":{"y":12}}],[0.239072,{"lines":{"10":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"12":[["            }                                                                                      ",{}]],"37":[["\"ch15.cpp\" 50L, 1465C written                                                    17,13         21% ",{}]]},"cursor":{"y":13}}],[0.699861,{"lines":{"37":[["\"ch15.cpp\" 50L, 1465C written                                                    17,14         21% ",{}]]},"cursor":{"x":13}}],[0.168146,{"lines":{"37":[["\"ch15.cpp\" 50L, 1465C written                                                    17,15         21% ",{}]]},"cursor":{"x":14}}],[0.151773,{"lines":{"37":[["\"ch15.cpp\" 50L, 1465C written                                                    17,16         21% ",{}]]},"cursor":{"x":15}}],[0.143926,{"lines":{"37":[["\"ch15.cpp\" 50L, 1465C written                                                    17,17         21% ",{}]]},"cursor":{"x":16}}],[0.144026,{"lines":{"37":[["\"ch15.cpp\" 50L, 1465C written                                                    17,18         21% ",{}]]},"cursor":{"x":17}}],[0.144049,{"lines":{"37":[["\"ch15.cpp\" 50L, 1465C written                                                    17,19         21% ",{}]]},"cursor":{"x":18}}],[0.151928,{"lines":{"37":[["\"ch15.cpp\" 50L, 1465C written                                                    17,20         21% ",{}]]},"cursor":{"x":19}}],[0.152029,{"lines":{"37":[["\"ch15.cpp\" 50L, 1465C written                                                    17,21         21% ",{}]]},"cursor":{"x":20}}],[0.160098,{"lines":{"37":[["\"ch15.cpp\" 50L, 1465C written                                                    17,22         21% ",{}]]},"cursor":{"x":21}}],[0.215769,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     17,22         21% ",{}]]}}],[0.2404,{"lines":{"13":[["            count += ri->count;                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,23         21% ",{}]]},"cursor":{"x":22}}],[0.135932,{"lines":{"13":[["            count += rii->count;                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,24         21% ",{}]]},"cursor":{"x":23}}],[0.159996,{"lines":{"13":[["            count += riti->count;                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     17,25         21% ",{}]]},"cursor":{"x":24}}],[2.112826,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":23}}],[0.223166,{"lines":{"37":[["                                                                                 17,25         21% ",{}]]},"cursor":{"x":24}}],[0.32008,{"lines":{"13":[["            count += rit->count;                                                                   ",{}]]}}],[0.301485,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) ",{}],["{",{"bg":6}],["   ",{}]],"14":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["                                                                                 18,9          21% ",{}]]},"cursor":{"x":8,"y":14}}],[0.198627,{"lines":{"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"14":[["        }                                                                                          ",{}]],"37":[["                                                                                 19,21         21% ",{}]]},"cursor":{"x":20,"y":15}}],[1.563598,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.127947,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.104233,{"lines":{"37":[["\"ch15.cpp\"                                                                                         ",{}]]},"cursor":{"x":10,"visible":false}}],[0.11125,{"lines":{"37":[["\"ch15.cpp\" 50L, 1467C written                                                    19,21         21% ",{}]]},"cursor":{"x":20,"y":15,"visible":true}}],[0.366933,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) ",{}],["{",{"bg":6}],["                                                                ",{}]],"16":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15.cpp\" 50L, 1467C written                                                    20,5          21% ",{}]]},"cursor":{"x":4,"y":16}}],[0.497825,{"lines":{"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"16":[["    }                                                                                              ",{}]],"37":[["\"ch15.cpp\" 50L, 1467C written                                                    21,0-1        21% ",{}]]},"cursor":{"x":0,"y":17}}],[0.027916,{"lines":{"37":[["\"ch15.cpp\" 50L, 1467C written                                                    22,7          21% ",{}]]},"cursor":{"x":6,"y":18}}],[0.032238,{"lines":{"37":[["\"ch15.cpp\" 50L, 1467C written                                                    23,25         21% ",{}]]},"cursor":{"x":24,"y":19}}],[0.030787,{"lines":{"37":[["\"ch15.cpp\" 50L, 1467C written                                                    24,25         21% ",{}]]},"cursor":{"y":20}}],[0.030799,{"lines":{"37":[["\"ch15.cpp\" 50L, 1467C written                                                    25,25         21% ",{}]]},"cursor":{"y":21}}],[0.036419,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                          ",{}]],"24":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15.cpp\" 50L, 1467C written                                                    26,25         21% ",{}]]},"cursor":{"y":22}}],[0.031329,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"23":[["        events.push_back",{}],["(",{"bg":6}],["Event(count, time())",{}],[")",{"bg":6}],[";                                                    ",{}]],"24":[["    }                                                                                              ",{}]],"37":[["\"ch15.cpp\" 50L, 1467C written                                                    27,25         21% ",{}]]},"cursor":{"y":23}}],[0.029125,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                          ",{}]],"23":[["        events.push_back(Event(count, time()));                                                    ",{}]],"24":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15.cpp\" 50L, 1467C written                                                    28,5          21% ",{}]]},"cursor":{"x":4,"y":24}}],[0.028939,{"lines":{"22":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"24":[["    }                                                                                              ",{}]],"37":[["\"ch15.cpp\" 50L, 1467C written                                                    29,0-1        21% ",{}]]},"cursor":{"x":0,"y":25}}],[0.027716,{"lines":{"37":[["\"ch15.cpp\" 50L, 1467C written                                                    30,25         21% ",{}]]},"cursor":{"x":24,"y":26}}],[0.036304,{"lines":{"27":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"35":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15.cpp\" 50L, 1467C written                                                    31,23         21% ",{}]]},"cursor":{"x":22,"y":27}}],[0.028632,{"lines":{"27":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"35":[["    }                                                                                              ",{}]],"37":[["\"ch15.cpp\" 50L, 1467C written                                                    32,22         21% ",{}]]},"cursor":{"x":21,"y":28}}],[0.027586,{"lines":{"37":[["\"ch15.cpp\" 50L, 1467C written                                                    33,25         21% ",{}]]},"cursor":{"x":24,"y":29}}],[0.030664,{"lines":{"37":[["\"ch15.cpp\" 50L, 1467C written                                                    34,25         21% ",{}]]},"cursor":{"y":30}}],[0.030176,{"lines":{"37":[["\"ch15.cpp\" 50L, 1467C written                                                    35,25         21% ",{}]]},"cursor":{"y":32}}],[0.036757,{"lines":{"31":[["_secs - ",{}],["60",{"fg":1}],["; ++i) ",{}],["{",{"bg":6}],["                                                                                 ",{}]],"33":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["\"ch15.cpp\" 50L, 1467C written                                                    36,9          21% ",{}]]},"cursor":{"x":8,"y":33}}],[0.030296,{"lines":{"31":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"33":[["        }                                                                                          ",{}]],"37":[["\"ch15.cpp\" 50L, 1467C written                                                    37,21         21% ",{}]]},"cursor":{"x":20,"y":34}}],[0.030333,{"lines":{"27":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"35":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15.cpp\" 50L, 1467C written                                                    38,5          21% ",{}]]},"cursor":{"x":4,"y":35}}],[0.02974,{"lines":{"27":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"35":[["    }                                                                                              ",{}]],"37":[["\"ch15.cpp\" 50L, 1467C written                                                    39,0-1        21% ",{}]]},"cursor":{"x":0,"y":36}}],[0.027095,{"lines":{"0":[["        ",{}],["time_t",{"fg":2}],[" time;                                                                               ",{}]],"1":[["    };                                                                                             ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    list<Event> events;                                                                            ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"6":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"7":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"8":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"9":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"10":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"11":[["            }                                                                                      ",{}]],"12":[["            count += rit->count;                                                                   ",{}]],"13":[["        }                                                                                          ",{}]],"14":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"15":[["    }                                                                                              ",{}]],"16":[["                                                                                                   ",{}]],"17":[["public",{"fg":3}],[":                                                                                            ",{}]],"18":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"19":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"20":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"21":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"22":[["        events.push_back(Event(count, time()));                                                    ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"26":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"27":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"28":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"29":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"30":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"31":[["            count += i->count;                                                                     ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["                                                                                                   ",{}]],"36":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"37":[["                                                                                 40,25         28% ",{}]]},"cursor":{"x":24}}],[0.030429,{"lines":{"0":[["    };                                                                                             ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    list<Event> events;                                                                            ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"5":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"6":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"7":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"8":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"9":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"10":[["            }                                                                                      ",{}]],"11":[["            count += rit->count;                                                                   ",{}]],"12":[["        }                                                                                          ",{}]],"13":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["                                                                                                   ",{}]],"16":[["public",{"fg":3}],[":                                                                                            ",{}]],"17":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"18":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"19":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"20":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"21":[["        events.push_back(Event(count, time()));                                                    ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"25":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"26":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"27":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"28":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"29":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"30":[["            count += i->count;                                                                     ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"36":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"37":[["                                                                                 41,21         35% ",{}]]},"cursor":{"x":20}}],[0.030507,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["    list<Event> events;                                                                            ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"4":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"5":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"6":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"7":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"8":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"9":[["            }                                                                                      ",{}]],"10":[["            count += rit->count;                                                                   ",{}]],"11":[["        }                                                                                          ",{}]],"12":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["public",{"fg":3}],[":                                                                                            ",{}]],"16":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"17":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"18":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"20":[["        events.push_back(Event(count, time()));                                                    ",{}]],"21":[["    }                                                                                              ",{}]],"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"24":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"25":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"26":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"27":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"28":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"29":[["            count += i->count;                                                                     ",{}]],"30":[["        }                                                                                          ",{}]],"31":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"35":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"36":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"37":[["                                                                                 42,22         42% ",{}]]},"cursor":{"x":21}}],[0.031222,{"lines":{"0":[["    list<Event> events;                                                                            ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"3":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"4":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"5":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"6":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"7":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"8":[["            }                                                                                      ",{}]],"9":[["            count += rit->count;                                                                   ",{}]],"10":[["        }                                                                                          ",{}]],"11":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"12":[["    }                                                                                              ",{}]],"13":[["                                                                                                   ",{}]],"14":[["public",{"fg":3}],[":                                                                                            ",{}]],"15":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"16":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"17":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"18":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"19":[["        events.push_back(Event(count, time()));                                                    ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"23":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"24":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"25":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"26":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"27":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"28":[["            count += i->count;                                                                     ",{}]],"29":[["        }                                                                                          ",{}]],"30":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"35":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"36":[["        const_time now_secs = time();                                                              ",{}]],"37":[["                                                                                 43,25         50% ",{}]]},"cursor":{"x":24}}],[0.035276,{"lines":{"0":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"1":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"2":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"3":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"4":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"5":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"6":[["            }                                                                                      ",{}]],"7":[["            count += rit->count;                                                                   ",{}]],"8":[["        }                                                                                          ",{}]],"9":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"10":[["    }                                                                                              ",{}]],"11":[["                                                                                                   ",{}]],"12":[["public",{"fg":3}],[":                                                                                            ",{}]],"13":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"14":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"15":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"16":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"17":[["        events.push_back(Event(count, time()));                                                    ",{}]],"18":[["    }                                                                                              ",{}]],"19":[["                                                                                                   ",{}]],"20":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"21":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"22":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"23":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"24":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"25":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"26":[["            count += i->count;                                                                     ",{}]],"27":[["        }                                                                                          ",{}]],"28":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"32":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"33":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"34":[["        const_time now_secs = time();                                                              ",{}]],"35":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"36":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"37":[["                                                                                 44,25         60% ",{}]]},"cursor":{"y":35}}],[0.03106,{"lines":{"0":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"1":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"2":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"3":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"4":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"5":[["            }                                                                                      ",{}]],"6":[["            count += rit->count;                                                                   ",{}]],"7":[["        }                                                                                          ",{}]],"8":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"9":[["    }                                                                                              ",{}]],"10":[["                                                                                                   ",{}]],"11":[["public",{"fg":3}],[":                                                                                            ",{}]],"12":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"13":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"14":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"15":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"16":[["        events.push_back(Event(count, time()));                                                    ",{}]],"17":[["    }                                                                                              ",{}]],"18":[["                                                                                                   ",{}]],"19":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"20":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"21":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"22":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"23":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"24":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"25":[["            count += i->count;                                                                     ",{}]],"26":[["        }                                                                                          ",{}]],"27":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"31":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"32":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"33":[["        const_time now_secs = time();                                                              ",{}]],"34":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"35":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"36":[["            count += i->count;                                                                     ",{}]],"37":[["                                                                                 45,25         66% ",{}]]},"cursor":{"y":36}}],[0.07457,{"lines":{"37":[["                                                                                 44,25         66% ",{}]]},"cursor":{"y":34}}],[0.50065,{"lines":{"37":[["                                                                                 43,25         66% ",{}]]},"cursor":{"y":33}}],[0.029729,{"lines":{"37":[["                                                                                 42,22         66% ",{}]]},"cursor":{"x":21,"y":32}}],[0.033839,{"lines":{"37":[["                                                                                 41,21         66% ",{}]]},"cursor":{"x":20,"y":31}}],[0.029853,{"lines":{"37":[["                                                                                 40,25         66% ",{}]]},"cursor":{"x":24,"y":30}}],[0.030549,{"lines":{"37":[["                                                                                 39,0-1        66% ",{}]]},"cursor":{"x":0,"y":29}}],[0.037767,{"lines":{"20":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"28":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 38,5          66% ",{}]]},"cursor":{"x":4,"y":28}}],[0.02708,{"lines":{"20":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"28":[["    }                                                                                              ",{}]],"37":[["                                                                                 37,21         66% ",{}]]},"cursor":{"x":20,"y":27}}],[0.032893,{"lines":{"24":[["_secs - ",{}],["60",{"fg":1}],["; ++i) ",{}],["{",{"bg":6}],["                                                                                 ",{}]],"26":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["                                                                                 36,9          66% ",{}]]},"cursor":{"x":8,"y":26}}],[0.029809,{"lines":{"24":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"26":[["        }                                                                                          ",{}]],"37":[["                                                                                 35,25         66% ",{}]]},"cursor":{"x":24,"y":25}}],[0.026248,{"lines":{"37":[["                                                                                 34,25         66% ",{}]]},"cursor":{"y":23}}],[0.325893,{"lines":{"37":[["                                                                                 33,25         66% ",{}]]},"cursor":{"y":22}}],[0.183576,{"lines":{"37":[["                                                                                 32,22         66% ",{}]]},"cursor":{"x":21,"y":21}}],[0.432829,{"lines":{"21":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"22":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"23":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"24":[["            count += i->count;                                                                     ",{}]],"25":[["        }                                                                                          ",{}]],"26":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"30":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"31":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"32":[["        const_time now_secs = time();                                                              ",{}]],"33":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"34":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"35":[["            count += i->count;                                                                     ",{}]],"36":[["        }                                                                                          ",{}]],"37":[["                                                                                 32,9          71% ",{}]]},"cursor":{"x":8}}],[0.136045,{"lines":{"21":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != evetns.rend() && i->time > now",{}]],"22":[["_secs - ",{}],["60",{"fg":1}],["; ++i) {                                                                                 ",{}]],"23":[["            count += i->count;                                                                     ",{}]],"24":[["        }                                                                                          ",{}]],"25":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"29":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"30":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"31":[["        const_time now_secs = time();                                                              ",{}]],"32":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"33":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"34":[["            count += i->count;                                                                     ",{}]],"35":[["        }                                                                                          ",{}]],"36":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"37":[["                                                                                 32,9          76% ",{}]]}}],[0.16094,{"lines":{"21":[["            count += i->count;                                                                     ",{}]],"22":[["        }                                                                                          ",{}]],"23":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"27":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"28":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"29":[["        const_time now_secs = time();                                                              ",{}]],"30":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"31":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"32":[["            count += i->count;                                                                     ",{}]],"33":[["        }                                                                                          ",{}]],"34":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["                                                                                 32,13         90% ",{}]]},"cursor":{"x":12}}],[0.155394,{"lines":{"20":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"21":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"22":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"26":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"27":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"28":[["        const_time now_secs = time();                                                              ",{}]],"29":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"30":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"31":[["            count += i->count;                                                                     ",{}]],"32":[["        }                                                                                          ",{}]],"33":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["};                                                                                                 ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 32,9          Bot ",{}]]},"cursor":{"x":8}}],[0.150986,{"lines":{"20":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"21":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"25":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"26":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"27":[["        const_time now_secs = time();                                                              ",{}]],"28":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"29":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"30":[["            count += i->count;                                                                     ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["};                                                                                                 ",{}]],"35":[["                                                                                                   ",{}]],"36":[["~                                                                                                  ",{"fg":4,"bold":true}]]}}],[1.50491,{"lines":{"20":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"21":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"24":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"25":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"26":[["        const_time now_secs = time();                                                              ",{}]],"27":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"28":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"29":[["            count += i->count;                                                                     ",{}]],"30":[["        }                                                                                          ",{}]],"31":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["};                                                                                                 ",{}]],"34":[["                                                                                                   ",{}]],"35":[["~                                                                                                  ",{"fg":4,"bold":true}]],"37":[["                                                                                 32,5          Bot ",{}]]},"cursor":{"x":4}}],[0.494958,{"lines":{"20":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"21":[["    }                                                                                              ",{}]],"37":[["                                                                                 31,5          Bot ",{}]]},"cursor":{"y":20}}],[0.172251,{"lines":{"21":[["                                                                                                   ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"25":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"26":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"27":[["        const_time now_secs = time();                                                              ",{}]],"28":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"29":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"30":[["            count += i->count;                                                                     ",{}]],"31":[["        }                                                                                          ",{}]],"32":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["};                                                                                                 ",{}]],"35":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,5          Bot ",{}]]},"cursor":{"y":21}}],[0.119868,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     32,9          Bot ",{}]]},"cursor":{"x":8}}],[0.271996,{"lines":{"21":[["        r                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,10         Bot ",{}]]},"cursor":{"x":9}}],[0.032415,{"lines":{"21":[["        re                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,11         Bot ",{}]]},"cursor":{"x":10}}],[0.247619,{"lines":{"21":[["        ret                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,12         Bot ",{}]]},"cursor":{"x":11}}],[0.535985,{"lines":{"21":[["        retu                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,13         Bot ",{}]]},"cursor":{"x":12}}],[0.176003,{"lines":{"21":[["        retur                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,14         Bot ",{}]]},"cursor":{"x":13}}],[0.112016,{"lines":{"21":[["        ",{}],["return",{"fg":3}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,15         Bot ",{}]]},"cursor":{"x":14}}],[0.111774,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     32,16         Bot ",{}]]},"cursor":{"x":15}}],[0.256222,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" C                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,17         Bot ",{}]]},"cursor":{"x":16}}],[0.104003,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" Co                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,18         Bot ",{}]]},"cursor":{"x":17}}],[0.063959,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" Cou                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,19         Bot ",{}]]},"cursor":{"x":18}}],[0.192383,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" Coun                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,20         Bot ",{}]]},"cursor":{"x":19}}],[0.08810900000000001,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" Count                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,21         Bot ",{}]]},"cursor":{"x":20}}],[0.223606,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountS                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,22         Bot ",{}]]},"cursor":{"x":21}}],[0.12805,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSi                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,23         Bot ",{}]]},"cursor":{"x":22}}],[0.184041,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSin                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,24         Bot ",{}]]},"cursor":{"x":23}}],[0.08794200000000001,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSinc                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,25         Bot ",{}]]},"cursor":{"x":24}}],[0.760024,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSince                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,26         Bot ",{}]]},"cursor":{"x":25}}],[0.466129,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSince(                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,27         Bot ",{}]]},"cursor":{"x":26}}],[0.542048,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSince(t                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,28         Bot ",{}]]},"cursor":{"x":27}}],[0.06392200000000001,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSince(ti                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,29         Bot ",{}]]},"cursor":{"x":28}}],[0.159956,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSince(tim                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,30         Bot ",{}]]},"cursor":{"x":29}}],[0.07996,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSince(time                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,31         Bot ",{}]]},"cursor":{"x":30}}],[0.778262,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSince(time(                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,32         Bot ",{}]]},"cursor":{"x":31}}],[0.035266,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSince(time",{}],["()",{"bg":6}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,33         Bot ",{}]]},"cursor":{"x":32}}],[0.303735,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSince(time()                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,34         Bot ",{}]]},"cursor":{"x":33}}],[0.330784,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSince(time() -                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,35         Bot ",{}]]},"cursor":{"x":34}}],[0.112004,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     32,36         Bot ",{}]]},"cursor":{"x":35}}],[0.216007,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["6",{"fg":1}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,37         Bot ",{}]]},"cursor":{"x":36}}],[0.168267,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,38         Bot ",{}]]},"cursor":{"x":37}}],[0.229784,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSince",{}],["(",{"bg":6}],["time() - ",{}],["60",{"fg":1}],[")",{"bg":6}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,39         Bot ",{}]]},"cursor":{"x":38}}],[0.494442,{"lines":{"21":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     32,40         Bot ",{}]]},"cursor":{"x":39}}],[0.180042,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":38}}],[1.001298,{"lines":{"37":[["                                                                                 32,39         Bot ",{}]]}}],[0.891045,{"lines":{"20":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"22":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 33,5          Bot ",{}]]},"cursor":{"x":4,"y":22}}],[0.143129,{"lines":{"20":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"22":[["    }                                                                                              ",{}]],"37":[["                                                                                 34,0-1        Bot ",{}]]},"cursor":{"x":0,"y":23}}],[0.155713,{"lines":{"37":[["                                                                                 35,39         Bot ",{}]]},"cursor":{"x":38,"y":24}}],[0.15019,{"lines":{"25":[["    ",{}],["int",{"fg":2}],[" HourCount() ",{}],["{",{"bg":6}],["                                                                              ",{}]],"33":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["                                                                                 36,21         Bot ",{}]]},"cursor":{"x":20,"y":25}}],[0.133577,{"lines":{"25":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"33":[["    }                                                                                              ",{}]],"37":[["                                                                                 37,22         Bot ",{}]]},"cursor":{"x":21,"y":26}}],[0.38844,{"lines":{"26":[["        const_time now_secs = time();                                                              ",{}]],"27":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"28":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"29":[["            count += i->count;                                                                     ",{}]],"30":[["        }                                                                                          ",{}]],"31":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["};                                                                                                 ",{}]],"34":[["                                                                                                   ",{}]],"35":[["~                                                                                                  ",{"fg":4,"bold":true}]],"37":[["                                                                                 37,9          Bot ",{}]]},"cursor":{"x":8}}],[0.12057,{"lines":{"26":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator i = events.rbegin(); i != events.rend() && i->time > now",{}]],"27":[["_secs - ",{}],["3600",{"fg":1}],["; ++i) {                                                                               ",{}]],"28":[["            count += i->count;                                                                     ",{}]],"29":[["        }                                                                                          ",{}]],"30":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["};                                                                                                 ",{}]],"33":[["                                                                                                   ",{}]],"34":[["~                                                                                                  ",{"fg":4,"bold":true}]]}}],[0.175561,{"lines":{"26":[["            count += i->count;                                                                     ",{}]],"27":[["        }                                                                                          ",{}]],"28":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["};                                                                                                 ",{}]],"31":[["                                                                                                   ",{}]],"32":[["~                                                                                                  ",{"fg":4,"bold":true}]],"33":[["~                                                                                                  ",{"fg":4,"bold":true}]],"37":[["                                                                                 37,13         Bot ",{}]]},"cursor":{"x":12}}],[0.157041,{"lines":{"25":[["    ",{}],["int",{"fg":2}],[" HourCount() ",{}],["{",{"bg":6}],["                                                                              ",{}]],"26":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"27":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["};                                                                                                 ",{}]],"30":[["                                                                                                   ",{}]],"31":[["~                                                                                                  ",{"fg":4,"bold":true}]],"37":[["                                                                                 37,9          Bot ",{}]]},"cursor":{"x":8}}],[0.165946,{"lines":{"25":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"26":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["};                                                                                                 ",{}]],"29":[["                                                                                                   ",{}]],"30":[["~                                                                                                  ",{"fg":4,"bold":true}]]}}],[0.376725,{"lines":{"25":[["    ",{}],["int",{"fg":2}],[" HourCount() ",{}],["{",{"bg":6}],["                                                                              ",{}]],"26":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"27":[["};                                                                                                 ",{}]],"28":[["                                                                                                   ",{}]],"29":[["~                                                                                                  ",{"fg":4,"bold":true}]],"37":[["                                                                                 37,5          Bot ",{}]]},"cursor":{"x":4}}],[0.231005,{"lines":{"25":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"26":[["    }                                                                                              ",{}]],"37":[["                                                                                 36,5          Bot ",{}]]},"cursor":{"y":25}}],[0.781226,{"lines":{"26":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["};                                                                                                 ",{}]],"29":[["                                                                                                   ",{}]],"37":[["                                                                                 37,9          Bot ",{}]]},"cursor":{"x":8,"y":26}}],[0.448094,{"lines":{"37":[["                                                                                 37,39         Bot ",{}]]},"cursor":{"x":38}}],[0.324602,{"lines":{"26":[["        ",{}],["return",{"fg":3}],[" CountSince",{}],["(",{"bg":6}],["time() - ",{}],["60",{"fg":1}],[")",{"bg":6}],[";                                                            ",{}]],"37":[["                                                                                 37,38         Bot ",{}]]},"cursor":{"x":37}}],[0.134414,{"lines":{"26":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"37":[["                                                                                 37,37         Bot ",{}]]},"cursor":{"x":36}}],[0.132583,{"lines":{"37":[["                                                                                 37,36         Bot ",{}]]},"cursor":{"x":35}}],[0.208427,{"lines":{"26":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["0",{"fg":1}],[");                                                             ",{}]]}}],[0.17262,{"lines":{"26":[["        ",{}],["return",{"fg":3}],[" CountSince",{}],["(",{"bg":6}],["time() - ",{}],[")",{"bg":6}],[";                                                              ",{}]]}}],[0.170832,{"lines":{"37":[["-- INSERT --",{"bold":true}],["                                                                     37,36         Bot ",{}]]}}],[0.301502,{"lines":{"26":[["        ",{}],["return",{"fg":3}],[" CountSince",{}],["(",{"bg":6}],["time() - ",{}],["3",{"fg":1}],[")",{"bg":6}],[";                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,37         Bot ",{}]]},"cursor":{"x":36}}],[0.200089,{"lines":{"26":[["        ",{}],["return",{"fg":3}],[" CountSince",{}],["(",{"bg":6}],["time() - ",{}],["36",{"fg":1}],[")",{"bg":6}],[";                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,38         Bot ",{}]]},"cursor":{"x":37}}],[0.47974,{"lines":{"26":[["        ",{}],["return",{"fg":3}],[" CountSince",{}],["(",{"bg":6}],["time() - ",{}],["360",{"fg":1}],[")",{"bg":6}],[";                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,39         Bot ",{}]]},"cursor":{"x":38}}],[0.15235,{"lines":{"26":[["        ",{}],["return",{"fg":3}],[" CountSince",{}],["(",{"bg":6}],["time() - ",{}],["3600",{"fg":1}],[")",{"bg":6}],[";                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     37,40         Bot ",{}]]},"cursor":{"x":39}}],[0.179499,{"lines":{"37":[["                                                                                                   ",{}]]},"cursor":{"x":38}}],[0.522408,{"lines":{"26":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["3600",{"fg":1}],[");                                                          ",{}]],"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.124571,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.128308,{"lines":{"37":[["\"ch15.cpp\"                                                                                         ",{}]]},"cursor":{"x":10,"visible":false}}],[0.106696,{"lines":{"37":[["\"ch15.cpp\" 40L, 1061C written                                                    37,39         Bot ",{}]]},"cursor":{"x":38,"y":26,"visible":true}}],[1.393287,{"lines":{"25":[["    ",{}],["int",{"fg":2}],[" HourCount() ",{}],["{",{"bg":6}],["                                                                              ",{}]],"27":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    36,21         Bot ",{}]]},"cursor":{"x":20,"y":25}}],[0.499085,{"lines":{"25":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"27":[["    }                                                                                              ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    35,39         Bot ",{}]]},"cursor":{"x":38,"y":24}}],[0.027249,{"lines":{"37":[["\"ch15.cpp\" 40L, 1061C written                                                    34,0-1        Bot ",{}]]},"cursor":{"x":0,"y":23}}],[0.034602,{"lines":{"20":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"22":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    33,5          Bot ",{}]]},"cursor":{"x":4,"y":22}}],[0.032534,{"lines":{"20":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"22":[["    }                                                                                              ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    32,39         Bot ",{}]]},"cursor":{"x":38,"y":21}}],[0.031452,{"lines":{"20":[["    ",{}],["int",{"fg":2}],[" MinuteCount() ",{}],["{",{"bg":6}],["                                                                            ",{}]],"22":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    31,23         Bot ",{}]]},"cursor":{"x":22,"y":20}}],[0.030356,{"lines":{"20":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"22":[["    }                                                                                              ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    30,39         Bot ",{}]]},"cursor":{"x":38,"y":19}}],[0.026691,{"lines":{"37":[["\"ch15.cpp\" 40L, 1061C written                                                    29,0-1        Bot ",{}]]},"cursor":{"x":0,"y":18}}],[0.034139,{"lines":{"15":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                          ",{}]],"17":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    28,5          Bot ",{}]]},"cursor":{"x":4,"y":17}}],[0.030596,{"lines":{"15":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"17":[["    }                                                                                              ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    27,39         Bot ",{}]]},"cursor":{"x":38,"y":16}}],[0.032257,{"lines":{"15":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) ",{}],["{",{"bg":6}],["                                                                          ",{}]],"17":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    26,25         Bot ",{}]]},"cursor":{"x":24,"y":15}}],[0.030381,{"lines":{"15":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"17":[["    }                                                                                              ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    25,39         Bot ",{}]]},"cursor":{"x":38,"y":14}}],[0.027437,{"lines":{"37":[["\"ch15.cpp\" 40L, 1061C written                                                    24,39         Bot ",{}]]},"cursor":{"y":13}}],[0.030686,{"lines":{"37":[["\"ch15.cpp\" 40L, 1061C written                                                    23,39         Bot ",{}]]},"cursor":{"y":12}}],[0.030086,{"lines":{"37":[["\"ch15.cpp\" 40L, 1061C written                                                    22,7          Bot ",{}]]},"cursor":{"x":6,"y":11}}],[0.030615,{"lines":{"37":[["\"ch15.cpp\" 40L, 1061C written                                                    21,0-1        Bot ",{}]]},"cursor":{"x":0,"y":10}}],[0.031983,{"lines":{"37":[["\"ch15.cpp\" 40L, 1061C written                                                    20,5          Bot ",{}]]},"cursor":{"x":4,"y":9}}],[0.029855,{"lines":{"37":[["\"ch15.cpp\" 40L, 1061C written                                                    19,21         Bot ",{}]]},"cursor":{"x":20,"y":8}}],[0.036141,{"lines":{"2":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) ",{}],["{",{"bg":6}],["   ",{}]],"7":[["        ",{}],["}",{"bg":6}],["                                                                                          ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    18,9          Bot ",{}]]},"cursor":{"x":8,"y":7}}],[0.026482,{"lines":{"2":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"7":[["        }                                                                                          ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    17,32         Bot ",{}]]},"cursor":{"x":31,"y":6}}],[0.034345,{"lines":{"3":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) ",{}],["{",{"bg":6}],["                                                             ",{}]],"5":[["            ",{}],["}",{"bg":6}],["                                                                                      ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    16,13         Bot ",{}]]},"cursor":{"x":12,"y":5}}],[0.02858,{"lines":{"3":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"5":[["            }                                                                                      ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    15,22         Bot ",{}]]},"cursor":{"x":21,"y":4}}],[0.031711,{"lines":{"3":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) ",{}],["{",{"bg":6}],["                                                             ",{}]],"5":[["            ",{}],["}",{"bg":6}],["                                                                                      ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    14,38         Bot ",{}]]},"cursor":{"x":37,"y":3}}],[0.030132,{"lines":{"3":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"5":[["            }                                                                                      ",{}]],"37":[["\"ch15.cpp\" 40L, 1061C written                                                    13,39         Bot ",{}]]},"cursor":{"x":38,"y":2}}],[0.027417,{"lines":{"37":[["\"ch15.cpp\" 40L, 1061C written                                                    12,39         Bot ",{}]]},"cursor":{"y":1}}],[0.030579,{"lines":{"37":[["\"ch15.cpp\" 40L, 1061C written                                                    11,22         Bot ",{}]]},"cursor":{"x":21,"y":0}}],[0.03644,{"lines":{"0":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) ",{}],["{",{"bg":6}],["                                                                ",{}]],"1":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"2":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"3":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"4":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"5":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"6":[["            }                                                                                      ",{}]],"7":[["            count += rit->count;                                                                   ",{}]],"8":[["        }                                                                                          ",{}]],"9":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"10":[["    ",{}],["}",{"bg":6}],["                                                                                              ",{}]],"11":[["                                                                                                   ",{}]],"12":[["public",{"fg":3}],[":                                                                                            ",{}]],"13":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"14":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"15":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"16":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"17":[["        events.push_back(Event(count, time()));                                                    ",{}]],"18":[["    }                                                                                              ",{}]],"19":[["                                                                                                   ",{}]],"20":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"21":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"22":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"26":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"27":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["3600",{"fg":1}],[");                                                          ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["};                                                                                                 ",{}]],"30":[["                                                                                                   ",{}]],"37":[["                                                                                 10,35         Bot ",{}]]},"cursor":{"x":34}}],[0.028906,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"2":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"3":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"4":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"5":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"6":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"7":[["            }                                                                                      ",{}]],"8":[["            count += rit->count;                                                                   ",{}]],"9":[["        }                                                                                          ",{}]],"10":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"11":[["    }                                                                                              ",{}]],"12":[["                                                                                                   ",{}]],"13":[["public",{"fg":3}],[":                                                                                            ",{}]],"14":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"15":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"16":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"17":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"18":[["        events.push_back(Event(count, time()));                                                    ",{}]],"19":[["    }                                                                                              ",{}]],"20":[["                                                                                                   ",{}]],"21":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"22":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"23":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"27":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"28":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["3600",{"fg":1}],[");                                                          ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["};                                                                                                 ",{}]],"31":[["                                                                                                   ",{}]],"37":[["                                                                                 9,0-1         Bot ",{}]]},"cursor":{"x":0}}],[0.030639,{"lines":{"0":[["    list<Event> events;                                                                            ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"3":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"4":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"5":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"6":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"7":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"8":[["            }                                                                                      ",{}]],"9":[["            count += rit->count;                                                                   ",{}]],"10":[["        }                                                                                          ",{}]],"11":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"12":[["    }                                                                                              ",{}]],"13":[["                                                                                                   ",{}]],"14":[["public",{"fg":3}],[":                                                                                            ",{}]],"15":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"16":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"17":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"18":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"19":[["        events.push_back(Event(count, time()));                                                    ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"23":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"24":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"28":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"29":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["3600",{"fg":1}],[");                                                          ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["};                                                                                                 ",{}]],"32":[["                                                                                                   ",{}]],"37":[["                                                                                 8,23          Bot ",{}]]},"cursor":{"x":22}}],[0.028954,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["    list<Event> events;                                                                            ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"4":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"5":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"6":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"7":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"8":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"9":[["            }                                                                                      ",{}]],"10":[["            count += rit->count;                                                                   ",{}]],"11":[["        }                                                                                          ",{}]],"12":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"13":[["    }                                                                                              ",{}]],"14":[["                                                                                                   ",{}]],"15":[["public",{"fg":3}],[":                                                                                            ",{}]],"16":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"17":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"18":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"19":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"20":[["        events.push_back(Event(count, time()));                                                    ",{}]],"21":[["    }                                                                                              ",{}]],"22":[["                                                                                                   ",{}]],"23":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"24":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"25":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"29":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"30":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["3600",{"fg":1}],[");                                                          ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["};                                                                                                 ",{}]],"33":[["                                                                                                   ",{}]],"37":[["                                                                                 7,0-1         Bot ",{}]]},"cursor":{"x":0}}],[0.028924,{"lines":{"0":[["    };                                                                                             ",{}]],"1":[["                                                                                                   ",{}]],"2":[["    list<Event> events;                                                                            ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"5":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"6":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"7":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"8":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"9":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"10":[["            }                                                                                      ",{}]],"11":[["            count += rit->count;                                                                   ",{}]],"12":[["        }                                                                                          ",{}]],"13":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"14":[["    }                                                                                              ",{}]],"15":[["                                                                                                   ",{}]],"16":[["public",{"fg":3}],[":                                                                                            ",{}]],"17":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"18":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"19":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"20":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"21":[["        events.push_back(Event(count, time()));                                                    ",{}]],"22":[["    }                                                                                              ",{}]],"23":[["                                                                                                   ",{}]],"24":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"25":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"26":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"30":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"31":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["3600",{"fg":1}],[");                                                          ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["};                                                                                                 ",{}]],"34":[["                                                                                                   ",{}]],"37":[["                                                                                 6,6           Bot ",{}]]},"cursor":{"x":5}}],[0.030063,{"lines":{"0":[["        ",{}],["time_t",{"fg":2}],[" time;                                                                               ",{}]],"1":[["    };                                                                                             ",{}]],"2":[["                                                                                                   ",{}]],"3":[["    list<Event> events;                                                                            ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"6":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"7":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"8":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"9":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"10":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"11":[["            }                                                                                      ",{}]],"12":[["            count += rit->count;                                                                   ",{}]],"13":[["        }                                                                                          ",{}]],"14":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"15":[["    }                                                                                              ",{}]],"16":[["                                                                                                   ",{}]],"17":[["public",{"fg":3}],[":                                                                                            ",{}]],"18":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"19":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"20":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"21":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"22":[["        events.push_back(Event(count, time()));                                                    ",{}]],"23":[["    }                                                                                              ",{}]],"24":[["                                                                                                   ",{}]],"25":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"26":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"27":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"31":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"32":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["3600",{"fg":1}],[");                                                          ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["};                                                                                                 ",{}]],"35":[["                                                                                                   ",{}]],"37":[["                                                                                 5,20          Bot ",{}]]},"cursor":{"x":19}}],[0.032334,{"lines":{"0":[["        ",{}],["int",{"fg":2}],[" count;                                                                                 ",{}]],"1":[["        ",{}],["time_t",{"fg":2}],[" time;                                                                               ",{}]],"2":[["    };                                                                                             ",{}]],"3":[["                                                                                                   ",{}]],"4":[["    list<Event> events;                                                                            ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"7":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"8":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"9":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"10":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"11":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"12":[["            }                                                                                      ",{}]],"13":[["            count += rit->count;                                                                   ",{}]],"14":[["        }                                                                                          ",{}]],"15":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"16":[["    }                                                                                              ",{}]],"17":[["                                                                                                   ",{}]],"18":[["public",{"fg":3}],[":                                                                                            ",{}]],"19":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"20":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"21":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"22":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"23":[["        events.push_back(Event(count, time()));                                                    ",{}]],"24":[["    }                                                                                              ",{}]],"25":[["                                                                                                   ",{}]],"26":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"27":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"28":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"29":[["    }                                                                                              ",{}]],"30":[["                                                                                                   ",{}]],"31":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"32":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"33":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["3600",{"fg":1}],[");                                                          ",{}]],"34":[["    }                                                                                              ",{}]],"35":[["};                                                                                                 ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                 4,18          Bot ",{}]]},"cursor":{"x":17}}],[0.029336,{"lines":{"0":[["        Event(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" time) : count(count), time(time) {}                                ",{}]],"1":[["        ",{}],["int",{"fg":2}],[" count;                                                                                 ",{}]],"2":[["        ",{}],["time_t",{"fg":2}],[" time;                                                                               ",{}]],"3":[["    };                                                                                             ",{}]],"4":[["                                                                                                   ",{}]],"5":[["    list<Event> events;                                                                            ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"8":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"9":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"10":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"11":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"12":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"13":[["            }                                                                                      ",{}]],"14":[["            count += rit->count;                                                                   ",{}]],"15":[["        }                                                                                          ",{}]],"16":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"17":[["    }                                                                                              ",{}]],"18":[["                                                                                                   ",{}]],"19":[["public",{"fg":3}],[":                                                                                            ",{}]],"20":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"21":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"22":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"23":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"24":[["        events.push_back(Event(count, time()));                                                    ",{}]],"25":[["    }                                                                                              ",{}]],"26":[["                                                                                                   ",{}]],"27":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"28":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"29":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"30":[["    }                                                                                              ",{}]],"31":[["                                                                                                   ",{}]],"32":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"33":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"34":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["3600",{"fg":1}],[");                                                          ",{}]],"35":[["    }                                                                                              ",{}]],"36":[["};                                                                                                 ",{}]],"37":[["                                                                                 3,39          66% ",{}]]},"cursor":{"x":38}}],[0.030109,{"lines":{"0":[["    ",{}],["struct",{"fg":2}],[" Event ",{}],["{",{"bg":6}],["                                                                                 ",{}]],"1":[["        Event(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" time) : count(count), time(time) {}                                ",{}]],"2":[["        ",{}],["int",{"fg":2}],[" count;                                                                                 ",{}]],"3":[["        ",{}],["time_t",{"fg":2}],[" time;                                                                               ",{}]],"4":[["    ",{}],["}",{"bg":6}],[";                                                                                             ",{}]],"5":[["                                                                                                   ",{}]],"6":[["    list<Event> events;                                                                            ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"9":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"10":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"11":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"12":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"13":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"14":[["            }                                                                                      ",{}]],"15":[["            count += rit->count;                                                                   ",{}]],"16":[["        }                                                                                          ",{}]],"17":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"18":[["    }                                                                                              ",{}]],"19":[["                                                                                                   ",{}]],"20":[["public",{"fg":3}],[":                                                                                            ",{}]],"21":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"22":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"23":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"24":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"25":[["        events.push_back(Event(count, time()));                                                    ",{}]],"26":[["    }                                                                                              ",{}]],"27":[["                                                                                                   ",{}]],"28":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"29":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"30":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"31":[["    }                                                                                              ",{}]],"32":[["                                                                                                   ",{}]],"33":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"34":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"35":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["3600",{"fg":1}],[");                                                          ",{}]],"36":[["    }                                                                                              ",{}]],"37":[["                                                                                 2,18          33% ",{}]]},"cursor":{"x":17}}],[0.039965,{"lines":{"0":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"1":[["    ",{}],["struct",{"fg":2}],[" Event {                                                                                 ",{}]],"2":[["        Event(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" time) : count(count), time(time) {}                                ",{}]],"3":[["        ",{}],["int",{"fg":2}],[" count;                                                                                 ",{}]],"4":[["        ",{}],["time_t",{"fg":2}],[" time;                                                                               ",{}]],"5":[["    };                                                                                             ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    list<Event> events;                                                                            ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"10":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"11":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"12":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"13":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"14":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"15":[["            }                                                                                      ",{}]],"16":[["            count += rit->count;                                                                   ",{}]],"17":[["        }                                                                                          ",{}]],"18":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"19":[["    }                                                                                              ",{}]],"20":[["                                                                                                   ",{}]],"21":[["public",{"fg":3}],[":                                                                                            ",{}]],"22":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"23":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"24":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"25":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"26":[["        events.push_back(Event(count, time()));                                                    ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"30":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"31":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"35":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"36":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["3600",{"fg":1}],[");                                                          ",{}]],"37":[["                                                                                 1,25          Top ",{}]]},"cursor":{"x":24}}],[0.023954,{}],[0.024915,{}],[0.030538,{}],[0.03117,{}],[0.030226,{}],[0.030022,{}],[0.030451,{}],[3.123484,{"lines":{"0":[["                                                                                                   ",{}]],"1":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"2":[["    ",{}],["struct",{"fg":2}],[" Event {                                                                                 ",{}]],"3":[["        Event(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" time) : count(count), time(time) {}                                ",{}]],"4":[["        ",{}],["int",{"fg":2}],[" count;                                                                                 ",{}]],"5":[["        ",{}],["time_t",{"fg":2}],[" time;                                                                               ",{}]],"6":[["    };                                                                                             ",{}]],"7":[["                                                                                                   ",{}]],"8":[["    list<Event> events;                                                                            ",{}]],"9":[["                                                                                                   ",{}]],"10":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"11":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"12":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"13":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"14":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"15":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"16":[["            }                                                                                      ",{}]],"17":[["            count += rit->count;                                                                   ",{}]],"18":[["        }                                                                                          ",{}]],"19":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"20":[["    }                                                                                              ",{}]],"21":[["                                                                                                   ",{}]],"22":[["public",{"fg":3}],[":                                                                                            ",{}]],"23":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"24":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"25":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"26":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"27":[["        events.push_back(Event(count, time()));                                                    ",{}]],"28":[["    }                                                                                              ",{}]],"29":[["                                                                                                   ",{}]],"30":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"31":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"32":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"33":[["    }                                                                                              ",{}]],"34":[["                                                                                                   ",{}]],"35":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"36":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,1           Top ",{}]]},"cursor":{"x":0}}],[0.568047,{"lines":{"0":[["/                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,2           Top ",{}]]},"cursor":{"x":1}}],[0.143909,{"lines":{"0":[["//",{"fg":4}],["                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,3           Top ",{}]]},"cursor":{"x":2}}],[0.112113,{"lines":{"0":[["// ",{"fg":4}],["                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,4           Top ",{}]]},"cursor":{"x":3}}],[0.216193,{"lines":{"0":[["// B",{"fg":4}],["                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,5           Top ",{}]]},"cursor":{"x":4}}],[0.087686,{"lines":{"0":[["// Bu",{"fg":4}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,6           Top ",{}]]},"cursor":{"x":5}}],[0.272102,{"lines":{"0":[["// But",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,7           Top ",{}]]},"cursor":{"x":6}}],[0.159971,{"lines":{"0":[["// But ",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,8           Top ",{}]]},"cursor":{"x":7}}],[0.240228,{"lines":{"0":[["// But i",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,9           Top ",{}]]},"cursor":{"x":8}}],[0.07177799999999999,{"lines":{"0":[["// But it",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,10          Top ",{}]]},"cursor":{"x":9}}],[0.072032,{"lines":{"0":[["// But it ",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,11          Top ",{}]]},"cursor":{"x":10}}],[0.520252,{"lines":{"0":[["// But it h",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,12          Top ",{}]]},"cursor":{"x":11}}],[0.087781,{"lines":{"0":[["// But it ha",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,13          Top ",{}]]},"cursor":{"x":12}}],[0.095996,{"lines":{"0":[["// But it has",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,14          Top ",{}]]},"cursor":{"x":13}}],[0.079886,{"lines":{"0":[["// But it has ",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,15          Top ",{}]]},"cursor":{"x":14}}],[0.408229,{"lines":{"0":[["// But it has s",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,16          Top ",{}]]},"cursor":{"x":15}}],[0.255951,{"lines":{"0":[["// But it has so",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,17          Top ",{}]]},"cursor":{"x":16}}],[0.175986,{"lines":{"0":[["// But it has som",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,18          Top ",{}]]},"cursor":{"x":17}}],[0.080431,{"lines":{"0":[["// But it has some",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,19          Top ",{}]]},"cursor":{"x":18}}],[0.08755,{"lines":{"0":[["// But it has some ",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,20          Top ",{}]]},"cursor":{"x":19}}],[0.471949,{"lines":{"0":[["// But it has some p",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,21          Top ",{}]]},"cursor":{"x":20}}],[0.07990999999999999,{"lines":{"0":[["// But it has some pe",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,22          Top ",{}]]},"cursor":{"x":21}}],[0.079971,{"lines":{"0":[["// But it has some per",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,23          Top ",{}]]},"cursor":{"x":22}}],[0.552226,{"lines":{"0":[["// But it has some perf",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,24          Top ",{}]]},"cursor":{"x":23}}],[0.207931,{"lines":{"0":[["// But it has some perf ",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,25          Top ",{}]]},"cursor":{"x":24}}],[0.5439079999999999,{"lines":{"0":[["// But it has some perf i",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,26          Top ",{}]]},"cursor":{"x":25}}],[0.128063,{"lines":{"0":[["// But it has some perf is",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,27          Top ",{}]]},"cursor":{"x":26}}],[0.151988,{"lines":{"0":[["// But it has some perf iss",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,28          Top ",{}]]},"cursor":{"x":27}}],[0.200102,{"lines":{"0":[["// But it has some perf issu",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,29          Top ",{}]]},"cursor":{"x":28}}],[0.119943,{"lines":{"0":[["// But it has some perf issue",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,30          Top ",{}]]},"cursor":{"x":29}}],[0.192002,{"lines":{"0":[["// But it has some perf issues",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,31          Top ",{}]]},"cursor":{"x":30}}],[0.240173,{"lines":{"0":[["// But it has some perf issues.",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,32          Top ",{}]]},"cursor":{"x":31}}],[1.215789,{"lines":{"0":[["// But it has some perf issues. ",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,33          Top ",{}]]},"cursor":{"x":32}}],[0.255926,{"lines":{"0":[["// But it has some perf issues. L",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,34          Top ",{}]]},"cursor":{"x":33}}],[0.16014,{"lines":{"0":[["// But it has some perf issues. Le",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,35          Top ",{}]]},"cursor":{"x":34}}],[0.104142,{"lines":{"0":[["// But it has some perf issues. Let",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,36          Top ",{}]]},"cursor":{"x":35}}],[0.258603,{"lines":{"0":[["// But it has some perf issues. Let'",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,37          Top ",{}]]},"cursor":{"x":36}}],[0.037281,{"lines":{"0":[["// But it has some perf issues. Let's",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,38          Top ",{}]]},"cursor":{"x":37}}],[0.07996499999999999,{"lines":{"0":[["// But it has some perf issues. Let's ",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,39          Top ",{}]]},"cursor":{"x":38}}],[0.135807,{"lines":{"0":[["// But it has some perf issues. Let's i",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,40          Top ",{}]]},"cursor":{"x":39}}],[0.112161,{"lines":{"0":[["// But it has some perf issues. Let's im",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,41          Top ",{}]]},"cursor":{"x":40}}],[0.14391,{"lines":{"0":[["// But it has some perf issues. Let's imp",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,42          Top ",{}]]},"cursor":{"x":41}}],[0.088014,{"lines":{"0":[["// But it has some perf issues. Let's impo",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,43          Top ",{}]]},"cursor":{"x":42}}],[0.616007,{"lines":{"0":[["// But it has some perf issues. Let's imp",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,42          Top ",{}]]},"cursor":{"x":41}}],[0.111972,{"lines":{"0":[["// But it has some perf issues. Let's impr",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,43          Top ",{}]]},"cursor":{"x":42}}],[0.120082,{"lines":{"0":[["// But it has some perf issues. Let's impro",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,44          Top ",{}]]},"cursor":{"x":43}}],[0.184106,{"lines":{"0":[["// But it has some perf issues. Let's improv",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,45          Top ",{}]]},"cursor":{"x":44}}],[0.103808,{"lines":{"0":[["// But it has some perf issues. Let's improve",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,46          Top ",{}]]},"cursor":{"x":45}}],[0.112055,{"lines":{"0":[["// But it has some perf issues. Let's improve ",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,47          Top ",{}]]},"cursor":{"x":46}}],[0.208193,{"lines":{"0":[["// But it has some perf issues. Let's improve i",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,48          Top ",{}]]},"cursor":{"x":47}}],[0.103999,{"lines":{"0":[["// But it has some perf issues. Let's improve it",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,49          Top ",{}]]},"cursor":{"x":48}}],[0.09586,{"lines":{"0":[["// But it has some perf issues. Let's improve it ",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,50          Top ",{}]]},"cursor":{"x":49}}],[0.936039,{"lines":{"0":[["// But it has some perf issues. Let's improve it a",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,51          Top ",{}]]},"cursor":{"x":50}}],[0.112201,{"lines":{"0":[["// But it has some perf issues. Let's improve it as",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,52          Top ",{}]]},"cursor":{"x":51}}],[0.119893,{"lines":{"0":[["// But it has some perf issues. Let's improve it as ",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,53          Top ",{}]]},"cursor":{"x":52}}],[0.200019,{"lines":{"0":[["// But it has some perf issues. Let's improve it as n",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,54          Top ",{}]]},"cursor":{"x":53}}],[0.063855,{"lines":{"0":[["// But it has some perf issues. Let's improve it as ne",{"fg":4}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,55          Top ",{}]]},"cursor":{"x":54}}],[0.200033,{"lines":{"0":[["// But it has some perf issues. Let's improve it as nex",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,56          Top ",{}]]},"cursor":{"x":55}}],[0.135983,{"lines":{"0":[["// But it has some perf issues. Let's improve it as next",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,57          Top ",{}]]},"cursor":{"x":56}}],[0.08004600000000001,{"lines":{"0":[["// But it has some perf issues. Let's improve it as next ",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,58          Top ",{}]]},"cursor":{"x":57}}],[0.192084,{"lines":{"0":[["// But it has some perf issues. Let's improve it as next s",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,59          Top ",{}]]},"cursor":{"x":58}}],[0.135564,{"lines":{"0":[["// But it has some perf issues. Let's improve it as next st",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,60          Top ",{}]]},"cursor":{"x":59}}],[0.096332,{"lines":{"0":[["// But it has some perf issues. Let's improve it as next ste",{"fg":4}],["                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,61          Top ",{}]]},"cursor":{"x":60}}],[0.152397,{"lines":{"0":[["// But it has some perf issues. Let's improve it as next step",{"fg":4}],["                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,62          Top ",{}]]},"cursor":{"x":61}}],[0.623675,{"lines":{"0":[["// But it has some perf issues. Let's improve it as next ste",{"fg":4}],["                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,61          Top ",{}]]},"cursor":{"x":60}}],[0.499805,{"lines":{"0":[["// But it has some perf issues. Let's improve it as next st",{"fg":4}],["                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,60          Top ",{}]]},"cursor":{"x":59}}],[0.031526,{"lines":{"0":[["// But it has some perf issues. Let's improve it as next s",{"fg":4}],["                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,59          Top ",{}]]},"cursor":{"x":58}}],[0.032078,{"lines":{"0":[["// But it has some perf issues. Let's improve it as next ",{"fg":4}],["                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,58          Top ",{}]]},"cursor":{"x":57}}],[0.030205,{"lines":{"0":[["// But it has some perf issues. Let's improve it as next",{"fg":4}],["                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,57          Top ",{}]]},"cursor":{"x":56}}],[0.029727,{"lines":{"0":[["// But it has some perf issues. Let's improve it as nex",{"fg":4}],["                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,56          Top ",{}]]},"cursor":{"x":55}}],[0.029838,{"lines":{"0":[["// But it has some perf issues. Let's improve it as ne",{"fg":4}],["                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,55          Top ",{}]]},"cursor":{"x":54}}],[0.030103,{"lines":{"0":[["// But it has some perf issues. Let's improve it as n",{"fg":4}],["                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,54          Top ",{}]]},"cursor":{"x":53}}],[0.030531,{"lines":{"0":[["// But it has some perf issues. Let's improve it as ",{"fg":4}],["                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,53          Top ",{}]]},"cursor":{"x":52}}],[0.03036,{"lines":{"0":[["// But it has some perf issues. Let's improve it as",{"fg":4}],["                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,52          Top ",{}]]},"cursor":{"x":51}}],[0.030368,{"lines":{"0":[["// But it has some perf issues. Let's improve it a",{"fg":4}],["                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,51          Top ",{}]]},"cursor":{"x":50}}],[0.030206,{"lines":{"0":[["// But it has some perf issues. Let's improve it ",{"fg":4}],["                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,50          Top ",{}]]},"cursor":{"x":49}}],[0.03069,{"lines":{"0":[["// But it has some perf issues. Let's improve it",{"fg":4}],["                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,49          Top ",{}]]},"cursor":{"x":48}}],[0.03098,{"lines":{"0":[["// But it has some perf issues. Let's improve i",{"fg":4}],["                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,48          Top ",{}]]},"cursor":{"x":47}}],[0.02992,{"lines":{"0":[["// But it has some perf issues. Let's improve ",{"fg":4}],["                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,47          Top ",{}]]},"cursor":{"x":46}}],[0.031536,{"lines":{"0":[["// But it has some perf issues. Let's improve",{"fg":4}],["                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,46          Top ",{}]]},"cursor":{"x":45}}],[0.02912,{"lines":{"0":[["// But it has some perf issues. Let's improv",{"fg":4}],["                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,45          Top ",{}]]},"cursor":{"x":44}}],[0.030983,{"lines":{"0":[["// But it has some perf issues. Let's impro",{"fg":4}],["                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,44          Top ",{}]]},"cursor":{"x":43}}],[0.03099,{"lines":{"0":[["// But it has some perf issues. Let's impr",{"fg":4}],["                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,43          Top ",{}]]},"cursor":{"x":42}}],[0.031088,{"lines":{"0":[["// But it has some perf issues. Let's imp",{"fg":4}],["                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,42          Top ",{}]]},"cursor":{"x":41}}],[0.029801,{"lines":{"0":[["// But it has some perf issues. Let's im",{"fg":4}],["                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,41          Top ",{}]]},"cursor":{"x":40}}],[0.030566,{"lines":{"0":[["// But it has some perf issues. Let's i",{"fg":4}],["                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,40          Top ",{}]]},"cursor":{"x":39}}],[0.030536,{"lines":{"0":[["// But it has some perf issues. Let's ",{"fg":4}],["                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,39          Top ",{}]]},"cursor":{"x":38}}],[0.03092,{"lines":{"0":[["// But it has some perf issues. Let's",{"fg":4}],["                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,38          Top ",{}]]},"cursor":{"x":37}}],[0.031504,{"lines":{"0":[["// But it has some perf issues. Let'",{"fg":4}],["                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,37          Top ",{}]]},"cursor":{"x":36}}],[0.03102,{"lines":{"0":[["// But it has some perf issues. Let",{"fg":4}],["                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,36          Top ",{}]]},"cursor":{"x":35}}],[0.031003,{"lines":{"0":[["// But it has some perf issues. Le",{"fg":4}],["                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,35          Top ",{}]]},"cursor":{"x":34}}],[0.029449,{"lines":{"0":[["// But it has some perf issues. L",{"fg":4}],["                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,34          Top ",{}]]},"cursor":{"x":33}}],[0.027553,{"lines":{"0":[["// But it has some perf issues. ",{"fg":4}],["                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,33          Top ",{}]]},"cursor":{"x":32}}],[0.030695,{"lines":{"0":[["// But it has some perf issues.",{"fg":4}],["                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,32          Top ",{}]]},"cursor":{"x":31}}],[0.033957,{"lines":{"0":[["// But it has some perf issues",{"fg":4}],["                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,31          Top ",{}]]},"cursor":{"x":30}}],[0.030546,{"lines":{"0":[["// But it has some perf issue",{"fg":4}],["                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,30          Top ",{}]]},"cursor":{"x":29}}],[0.027096,{"lines":{"0":[["// But it has some perf issu",{"fg":4}],["                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,29          Top ",{}]]},"cursor":{"x":28}}],[0.030508,{"lines":{"0":[["// But it has some perf iss",{"fg":4}],["                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,28          Top ",{}]]},"cursor":{"x":27}}],[0.030527,{"lines":{"0":[["// But it has some perf is",{"fg":4}],["                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,27          Top ",{}]]},"cursor":{"x":26}}],[0.030436,{"lines":{"0":[["// But it has some perf i",{"fg":4}],["                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,26          Top ",{}]]},"cursor":{"x":25}}],[0.031007,{"lines":{"0":[["// But it has some perf ",{"fg":4}],["                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,25          Top ",{}]]},"cursor":{"x":24}}],[0.030583,{"lines":{"0":[["// But it has some perf",{"fg":4}],["                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,24          Top ",{}]]},"cursor":{"x":23}}],[0.031497,{"lines":{"0":[["// But it has some per",{"fg":4}],["                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,23          Top ",{}]]},"cursor":{"x":22}}],[0.03198,{"lines":{"0":[["// But it has some pe",{"fg":4}],["                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,22          Top ",{}]]},"cursor":{"x":21}}],[0.030663,{"lines":{"0":[["// But it has some p",{"fg":4}],["                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,21          Top ",{}]]},"cursor":{"x":20}}],[0.030505,{"lines":{"0":[["// But it has some ",{"fg":4}],["                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,20          Top ",{}]]},"cursor":{"x":19}}],[0.030723,{"lines":{"0":[["// But it has some",{"fg":4}],["                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,19          Top ",{}]]},"cursor":{"x":18}}],[0.030323,{"lines":{"0":[["// But it has som",{"fg":4}],["                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,18          Top ",{}]]},"cursor":{"x":17}}],[0.031211,{"lines":{"0":[["// But it has so",{"fg":4}],["                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,17          Top ",{}]]},"cursor":{"x":16}}],[0.030739,{"lines":{"0":[["// But it has s",{"fg":4}],["                                                                                    ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,16          Top ",{}]]},"cursor":{"x":15}}],[0.029854,{"lines":{"0":[["// But it has ",{"fg":4}],["                                                                                     ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,15          Top ",{}]]},"cursor":{"x":14}}],[0.030584,{"lines":{"0":[["// But it has",{"fg":4}],["                                                                                      ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,14          Top ",{}]]},"cursor":{"x":13}}],[0.030656,{"lines":{"0":[["// But it ha",{"fg":4}],["                                                                                       ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,13          Top ",{}]]},"cursor":{"x":12}}],[0.031939,{"lines":{"0":[["// But it h",{"fg":4}],["                                                                                        ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,12          Top ",{}]]},"cursor":{"x":11}}],[0.030759,{"lines":{"0":[["// But it ",{"fg":4}],["                                                                                         ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,11          Top ",{}]]},"cursor":{"x":10}}],[0.029617,{"lines":{"0":[["// But it",{"fg":4}],["                                                                                          ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,10          Top ",{}]]},"cursor":{"x":9}}],[0.029946,{"lines":{"0":[["// But i",{"fg":4}],["                                                                                           ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,9           Top ",{}]]},"cursor":{"x":8}}],[0.03166,{"lines":{"0":[["// But ",{"fg":4}],["                                                                                            ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,8           Top ",{}]]},"cursor":{"x":7}}],[0.030021,{"lines":{"0":[["// But",{"fg":4}],["                                                                                             ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,7           Top ",{}]]},"cursor":{"x":6}}],[0.031277,{"lines":{"0":[["// Bu",{"fg":4}],["                                                                                              ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,6           Top ",{}]]},"cursor":{"x":5}}],[0.080945,{"lines":{"0":[["// B",{"fg":4}],["                                                                                               ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,5           Top ",{}]]},"cursor":{"x":4}}],[0.09514499999999999,{"lines":{"0":[["// ",{"fg":4}],["                                                                                                ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,4           Top ",{}]]},"cursor":{"x":3}}],[0.175974,{"lines":{"0":[["//",{"fg":4}],["                                                                                                 ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,3           Top ",{}]]},"cursor":{"x":2}}],[0.168153,{"lines":{"0":[["/                                                                                                  ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,2           Top ",{}]]},"cursor":{"x":1}}],[0.13582,{"lines":{"0":[["                                                                                                   ",{}]],"37":[["-- INSERT --",{"bold":true}],["                                                                     1,1           Top ",{}]]},"cursor":{"x":0}}],[0.168697,{"lines":{"37":[["                                                                                                   ",{}]]}}],[0.486983,{"lines":{"37":[["                                                                                 1,0-1         Top ",{}]]}}],[0.599984,{}],[0.161801,{"lines":{"0":[["class",{"fg":2}],[" MinuteHourCounter {                                                                          ",{}]],"1":[["    ",{}],["struct",{"fg":2}],[" Event {                                                                                 ",{}]],"2":[["        Event(",{}],["int",{"fg":2}],[" count, ",{}],["time_t",{"fg":2}],[" time) : count(count), time(time) {}                                ",{}]],"3":[["        ",{}],["int",{"fg":2}],[" count;                                                                                 ",{}]],"4":[["        ",{}],["time_t",{"fg":2}],[" time;                                                                               ",{}]],"5":[["    };                                                                                             ",{}]],"6":[["                                                                                                   ",{}]],"7":[["    list<Event> events;                                                                            ",{}]],"8":[["                                                                                                   ",{}]],"9":[["    ",{}],["int",{"fg":2}],[" CountSince(",{}],["time_t",{"fg":2}],[" cutoff) {                                                                ",{}]],"10":[["        ",{}],["int",{"fg":2}],[" count = ",{}],["0",{"fg":1}],[";                                                                             ",{}]],"11":[["        ",{}],["const",{"fg":2}],[" ",{}],["time_t",{"fg":2}],[" now_secs = time();                                                            ",{}]],"12":[["        ",{}],["for",{"fg":3}],[" (list<Event>::reverse_iterator rit = events.rbegin(); rit != evetns.rend(); ++rit) {   ",{}]],"13":[["            ",{}],["if",{"fg":3}],[" (rit->time <= cutoff) {                                                             ",{}]],"14":[["                ",{}],["break",{"fg":3}],[";                                                                             ",{}]],"15":[["            }                                                                                      ",{}]],"16":[["            count += rit->count;                                                                   ",{}]],"17":[["        }                                                                                          ",{}]],"18":[["        ",{}],["return",{"fg":3}],[" count;                                                                              ",{}]],"19":[["    }                                                                                              ",{}]],"20":[["                                                                                                   ",{}]],"21":[["public",{"fg":3}],[":                                                                                            ",{}]],"22":[["    ",{}],["// Add a new data point (count >= 0)",{"fg":4}],["                                                           ",{}]],"23":[["    ",{}],["// For the next minute, MinuteCount() will be larger by +count",{"fg":4}],["                                 ",{}]],"24":[["    ",{}],["// For the next hourm, HourCount() will be larger by +count",{"fg":4}],["                                    ",{}]],"25":[["    ",{}],["void",{"fg":2}],[" Add(",{}],["int",{"fg":2}],[" count) {                                                                          ",{}]],"26":[["        events.push_back(Event(count, time()));                                                    ",{}]],"27":[["    }                                                                                              ",{}]],"28":[["                                                                                                   ",{}]],"29":[["    ",{}],["// Return the accumulated count over the past 60 seconds",{"fg":4}],["                                       ",{}]],"30":[["    ",{}],["int",{"fg":2}],[" MinuteCount() {                                                                            ",{}]],"31":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["60",{"fg":1}],[");                                                            ",{}]],"32":[["    }                                                                                              ",{}]],"33":[["                                                                                                   ",{}]],"34":[["    ",{}],["// Return the accumulated count over the past 3600 seconds.",{"fg":4}],["                                    ",{}]],"35":[["    ",{}],["int",{"fg":2}],[" HourCount() {                                                                              ",{}]],"36":[["        ",{}],["return",{"fg":3}],[" CountSince(time() - ",{}],["3600",{"fg":1}],[");                                                          ",{}]],"37":[["                                                                                 1,1           Top ",{}]]}}],[0.5178469999999999,{"lines":{"37":[[":                                                                                                  ",{}]]},"cursor":{"x":1,"y":37}}],[0.112588,{"lines":{"37":[[":w                                                                                                 ",{}]]},"cursor":{"x":2}}],[0.152769,{"lines":{"37":[[":wq                                                                                                ",{}]]},"cursor":{"x":3}}],[0.143465,{"lines":{"37":[["\"ch15.cpp\"                                                                                         ",{}]]},"cursor":{"x":10,"visible":false}}],[0.061077,{"lines":{"0":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ vim ch15.cpp                                          ",{}]],"1":[["                                                                                                   ",{}]],"2":[["                                                                                                   ",{}]],"3":[["                                                                                                   ",{}]],"4":[["                                                                                                   ",{}]],"5":[["                                                                                                   ",{}]],"7":[["                                                                                                   ",{}]],"9":[["                                                                                                   ",{}]],"10":[["                                                                                                   ",{}]],"11":[["                                                                                                   ",{}]],"12":[["                                                                                                   ",{}]],"13":[["                                                                                                   ",{}]],"14":[["                                                                                                   ",{}]],"15":[["                                                                                                   ",{}]],"16":[["                                                                                                   ",{}]],"17":[["                                                                                                   ",{}]],"18":[["                                                                                                   ",{}]],"19":[["                                                                                                   ",{}]],"21":[["                                                                                                   ",{}]],"22":[["                                                                                                   ",{}]],"23":[["                                                                                                   ",{}]],"24":[["                                                                                                   ",{}]],"25":[["                                                                                                   ",{}]],"26":[["                                                                                                   ",{}]],"27":[["                                                                                                   ",{}]],"29":[["                                                                                                   ",{}]],"30":[["                                                                                                   ",{}]],"31":[["                                                                                                   ",{}]],"32":[["                                                                                                   ",{}]],"34":[["                                                                                                   ",{}]],"35":[["                                                                                                   ",{}]],"36":[["                                                                                                   ",{}]],"37":[["                                                                                                   ",{}]]},"cursor":{"x":0,"y":1,"visible":true}}],[0.000336,{"lines":{"1":[["gsong@gsong-desktop:~/ch15-min_hour_counter$                                                       ",{}]]},"cursor":{"x":45}}],[1.346994,{"lines":{"1":[["gsong@gsong-desktop:~/ch15-min_hour_counter$ exit                                                  ",{}]]},"cursor":{"x":0,"y":2}}]]